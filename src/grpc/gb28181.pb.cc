// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gb28181.proto

#include "gb28181.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_gb28181_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeviceList_gb28181_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gb28181_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifPresetInfo_gb28181_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gb28181_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PresetInfo_gb28181_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gb28181_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecordInfo_gb28181_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gb28181_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatusInfo_gb28181_2eproto;
namespace GB28181 {
class PtzCommandRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzCommandRequest> _instance;
} _PtzCommandRequest_default_instance_;
class ControlReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ControlReply> _instance;
} _ControlReply_default_instance_;
class PtzZoomInRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzZoomInRequest> _instance;
} _PtzZoomInRequest_default_instance_;
class PtzZoomInReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzZoomInReply> _instance;
} _PtzZoomInReply_default_instance_;
class PtzZoomOutRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzZoomOutRequest> _instance;
} _PtzZoomOutRequest_default_instance_;
class PtzZoomOutReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzZoomOutReply> _instance;
} _PtzZoomOutReply_default_instance_;
class PtzStopRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzStopRequest> _instance;
} _PtzStopRequest_default_instance_;
class PtzStopReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzStopReply> _instance;
} _PtzStopReply_default_instance_;
class PtzIrisBigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzIrisBigRequest> _instance;
} _PtzIrisBigRequest_default_instance_;
class PtzIrisBigReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzIrisBigReply> _instance;
} _PtzIrisBigReply_default_instance_;
class PtzIrisSmallRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzIrisSmallRequest> _instance;
} _PtzIrisSmallRequest_default_instance_;
class PtzIrisSmallReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzIrisSmallReply> _instance;
} _PtzIrisSmallReply_default_instance_;
class PtzFocusOutRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzFocusOutRequest> _instance;
} _PtzFocusOutRequest_default_instance_;
class PtzFocusOutReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzFocusOutReply> _instance;
} _PtzFocusOutReply_default_instance_;
class PtzFocusInRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzFocusInRequest> _instance;
} _PtzFocusInRequest_default_instance_;
class PtzFocusInReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzFocusInReply> _instance;
} _PtzFocusInReply_default_instance_;
class PtzIFStopRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzIFStopRequest> _instance;
} _PtzIFStopRequest_default_instance_;
class PtzIFStopReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PtzIFStopReply> _instance;
} _PtzIFStopReply_default_instance_;
class RealPlayUrlRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RealPlayUrlRequest> _instance;
} _RealPlayUrlRequest_default_instance_;
class RealPlayUrlReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RealPlayUrlReply> _instance;
} _RealPlayUrlReply_default_instance_;
class RealPlayUrlInRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RealPlayUrlInRequest> _instance;
} _RealPlayUrlInRequest_default_instance_;
class RealPlayUrlInReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RealPlayUrlInReply> _instance;
} _RealPlayUrlInReply_default_instance_;
class GetRTMPUrlRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRTMPUrlRequest> _instance;
} _GetRTMPUrlRequest_default_instance_;
class GetRTMPUrlReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRTMPUrlReply> _instance;
} _GetRTMPUrlReply_default_instance_;
class GetRTMPUrlInRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRTMPUrlInRequest> _instance;
} _GetRTMPUrlInRequest_default_instance_;
class GetRTMPUrlInReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRTMPUrlInReply> _instance;
} _GetRTMPUrlInReply_default_instance_;
class GetHLSUrlRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetHLSUrlRequest> _instance;
} _GetHLSUrlRequest_default_instance_;
class GetHLSUrlReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetHLSUrlReply> _instance;
} _GetHLSUrlReply_default_instance_;
class GetHLSUrlInRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetHLSUrlInRequest> _instance;
} _GetHLSUrlInRequest_default_instance_;
class GetHLSUrlInReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetHLSUrlInReply> _instance;
} _GetHLSUrlInReply_default_instance_;
class StopVideoByIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopVideoByIdRequest> _instance;
} _StopVideoByIdRequest_default_instance_;
class StopVideoByIdReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopVideoByIdReply> _instance;
} _StopVideoByIdReply_default_instance_;
class StopVideoBySsrcRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopVideoBySsrcRequest> _instance;
} _StopVideoBySsrcRequest_default_instance_;
class StopVideoBySsrcReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopVideoBySsrcReply> _instance;
} _StopVideoBySsrcReply_default_instance_;
class PlayBackUrlRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayBackUrlRequest> _instance;
} _PlayBackUrlRequest_default_instance_;
class PlayBackUrlReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayBackUrlReply> _instance;
} _PlayBackUrlReply_default_instance_;
class PresetGoRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PresetGoRequest> _instance;
} _PresetGoRequest_default_instance_;
class PresetSetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PresetSetRequest> _instance;
} _PresetSetRequest_default_instance_;
class PresetDelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PresetDelRequest> _instance;
} _PresetDelRequest_default_instance_;
class PresetQueryRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PresetQueryRequest> _instance;
} _PresetQueryRequest_default_instance_;
class PresetQueryReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PresetQueryReply> _instance;
} _PresetQueryReply_default_instance_;
class GetPresetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPresetRequest> _instance;
} _GetPresetRequest_default_instance_;
class PresetInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PresetInfo> _instance;
} _PresetInfo_default_instance_;
class GetPresetReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetPresetReply> _instance;
} _GetPresetReply_default_instance_;
class QueryRecordRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryRecordRequest> _instance;
} _QueryRecordRequest_default_instance_;
class QueryRecordReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryRecordReply> _instance;
} _QueryRecordReply_default_instance_;
class GetRecordRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRecordRequest> _instance;
} _GetRecordRequest_default_instance_;
class RecordInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecordInfo> _instance;
} _RecordInfo_default_instance_;
class GetRecordReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRecordReply> _instance;
} _GetRecordReply_default_instance_;
class PlayFastRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayFastRequest> _instance;
} _PlayFastRequest_default_instance_;
class PlayFastReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayFastReply> _instance;
} _PlayFastReply_default_instance_;
class PlaySlowRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlaySlowRequest> _instance;
} _PlaySlowRequest_default_instance_;
class PlaySlowReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlaySlowReply> _instance;
} _PlaySlowReply_default_instance_;
class PauseRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PauseRequest> _instance;
} _PauseRequest_default_instance_;
class PauseReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PauseReply> _instance;
} _PauseReply_default_instance_;
class PlayRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayRequest> _instance;
} _PlayRequest_default_instance_;
class PlayReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayReply> _instance;
} _PlayReply_default_instance_;
class SeekRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SeekRequest> _instance;
} _SeekRequest_default_instance_;
class SeekReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SeekReply> _instance;
} _SeekReply_default_instance_;
class GoForwardRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GoForwardRequest> _instance;
} _GoForwardRequest_default_instance_;
class GoForwardReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GoForwardReply> _instance;
} _GoForwardReply_default_instance_;
class GoBackRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GoBackRequest> _instance;
} _GoBackRequest_default_instance_;
class GoBackReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GoBackReply> _instance;
} _GoBackReply_default_instance_;
class StopPlayRecordRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopPlayRecordRequest> _instance;
} _StopPlayRecordRequest_default_instance_;
class StopPlayRecordReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopPlayRecordReply> _instance;
} _StopPlayRecordReply_default_instance_;
class RecordDownloadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecordDownloadRequest> _instance;
} _RecordDownloadRequest_default_instance_;
class RecordDownloadReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecordDownloadReply> _instance;
} _RecordDownloadReply_default_instance_;
class GetDeviceStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDeviceStatusRequest> _instance;
} _GetDeviceStatusRequest_default_instance_;
class GetDeviceStatusReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDeviceStatusReply> _instance;
} _GetDeviceStatusReply_default_instance_;
class GetAllDeviceStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllDeviceStatusRequest> _instance;
} _GetAllDeviceStatusRequest_default_instance_;
class StatusInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StatusInfo> _instance;
} _StatusInfo_default_instance_;
class GetAllDeviceStatusReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetAllDeviceStatusReply> _instance;
} _GetAllDeviceStatusReply_default_instance_;
class GetDeviceListRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDeviceListRequest> _instance;
} _GetDeviceListRequest_default_instance_;
class DeviceListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeviceList> _instance;
} _DeviceList_default_instance_;
class GetDeviceListReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDeviceListReply> _instance;
} _GetDeviceListReply_default_instance_;
class DeviceRebootRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeviceRebootRequest> _instance;
} _DeviceRebootRequest_default_instance_;
class DeviceRebootReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeviceRebootReply> _instance;
} _DeviceRebootReply_default_instance_;
class StartBroadcastRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartBroadcastRequest> _instance;
} _StartBroadcastRequest_default_instance_;
class StartBroadcastReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartBroadcastReply> _instance;
} _StartBroadcastReply_default_instance_;
class StopBroadcastRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopBroadcastRequest> _instance;
} _StopBroadcastRequest_default_instance_;
class StopBroadcastReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopBroadcastReply> _instance;
} _StopBroadcastReply_default_instance_;
class StartTalkRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartTalkRequest> _instance;
} _StartTalkRequest_default_instance_;
class StartTalkReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StartTalkReply> _instance;
} _StartTalkReply_default_instance_;
class StopTalkRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopTalkRequest> _instance;
} _StopTalkRequest_default_instance_;
class StopTalkReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StopTalkReply> _instance;
} _StopTalkReply_default_instance_;
class ServiceStatusRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServiceStatusRequest> _instance;
} _ServiceStatusRequest_default_instance_;
class ServiceStatusReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServiceStatusReply> _instance;
} _ServiceStatusReply_default_instance_;
class OnvifPtzMoveRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifPtzMoveRequest> _instance;
} _OnvifPtzMoveRequest_default_instance_;
class OnvifPtzMoveReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifPtzMoveReply> _instance;
} _OnvifPtzMoveReply_default_instance_;
class OnvifPtzStopRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifPtzStopRequest> _instance;
} _OnvifPtzStopRequest_default_instance_;
class OnvifPtzStopReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifPtzStopReply> _instance;
} _OnvifPtzStopReply_default_instance_;
class OnvifZoomInRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifZoomInRequest> _instance;
} _OnvifZoomInRequest_default_instance_;
class OnvifZoomInReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifZoomInReply> _instance;
} _OnvifZoomInReply_default_instance_;
class OnvifZoomOutRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifZoomOutRequest> _instance;
} _OnvifZoomOutRequest_default_instance_;
class OnvifZoomOutReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifZoomOutReply> _instance;
} _OnvifZoomOutReply_default_instance_;
class OnvifZoomStopRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifZoomStopRequest> _instance;
} _OnvifZoomStopRequest_default_instance_;
class OnvifZoomStopReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifZoomStopReply> _instance;
} _OnvifZoomStopReply_default_instance_;
class OnvifFocusNearRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifFocusNearRequest> _instance;
} _OnvifFocusNearRequest_default_instance_;
class OnvifFocusNearReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifFocusNearReply> _instance;
} _OnvifFocusNearReply_default_instance_;
class OnvifFocusFarRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifFocusFarRequest> _instance;
} _OnvifFocusFarRequest_default_instance_;
class OnvifFocusFarReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifFocusFarReply> _instance;
} _OnvifFocusFarReply_default_instance_;
class OnvifFocusStopRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifFocusStopRequest> _instance;
} _OnvifFocusStopRequest_default_instance_;
class OnvifFocusStopReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifFocusStopReply> _instance;
} _OnvifFocusStopReply_default_instance_;
class OnvifPtz3DRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifPtz3DRequest> _instance;
} _OnvifPtz3DRequest_default_instance_;
class OnvifPtz3DReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifPtz3DReply> _instance;
} _OnvifPtz3DReply_default_instance_;
class OnvifPresetInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifPresetInfo> _instance;
} _OnvifPresetInfo_default_instance_;
class OnvifGetPresetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifGetPresetRequest> _instance;
} _OnvifGetPresetRequest_default_instance_;
class OnvifGetPresetReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifGetPresetReply> _instance;
} _OnvifGetPresetReply_default_instance_;
class OnvifGotoPresetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifGotoPresetRequest> _instance;
} _OnvifGotoPresetRequest_default_instance_;
class OnvifGotoPresetReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifGotoPresetReply> _instance;
} _OnvifGotoPresetReply_default_instance_;
class OnvifSetPresetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifSetPresetRequest> _instance;
} _OnvifSetPresetRequest_default_instance_;
class OnvifSetPresetReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifSetPresetReply> _instance;
} _OnvifSetPresetReply_default_instance_;
class OnvifDeviceRebootRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifDeviceRebootRequest> _instance;
} _OnvifDeviceRebootRequest_default_instance_;
class OnvifDeviceRebootReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifDeviceRebootReply> _instance;
} _OnvifDeviceRebootReply_default_instance_;
class OnvifGetMainUrlRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifGetMainUrlRequest> _instance;
} _OnvifGetMainUrlRequest_default_instance_;
class OnvifGetMainUrlReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifGetMainUrlReply> _instance;
} _OnvifGetMainUrlReply_default_instance_;
class OnvifGetSubUrlRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifGetSubUrlRequest> _instance;
} _OnvifGetSubUrlRequest_default_instance_;
class OnvifGetSubUrlReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OnvifGetSubUrlReply> _instance;
} _OnvifGetSubUrlReply_default_instance_;
}  // namespace GB28181
static void InitDefaultsscc_info_ControlReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_ControlReply_default_instance_;
    new (ptr) ::GB28181::ControlReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::ControlReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ControlReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ControlReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_DeviceList_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_DeviceList_default_instance_;
    new (ptr) ::GB28181::DeviceList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::DeviceList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeviceList_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeviceList_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_DeviceRebootReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_DeviceRebootReply_default_instance_;
    new (ptr) ::GB28181::DeviceRebootReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::DeviceRebootReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeviceRebootReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeviceRebootReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_DeviceRebootRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_DeviceRebootRequest_default_instance_;
    new (ptr) ::GB28181::DeviceRebootRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::DeviceRebootRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeviceRebootRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeviceRebootRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetAllDeviceStatusReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetAllDeviceStatusReply_default_instance_;
    new (ptr) ::GB28181::GetAllDeviceStatusReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetAllDeviceStatusReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetAllDeviceStatusReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetAllDeviceStatusReply_gb28181_2eproto}, {
      &scc_info_StatusInfo_gb28181_2eproto.base,}};

static void InitDefaultsscc_info_GetAllDeviceStatusRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetAllDeviceStatusRequest_default_instance_;
    new (ptr) ::GB28181::GetAllDeviceStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetAllDeviceStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetAllDeviceStatusRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetAllDeviceStatusRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetDeviceListReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetDeviceListReply_default_instance_;
    new (ptr) ::GB28181::GetDeviceListReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetDeviceListReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetDeviceListReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetDeviceListReply_gb28181_2eproto}, {
      &scc_info_DeviceList_gb28181_2eproto.base,}};

static void InitDefaultsscc_info_GetDeviceListRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetDeviceListRequest_default_instance_;
    new (ptr) ::GB28181::GetDeviceListRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetDeviceListRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetDeviceListRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetDeviceListRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetDeviceStatusReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetDeviceStatusReply_default_instance_;
    new (ptr) ::GB28181::GetDeviceStatusReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetDeviceStatusReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetDeviceStatusReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetDeviceStatusReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetDeviceStatusRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetDeviceStatusRequest_default_instance_;
    new (ptr) ::GB28181::GetDeviceStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetDeviceStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetDeviceStatusRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetDeviceStatusRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetHLSUrlInReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetHLSUrlInReply_default_instance_;
    new (ptr) ::GB28181::GetHLSUrlInReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetHLSUrlInReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetHLSUrlInReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetHLSUrlInReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetHLSUrlInRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetHLSUrlInRequest_default_instance_;
    new (ptr) ::GB28181::GetHLSUrlInRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetHLSUrlInRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetHLSUrlInRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetHLSUrlInRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetHLSUrlReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetHLSUrlReply_default_instance_;
    new (ptr) ::GB28181::GetHLSUrlReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetHLSUrlReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetHLSUrlReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetHLSUrlReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetHLSUrlRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetHLSUrlRequest_default_instance_;
    new (ptr) ::GB28181::GetHLSUrlRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetHLSUrlRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetHLSUrlRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetHLSUrlRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetPresetReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetPresetReply_default_instance_;
    new (ptr) ::GB28181::GetPresetReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetPresetReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetPresetReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetPresetReply_gb28181_2eproto}, {
      &scc_info_PresetInfo_gb28181_2eproto.base,}};

static void InitDefaultsscc_info_GetPresetRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetPresetRequest_default_instance_;
    new (ptr) ::GB28181::GetPresetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetPresetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetPresetRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetPresetRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetRTMPUrlInReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetRTMPUrlInReply_default_instance_;
    new (ptr) ::GB28181::GetRTMPUrlInReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetRTMPUrlInReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRTMPUrlInReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRTMPUrlInReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetRTMPUrlInRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetRTMPUrlInRequest_default_instance_;
    new (ptr) ::GB28181::GetRTMPUrlInRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetRTMPUrlInRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRTMPUrlInRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRTMPUrlInRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetRTMPUrlReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetRTMPUrlReply_default_instance_;
    new (ptr) ::GB28181::GetRTMPUrlReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetRTMPUrlReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRTMPUrlReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRTMPUrlReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetRTMPUrlRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetRTMPUrlRequest_default_instance_;
    new (ptr) ::GB28181::GetRTMPUrlRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetRTMPUrlRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRTMPUrlRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRTMPUrlRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GetRecordReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetRecordReply_default_instance_;
    new (ptr) ::GB28181::GetRecordReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetRecordReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetRecordReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetRecordReply_gb28181_2eproto}, {
      &scc_info_RecordInfo_gb28181_2eproto.base,}};

static void InitDefaultsscc_info_GetRecordRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GetRecordRequest_default_instance_;
    new (ptr) ::GB28181::GetRecordRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GetRecordRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRecordRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRecordRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GoBackReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GoBackReply_default_instance_;
    new (ptr) ::GB28181::GoBackReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GoBackReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GoBackReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GoBackReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GoBackRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GoBackRequest_default_instance_;
    new (ptr) ::GB28181::GoBackRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GoBackRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GoBackRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GoBackRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GoForwardReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GoForwardReply_default_instance_;
    new (ptr) ::GB28181::GoForwardReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GoForwardReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GoForwardReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GoForwardReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_GoForwardRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_GoForwardRequest_default_instance_;
    new (ptr) ::GB28181::GoForwardRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::GoForwardRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GoForwardRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GoForwardRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifDeviceRebootReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifDeviceRebootReply_default_instance_;
    new (ptr) ::GB28181::OnvifDeviceRebootReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifDeviceRebootReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifDeviceRebootReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifDeviceRebootReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifDeviceRebootRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifDeviceRebootRequest_default_instance_;
    new (ptr) ::GB28181::OnvifDeviceRebootRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifDeviceRebootRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifDeviceRebootRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifDeviceRebootRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifFocusFarReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifFocusFarReply_default_instance_;
    new (ptr) ::GB28181::OnvifFocusFarReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifFocusFarReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifFocusFarReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifFocusFarReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifFocusFarRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifFocusFarRequest_default_instance_;
    new (ptr) ::GB28181::OnvifFocusFarRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifFocusFarRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifFocusFarRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifFocusFarRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifFocusNearReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifFocusNearReply_default_instance_;
    new (ptr) ::GB28181::OnvifFocusNearReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifFocusNearReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifFocusNearReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifFocusNearReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifFocusNearRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifFocusNearRequest_default_instance_;
    new (ptr) ::GB28181::OnvifFocusNearRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifFocusNearRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifFocusNearRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifFocusNearRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifFocusStopReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifFocusStopReply_default_instance_;
    new (ptr) ::GB28181::OnvifFocusStopReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifFocusStopReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifFocusStopReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifFocusStopReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifFocusStopRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifFocusStopRequest_default_instance_;
    new (ptr) ::GB28181::OnvifFocusStopRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifFocusStopRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifFocusStopRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifFocusStopRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifGetMainUrlReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifGetMainUrlReply_default_instance_;
    new (ptr) ::GB28181::OnvifGetMainUrlReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifGetMainUrlReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifGetMainUrlReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifGetMainUrlReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifGetMainUrlRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifGetMainUrlRequest_default_instance_;
    new (ptr) ::GB28181::OnvifGetMainUrlRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifGetMainUrlRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifGetMainUrlRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifGetMainUrlRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifGetPresetReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifGetPresetReply_default_instance_;
    new (ptr) ::GB28181::OnvifGetPresetReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifGetPresetReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_OnvifGetPresetReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_OnvifGetPresetReply_gb28181_2eproto}, {
      &scc_info_OnvifPresetInfo_gb28181_2eproto.base,}};

static void InitDefaultsscc_info_OnvifGetPresetRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifGetPresetRequest_default_instance_;
    new (ptr) ::GB28181::OnvifGetPresetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifGetPresetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifGetPresetRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifGetPresetRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifGetSubUrlReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifGetSubUrlReply_default_instance_;
    new (ptr) ::GB28181::OnvifGetSubUrlReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifGetSubUrlReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifGetSubUrlReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifGetSubUrlReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifGetSubUrlRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifGetSubUrlRequest_default_instance_;
    new (ptr) ::GB28181::OnvifGetSubUrlRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifGetSubUrlRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifGetSubUrlRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifGetSubUrlRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifGotoPresetReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifGotoPresetReply_default_instance_;
    new (ptr) ::GB28181::OnvifGotoPresetReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifGotoPresetReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifGotoPresetReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifGotoPresetReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifGotoPresetRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifGotoPresetRequest_default_instance_;
    new (ptr) ::GB28181::OnvifGotoPresetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifGotoPresetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifGotoPresetRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifGotoPresetRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifPresetInfo_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifPresetInfo_default_instance_;
    new (ptr) ::GB28181::OnvifPresetInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifPresetInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifPresetInfo_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifPresetInfo_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifPtz3DReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifPtz3DReply_default_instance_;
    new (ptr) ::GB28181::OnvifPtz3DReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifPtz3DReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifPtz3DReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifPtz3DReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifPtz3DRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifPtz3DRequest_default_instance_;
    new (ptr) ::GB28181::OnvifPtz3DRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifPtz3DRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifPtz3DRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifPtz3DRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifPtzMoveReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifPtzMoveReply_default_instance_;
    new (ptr) ::GB28181::OnvifPtzMoveReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifPtzMoveReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifPtzMoveReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifPtzMoveReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifPtzMoveRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifPtzMoveRequest_default_instance_;
    new (ptr) ::GB28181::OnvifPtzMoveRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifPtzMoveRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifPtzMoveRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifPtzMoveRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifPtzStopReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifPtzStopReply_default_instance_;
    new (ptr) ::GB28181::OnvifPtzStopReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifPtzStopReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifPtzStopReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifPtzStopReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifPtzStopRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifPtzStopRequest_default_instance_;
    new (ptr) ::GB28181::OnvifPtzStopRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifPtzStopRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifPtzStopRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifPtzStopRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifSetPresetReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifSetPresetReply_default_instance_;
    new (ptr) ::GB28181::OnvifSetPresetReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifSetPresetReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifSetPresetReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifSetPresetReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifSetPresetRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifSetPresetRequest_default_instance_;
    new (ptr) ::GB28181::OnvifSetPresetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifSetPresetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifSetPresetRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifSetPresetRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifZoomInReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifZoomInReply_default_instance_;
    new (ptr) ::GB28181::OnvifZoomInReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifZoomInReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifZoomInReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifZoomInReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifZoomInRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifZoomInRequest_default_instance_;
    new (ptr) ::GB28181::OnvifZoomInRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifZoomInRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifZoomInRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifZoomInRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifZoomOutReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifZoomOutReply_default_instance_;
    new (ptr) ::GB28181::OnvifZoomOutReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifZoomOutReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifZoomOutReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifZoomOutReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifZoomOutRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifZoomOutRequest_default_instance_;
    new (ptr) ::GB28181::OnvifZoomOutRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifZoomOutRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifZoomOutRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifZoomOutRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifZoomStopReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifZoomStopReply_default_instance_;
    new (ptr) ::GB28181::OnvifZoomStopReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifZoomStopReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifZoomStopReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifZoomStopReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_OnvifZoomStopRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_OnvifZoomStopRequest_default_instance_;
    new (ptr) ::GB28181::OnvifZoomStopRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::OnvifZoomStopRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OnvifZoomStopRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OnvifZoomStopRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PauseReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PauseReply_default_instance_;
    new (ptr) ::GB28181::PauseReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PauseReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PauseReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PauseReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PauseRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PauseRequest_default_instance_;
    new (ptr) ::GB28181::PauseRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PauseRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PauseRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PauseRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PlayBackUrlReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PlayBackUrlReply_default_instance_;
    new (ptr) ::GB28181::PlayBackUrlReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PlayBackUrlReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayBackUrlReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlayBackUrlReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PlayBackUrlRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PlayBackUrlRequest_default_instance_;
    new (ptr) ::GB28181::PlayBackUrlRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PlayBackUrlRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayBackUrlRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlayBackUrlRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PlayFastReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PlayFastReply_default_instance_;
    new (ptr) ::GB28181::PlayFastReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PlayFastReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayFastReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlayFastReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PlayFastRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PlayFastRequest_default_instance_;
    new (ptr) ::GB28181::PlayFastRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PlayFastRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayFastRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlayFastRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PlayReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PlayReply_default_instance_;
    new (ptr) ::GB28181::PlayReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PlayReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlayReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PlayRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PlayRequest_default_instance_;
    new (ptr) ::GB28181::PlayRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PlayRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlayRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlayRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PlaySlowReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PlaySlowReply_default_instance_;
    new (ptr) ::GB28181::PlaySlowReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PlaySlowReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlaySlowReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlaySlowReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PlaySlowRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PlaySlowRequest_default_instance_;
    new (ptr) ::GB28181::PlaySlowRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PlaySlowRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PlaySlowRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PlaySlowRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PresetDelRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PresetDelRequest_default_instance_;
    new (ptr) ::GB28181::PresetDelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PresetDelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PresetDelRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PresetDelRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PresetGoRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PresetGoRequest_default_instance_;
    new (ptr) ::GB28181::PresetGoRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PresetGoRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PresetGoRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PresetGoRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PresetInfo_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PresetInfo_default_instance_;
    new (ptr) ::GB28181::PresetInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PresetInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PresetInfo_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PresetInfo_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PresetQueryReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PresetQueryReply_default_instance_;
    new (ptr) ::GB28181::PresetQueryReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PresetQueryReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PresetQueryReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PresetQueryReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PresetQueryRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PresetQueryRequest_default_instance_;
    new (ptr) ::GB28181::PresetQueryRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PresetQueryRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PresetQueryRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PresetQueryRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PresetSetRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PresetSetRequest_default_instance_;
    new (ptr) ::GB28181::PresetSetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PresetSetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PresetSetRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PresetSetRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzCommandRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzCommandRequest_default_instance_;
    new (ptr) ::GB28181::PtzCommandRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzCommandRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzCommandRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzCommandRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzFocusInReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzFocusInReply_default_instance_;
    new (ptr) ::GB28181::PtzFocusInReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzFocusInReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzFocusInReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzFocusInReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzFocusInRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzFocusInRequest_default_instance_;
    new (ptr) ::GB28181::PtzFocusInRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzFocusInRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzFocusInRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzFocusInRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzFocusOutReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzFocusOutReply_default_instance_;
    new (ptr) ::GB28181::PtzFocusOutReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzFocusOutReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzFocusOutReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzFocusOutReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzFocusOutRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzFocusOutRequest_default_instance_;
    new (ptr) ::GB28181::PtzFocusOutRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzFocusOutRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzFocusOutRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzFocusOutRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzIFStopReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzIFStopReply_default_instance_;
    new (ptr) ::GB28181::PtzIFStopReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzIFStopReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzIFStopReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzIFStopReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzIFStopRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzIFStopRequest_default_instance_;
    new (ptr) ::GB28181::PtzIFStopRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzIFStopRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzIFStopRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzIFStopRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzIrisBigReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzIrisBigReply_default_instance_;
    new (ptr) ::GB28181::PtzIrisBigReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzIrisBigReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzIrisBigReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzIrisBigReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzIrisBigRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzIrisBigRequest_default_instance_;
    new (ptr) ::GB28181::PtzIrisBigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzIrisBigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzIrisBigRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzIrisBigRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzIrisSmallReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzIrisSmallReply_default_instance_;
    new (ptr) ::GB28181::PtzIrisSmallReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzIrisSmallReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzIrisSmallReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzIrisSmallReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzIrisSmallRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzIrisSmallRequest_default_instance_;
    new (ptr) ::GB28181::PtzIrisSmallRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzIrisSmallRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzIrisSmallRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzIrisSmallRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzStopReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzStopReply_default_instance_;
    new (ptr) ::GB28181::PtzStopReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzStopReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzStopReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzStopReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzStopRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzStopRequest_default_instance_;
    new (ptr) ::GB28181::PtzStopRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzStopRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzStopRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzStopRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzZoomInReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzZoomInReply_default_instance_;
    new (ptr) ::GB28181::PtzZoomInReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzZoomInReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzZoomInReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzZoomInReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzZoomInRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzZoomInRequest_default_instance_;
    new (ptr) ::GB28181::PtzZoomInRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzZoomInRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzZoomInRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzZoomInRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzZoomOutReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzZoomOutReply_default_instance_;
    new (ptr) ::GB28181::PtzZoomOutReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzZoomOutReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzZoomOutReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzZoomOutReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_PtzZoomOutRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_PtzZoomOutRequest_default_instance_;
    new (ptr) ::GB28181::PtzZoomOutRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::PtzZoomOutRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PtzZoomOutRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PtzZoomOutRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_QueryRecordReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_QueryRecordReply_default_instance_;
    new (ptr) ::GB28181::QueryRecordReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::QueryRecordReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryRecordReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QueryRecordReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_QueryRecordRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_QueryRecordRequest_default_instance_;
    new (ptr) ::GB28181::QueryRecordRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::QueryRecordRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryRecordRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QueryRecordRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_RealPlayUrlInReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_RealPlayUrlInReply_default_instance_;
    new (ptr) ::GB28181::RealPlayUrlInReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::RealPlayUrlInReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RealPlayUrlInReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RealPlayUrlInReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_RealPlayUrlInRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_RealPlayUrlInRequest_default_instance_;
    new (ptr) ::GB28181::RealPlayUrlInRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::RealPlayUrlInRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RealPlayUrlInRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RealPlayUrlInRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_RealPlayUrlReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_RealPlayUrlReply_default_instance_;
    new (ptr) ::GB28181::RealPlayUrlReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::RealPlayUrlReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RealPlayUrlReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RealPlayUrlReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_RealPlayUrlRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_RealPlayUrlRequest_default_instance_;
    new (ptr) ::GB28181::RealPlayUrlRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::RealPlayUrlRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RealPlayUrlRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RealPlayUrlRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_RecordDownloadReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_RecordDownloadReply_default_instance_;
    new (ptr) ::GB28181::RecordDownloadReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::RecordDownloadReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecordDownloadReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RecordDownloadReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_RecordDownloadRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_RecordDownloadRequest_default_instance_;
    new (ptr) ::GB28181::RecordDownloadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::RecordDownloadRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecordDownloadRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RecordDownloadRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_RecordInfo_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_RecordInfo_default_instance_;
    new (ptr) ::GB28181::RecordInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::RecordInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RecordInfo_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RecordInfo_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_SeekReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_SeekReply_default_instance_;
    new (ptr) ::GB28181::SeekReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::SeekReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SeekReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SeekReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_SeekRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_SeekRequest_default_instance_;
    new (ptr) ::GB28181::SeekRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::SeekRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SeekRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SeekRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_ServiceStatusReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_ServiceStatusReply_default_instance_;
    new (ptr) ::GB28181::ServiceStatusReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::ServiceStatusReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServiceStatusReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServiceStatusReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_ServiceStatusRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_ServiceStatusRequest_default_instance_;
    new (ptr) ::GB28181::ServiceStatusRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::ServiceStatusRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ServiceStatusRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ServiceStatusRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StartBroadcastReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StartBroadcastReply_default_instance_;
    new (ptr) ::GB28181::StartBroadcastReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StartBroadcastReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartBroadcastReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartBroadcastReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StartBroadcastRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StartBroadcastRequest_default_instance_;
    new (ptr) ::GB28181::StartBroadcastRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StartBroadcastRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartBroadcastRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartBroadcastRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StartTalkReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StartTalkReply_default_instance_;
    new (ptr) ::GB28181::StartTalkReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StartTalkReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartTalkReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartTalkReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StartTalkRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StartTalkRequest_default_instance_;
    new (ptr) ::GB28181::StartTalkRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StartTalkRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StartTalkRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StartTalkRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StatusInfo_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StatusInfo_default_instance_;
    new (ptr) ::GB28181::StatusInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StatusInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StatusInfo_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StatusInfo_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StopBroadcastReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StopBroadcastReply_default_instance_;
    new (ptr) ::GB28181::StopBroadcastReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StopBroadcastReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopBroadcastReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopBroadcastReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StopBroadcastRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StopBroadcastRequest_default_instance_;
    new (ptr) ::GB28181::StopBroadcastRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StopBroadcastRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopBroadcastRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopBroadcastRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StopPlayRecordReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StopPlayRecordReply_default_instance_;
    new (ptr) ::GB28181::StopPlayRecordReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StopPlayRecordReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopPlayRecordReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopPlayRecordReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StopPlayRecordRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StopPlayRecordRequest_default_instance_;
    new (ptr) ::GB28181::StopPlayRecordRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StopPlayRecordRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopPlayRecordRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopPlayRecordRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StopTalkReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StopTalkReply_default_instance_;
    new (ptr) ::GB28181::StopTalkReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StopTalkReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopTalkReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopTalkReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StopTalkRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StopTalkRequest_default_instance_;
    new (ptr) ::GB28181::StopTalkRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StopTalkRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopTalkRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopTalkRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StopVideoByIdReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StopVideoByIdReply_default_instance_;
    new (ptr) ::GB28181::StopVideoByIdReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StopVideoByIdReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopVideoByIdReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopVideoByIdReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StopVideoByIdRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StopVideoByIdRequest_default_instance_;
    new (ptr) ::GB28181::StopVideoByIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StopVideoByIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopVideoByIdRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopVideoByIdRequest_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StopVideoBySsrcReply_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StopVideoBySsrcReply_default_instance_;
    new (ptr) ::GB28181::StopVideoBySsrcReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StopVideoBySsrcReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopVideoBySsrcReply_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopVideoBySsrcReply_gb28181_2eproto}, {}};

static void InitDefaultsscc_info_StopVideoBySsrcRequest_gb28181_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::GB28181::_StopVideoBySsrcRequest_default_instance_;
    new (ptr) ::GB28181::StopVideoBySsrcRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GB28181::StopVideoBySsrcRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StopVideoBySsrcRequest_gb28181_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StopVideoBySsrcRequest_gb28181_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_gb28181_2eproto[118];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_gb28181_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_gb28181_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_gb28181_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzCommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzCommandRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzCommandRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzCommandRequest, speed_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzCommandRequest, direction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::ControlReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::ControlReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::ControlReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomInRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomInRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomInRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomInRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomInReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomInReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomInReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomOutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomOutRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomOutRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomOutRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomOutReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomOutReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzZoomOutReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzStopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzStopRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzStopRequest, subid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzStopReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzStopReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzStopReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisBigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisBigRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisBigRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisBigRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisBigReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisBigReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisBigReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisSmallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisSmallRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisSmallRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisSmallRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisSmallReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisSmallReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIrisSmallReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusOutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusOutRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusOutRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusOutRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusOutReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusOutReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusOutReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusInRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusInRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusInRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusInRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusInReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusInReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzFocusInReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIFStopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIFStopRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIFStopRequest, subid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIFStopReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIFStopReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PtzIFStopReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlRequest, istcp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlReply, url_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlInRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlInRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlInRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlInRequest, istcp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlInReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlInReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlInReply, url_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RealPlayUrlInReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlRequest, istcp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlReply, url_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlInRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlInRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlInRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlInRequest, istcp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlInReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlInReply, url_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlInReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRTMPUrlInReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlRequest, istcp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlReply, url_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlInRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlInRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlInRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlInRequest, istcp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlInReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlInReply, url_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlInReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetHLSUrlInReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoByIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoByIdRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoByIdRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoByIdRequest, istcp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoByIdReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoByIdReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoByIdReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoBySsrcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoBySsrcRequest, ssrc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoBySsrcReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoBySsrcReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StopVideoBySsrcReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlRequest, starttime_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlRequest, endtime_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlRequest, istcp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlReply, rtspurl_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlReply, rtmpurl_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlReply, msg_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayBackUrlReply, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetGoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetGoRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetGoRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetGoRequest, presetid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetSetRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetSetRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetSetRequest, presetid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetDelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetDelRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetDelRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetDelRequest, presetid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetQueryRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetQueryRequest, subid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetQueryReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetQueryReply, sn_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetQueryReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetQueryReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetPresetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetPresetRequest, sn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetInfo, presetid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PresetInfo, presetname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetPresetReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetPresetReply, presetlist_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetPresetReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetPresetReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::QueryRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::QueryRecordRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::QueryRecordRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::QueryRecordRequest, starttime_),
  PROTOBUF_FIELD_OFFSET(::GB28181::QueryRecordRequest, endtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::QueryRecordReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::QueryRecordReply, sn_),
  PROTOBUF_FIELD_OFFSET(::GB28181::QueryRecordReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::QueryRecordReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRecordRequest, sn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordInfo, name_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordInfo, starttime_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordInfo, endtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRecordReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRecordReply, recordlist_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRecordReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetRecordReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayFastRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayFastRequest, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayFastReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayFastReply, scale_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayFastReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayFastReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlaySlowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlaySlowRequest, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlaySlowReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlaySlowReply, scale_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlaySlowReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlaySlowReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PauseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PauseRequest, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PauseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PauseReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PauseReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayRequest, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::PlayReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::SeekRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::SeekRequest, token_),
  PROTOBUF_FIELD_OFFSET(::GB28181::SeekRequest, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::SeekReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::SeekReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::SeekReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GoForwardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GoForwardRequest, token_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GoForwardRequest, nowtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GoForwardReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GoForwardReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GoForwardReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GoBackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GoBackRequest, token_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GoBackRequest, nowtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GoBackReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GoBackReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GoBackReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopPlayRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopPlayRecordRequest, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopPlayRecordReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopPlayRecordReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StopPlayRecordReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadRequest, starttime_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadRequest, endtime_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadRequest, destip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadRequest, destport_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadReply, token_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadReply, filesize_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::RecordDownloadReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceStatusRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceStatusRequest, subid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceStatusReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceStatusReply, isonline_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceStatusReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceStatusReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetAllDeviceStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StatusInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StatusInfo, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StatusInfo, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StatusInfo, isonline_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetAllDeviceStatusReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetAllDeviceStatusReply, statusinfolist_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetAllDeviceStatusReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetAllDeviceStatusReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceList, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceList, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceList, name_),
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceList, ip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceListReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceListReply, devicelist_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceListReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::GetDeviceListReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceRebootRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceRebootRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceRebootRequest, subid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceRebootReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceRebootReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::DeviceRebootReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StartBroadcastRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StartBroadcastRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartBroadcastRequest, subid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StartBroadcastReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StartBroadcastReply, destip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartBroadcastReply, destport_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartBroadcastReply, token_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartBroadcastReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartBroadcastReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopBroadcastRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopBroadcastRequest, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopBroadcastReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopBroadcastReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StopBroadcastReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkRequest, mainid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkRequest, subid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkRequest, port_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkReply, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkReply, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkReply, token_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StartTalkReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopTalkRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopTalkRequest, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopTalkReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::StopTalkReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::StopTalkReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::ServiceStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::ServiceStatusReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::ServiceStatusReply, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::ServiceStatusReply, disktotalsize_),
  PROTOBUF_FIELD_OFFSET(::GB28181::ServiceStatusReply, diskusedsize_),
  PROTOBUF_FIELD_OFFSET(::GB28181::ServiceStatusReply, diskavilablesize_),
  PROTOBUF_FIELD_OFFSET(::GB28181::ServiceStatusReply, sipid_),
  PROTOBUF_FIELD_OFFSET(::GB28181::ServiceStatusReply, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::ServiceStatusReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::ServiceStatusReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveRequest, channel_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveRequest, directory_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzMoveReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzStopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzStopRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzStopRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzStopRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzStopRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzStopRequest, channel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzStopReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzStopReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtzStopReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomInRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomInRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomInRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomInRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomInRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomInRequest, channel_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomInRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomInReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomInReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomInReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomOutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomOutRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomOutRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomOutRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomOutRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomOutRequest, channel_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomOutRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomOutReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomOutReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomOutReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomStopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomStopRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomStopRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomStopRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomStopRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomStopRequest, channel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomStopReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomStopReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifZoomStopReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusNearRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusNearRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusNearRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusNearRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusNearRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusNearRequest, channel_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusNearRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusNearReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusNearReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusNearReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusFarRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusFarRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusFarRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusFarRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusFarRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusFarRequest, channel_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusFarRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusFarReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusFarReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusFarReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusStopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusStopRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusStopRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusStopRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusStopRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusStopRequest, channel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusStopReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusStopReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifFocusStopReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, channel_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, x1_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, y1_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, x2_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, y2_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, width_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DRequest, height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPtz3DReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPresetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPresetInfo, pretoken_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifPresetInfo, prename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetPresetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetPresetRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetPresetRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetPresetRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetPresetRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetPresetRequest, channel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetPresetReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetPresetReply, presetlist_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetPresetReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetPresetReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGotoPresetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGotoPresetRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGotoPresetRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGotoPresetRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGotoPresetRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGotoPresetRequest, channel_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGotoPresetRequest, pretoken_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGotoPresetReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGotoPresetReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGotoPresetReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetRequest, channel_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetRequest, pretoken_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetRequest, prename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifSetPresetReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifDeviceRebootRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifDeviceRebootRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifDeviceRebootRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifDeviceRebootRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifDeviceRebootRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifDeviceRebootRequest, channel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifDeviceRebootReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifDeviceRebootReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifDeviceRebootReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetMainUrlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetMainUrlRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetMainUrlRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetMainUrlRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetMainUrlRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetMainUrlRequest, channel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetMainUrlReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetMainUrlReply, url_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetMainUrlReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetMainUrlReply, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetSubUrlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetSubUrlRequest, ip_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetSubUrlRequest, port_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetSubUrlRequest, user_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetSubUrlRequest, password_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetSubUrlRequest, channel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetSubUrlReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetSubUrlReply, url_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetSubUrlReply, code_),
  PROTOBUF_FIELD_OFFSET(::GB28181::OnvifGetSubUrlReply, msg_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GB28181::PtzCommandRequest)},
  { 9, -1, sizeof(::GB28181::ControlReply)},
  { 16, -1, sizeof(::GB28181::PtzZoomInRequest)},
  { 24, -1, sizeof(::GB28181::PtzZoomInReply)},
  { 31, -1, sizeof(::GB28181::PtzZoomOutRequest)},
  { 39, -1, sizeof(::GB28181::PtzZoomOutReply)},
  { 46, -1, sizeof(::GB28181::PtzStopRequest)},
  { 53, -1, sizeof(::GB28181::PtzStopReply)},
  { 60, -1, sizeof(::GB28181::PtzIrisBigRequest)},
  { 68, -1, sizeof(::GB28181::PtzIrisBigReply)},
  { 75, -1, sizeof(::GB28181::PtzIrisSmallRequest)},
  { 83, -1, sizeof(::GB28181::PtzIrisSmallReply)},
  { 90, -1, sizeof(::GB28181::PtzFocusOutRequest)},
  { 98, -1, sizeof(::GB28181::PtzFocusOutReply)},
  { 105, -1, sizeof(::GB28181::PtzFocusInRequest)},
  { 113, -1, sizeof(::GB28181::PtzFocusInReply)},
  { 120, -1, sizeof(::GB28181::PtzIFStopRequest)},
  { 127, -1, sizeof(::GB28181::PtzIFStopReply)},
  { 134, -1, sizeof(::GB28181::RealPlayUrlRequest)},
  { 142, -1, sizeof(::GB28181::RealPlayUrlReply)},
  { 150, -1, sizeof(::GB28181::RealPlayUrlInRequest)},
  { 158, -1, sizeof(::GB28181::RealPlayUrlInReply)},
  { 166, -1, sizeof(::GB28181::GetRTMPUrlRequest)},
  { 174, -1, sizeof(::GB28181::GetRTMPUrlReply)},
  { 182, -1, sizeof(::GB28181::GetRTMPUrlInRequest)},
  { 190, -1, sizeof(::GB28181::GetRTMPUrlInReply)},
  { 198, -1, sizeof(::GB28181::GetHLSUrlRequest)},
  { 206, -1, sizeof(::GB28181::GetHLSUrlReply)},
  { 214, -1, sizeof(::GB28181::GetHLSUrlInRequest)},
  { 222, -1, sizeof(::GB28181::GetHLSUrlInReply)},
  { 230, -1, sizeof(::GB28181::StopVideoByIdRequest)},
  { 238, -1, sizeof(::GB28181::StopVideoByIdReply)},
  { 245, -1, sizeof(::GB28181::StopVideoBySsrcRequest)},
  { 251, -1, sizeof(::GB28181::StopVideoBySsrcReply)},
  { 258, -1, sizeof(::GB28181::PlayBackUrlRequest)},
  { 268, -1, sizeof(::GB28181::PlayBackUrlReply)},
  { 278, -1, sizeof(::GB28181::PresetGoRequest)},
  { 286, -1, sizeof(::GB28181::PresetSetRequest)},
  { 294, -1, sizeof(::GB28181::PresetDelRequest)},
  { 302, -1, sizeof(::GB28181::PresetQueryRequest)},
  { 309, -1, sizeof(::GB28181::PresetQueryReply)},
  { 317, -1, sizeof(::GB28181::GetPresetRequest)},
  { 323, -1, sizeof(::GB28181::PresetInfo)},
  { 330, -1, sizeof(::GB28181::GetPresetReply)},
  { 338, -1, sizeof(::GB28181::QueryRecordRequest)},
  { 347, -1, sizeof(::GB28181::QueryRecordReply)},
  { 355, -1, sizeof(::GB28181::GetRecordRequest)},
  { 361, -1, sizeof(::GB28181::RecordInfo)},
  { 369, -1, sizeof(::GB28181::GetRecordReply)},
  { 377, -1, sizeof(::GB28181::PlayFastRequest)},
  { 383, -1, sizeof(::GB28181::PlayFastReply)},
  { 391, -1, sizeof(::GB28181::PlaySlowRequest)},
  { 397, -1, sizeof(::GB28181::PlaySlowReply)},
  { 405, -1, sizeof(::GB28181::PauseRequest)},
  { 411, -1, sizeof(::GB28181::PauseReply)},
  { 418, -1, sizeof(::GB28181::PlayRequest)},
  { 424, -1, sizeof(::GB28181::PlayReply)},
  { 431, -1, sizeof(::GB28181::SeekRequest)},
  { 438, -1, sizeof(::GB28181::SeekReply)},
  { 445, -1, sizeof(::GB28181::GoForwardRequest)},
  { 452, -1, sizeof(::GB28181::GoForwardReply)},
  { 459, -1, sizeof(::GB28181::GoBackRequest)},
  { 466, -1, sizeof(::GB28181::GoBackReply)},
  { 473, -1, sizeof(::GB28181::StopPlayRecordRequest)},
  { 479, -1, sizeof(::GB28181::StopPlayRecordReply)},
  { 486, -1, sizeof(::GB28181::RecordDownloadRequest)},
  { 497, -1, sizeof(::GB28181::RecordDownloadReply)},
  { 506, -1, sizeof(::GB28181::GetDeviceStatusRequest)},
  { 513, -1, sizeof(::GB28181::GetDeviceStatusReply)},
  { 521, -1, sizeof(::GB28181::GetAllDeviceStatusRequest)},
  { 526, -1, sizeof(::GB28181::StatusInfo)},
  { 534, -1, sizeof(::GB28181::GetAllDeviceStatusReply)},
  { 542, -1, sizeof(::GB28181::GetDeviceListRequest)},
  { 547, -1, sizeof(::GB28181::DeviceList)},
  { 556, -1, sizeof(::GB28181::GetDeviceListReply)},
  { 564, -1, sizeof(::GB28181::DeviceRebootRequest)},
  { 571, -1, sizeof(::GB28181::DeviceRebootReply)},
  { 578, -1, sizeof(::GB28181::StartBroadcastRequest)},
  { 585, -1, sizeof(::GB28181::StartBroadcastReply)},
  { 595, -1, sizeof(::GB28181::StopBroadcastRequest)},
  { 601, -1, sizeof(::GB28181::StopBroadcastReply)},
  { 608, -1, sizeof(::GB28181::StartTalkRequest)},
  { 617, -1, sizeof(::GB28181::StartTalkReply)},
  { 627, -1, sizeof(::GB28181::StopTalkRequest)},
  { 633, -1, sizeof(::GB28181::StopTalkReply)},
  { 640, -1, sizeof(::GB28181::ServiceStatusRequest)},
  { 645, -1, sizeof(::GB28181::ServiceStatusReply)},
  { 658, -1, sizeof(::GB28181::OnvifPtzMoveRequest)},
  { 670, -1, sizeof(::GB28181::OnvifPtzMoveReply)},
  { 677, -1, sizeof(::GB28181::OnvifPtzStopRequest)},
  { 687, -1, sizeof(::GB28181::OnvifPtzStopReply)},
  { 694, -1, sizeof(::GB28181::OnvifZoomInRequest)},
  { 705, -1, sizeof(::GB28181::OnvifZoomInReply)},
  { 712, -1, sizeof(::GB28181::OnvifZoomOutRequest)},
  { 723, -1, sizeof(::GB28181::OnvifZoomOutReply)},
  { 730, -1, sizeof(::GB28181::OnvifZoomStopRequest)},
  { 740, -1, sizeof(::GB28181::OnvifZoomStopReply)},
  { 747, -1, sizeof(::GB28181::OnvifFocusNearRequest)},
  { 758, -1, sizeof(::GB28181::OnvifFocusNearReply)},
  { 765, -1, sizeof(::GB28181::OnvifFocusFarRequest)},
  { 776, -1, sizeof(::GB28181::OnvifFocusFarReply)},
  { 783, -1, sizeof(::GB28181::OnvifFocusStopRequest)},
  { 793, -1, sizeof(::GB28181::OnvifFocusStopReply)},
  { 800, -1, sizeof(::GB28181::OnvifPtz3DRequest)},
  { 816, -1, sizeof(::GB28181::OnvifPtz3DReply)},
  { 823, -1, sizeof(::GB28181::OnvifPresetInfo)},
  { 830, -1, sizeof(::GB28181::OnvifGetPresetRequest)},
  { 840, -1, sizeof(::GB28181::OnvifGetPresetReply)},
  { 848, -1, sizeof(::GB28181::OnvifGotoPresetRequest)},
  { 859, -1, sizeof(::GB28181::OnvifGotoPresetReply)},
  { 866, -1, sizeof(::GB28181::OnvifSetPresetRequest)},
  { 878, -1, sizeof(::GB28181::OnvifSetPresetReply)},
  { 885, -1, sizeof(::GB28181::OnvifDeviceRebootRequest)},
  { 895, -1, sizeof(::GB28181::OnvifDeviceRebootReply)},
  { 902, -1, sizeof(::GB28181::OnvifGetMainUrlRequest)},
  { 912, -1, sizeof(::GB28181::OnvifGetMainUrlReply)},
  { 920, -1, sizeof(::GB28181::OnvifGetSubUrlRequest)},
  { 930, -1, sizeof(::GB28181::OnvifGetSubUrlReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzCommandRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_ControlReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzZoomInRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzZoomInReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzZoomOutRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzZoomOutReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzStopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzStopReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzIrisBigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzIrisBigReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzIrisSmallRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzIrisSmallReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzFocusOutRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzFocusOutReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzFocusInRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzFocusInReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzIFStopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PtzIFStopReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_RealPlayUrlRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_RealPlayUrlReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_RealPlayUrlInRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_RealPlayUrlInReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetRTMPUrlRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetRTMPUrlReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetRTMPUrlInRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetRTMPUrlInReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetHLSUrlRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetHLSUrlReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetHLSUrlInRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetHLSUrlInReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StopVideoByIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StopVideoByIdReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StopVideoBySsrcRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StopVideoBySsrcReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PlayBackUrlRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PlayBackUrlReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PresetGoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PresetSetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PresetDelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PresetQueryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PresetQueryReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetPresetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PresetInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetPresetReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_QueryRecordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_QueryRecordReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetRecordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_RecordInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetRecordReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PlayFastRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PlayFastReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PlaySlowRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PlaySlowReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PauseRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PauseReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PlayRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_PlayReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_SeekRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_SeekReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GoForwardRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GoForwardReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GoBackRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GoBackReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StopPlayRecordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StopPlayRecordReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_RecordDownloadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_RecordDownloadReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetDeviceStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetDeviceStatusReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetAllDeviceStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StatusInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetAllDeviceStatusReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetDeviceListRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_DeviceList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_GetDeviceListReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_DeviceRebootRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_DeviceRebootReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StartBroadcastRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StartBroadcastReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StopBroadcastRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StopBroadcastReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StartTalkRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StartTalkReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StopTalkRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_StopTalkReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_ServiceStatusRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_ServiceStatusReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifPtzMoveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifPtzMoveReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifPtzStopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifPtzStopReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifZoomInRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifZoomInReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifZoomOutRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifZoomOutReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifZoomStopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifZoomStopReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifFocusNearRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifFocusNearReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifFocusFarRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifFocusFarReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifFocusStopRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifFocusStopReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifPtz3DRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifPtz3DReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifPresetInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifGetPresetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifGetPresetReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifGotoPresetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifGotoPresetReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifSetPresetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifSetPresetReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifDeviceRebootRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifDeviceRebootReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifGetMainUrlRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifGetMainUrlReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifGetSubUrlRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::GB28181::_OnvifGetSubUrlReply_default_instance_),
};

const char descriptor_table_protodef_gb28181_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rgb28181.proto\022\007GB28181\"T\n\021PtzCommandRe"
  "quest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\r\n\005"
  "speed\030\003 \001(\005\022\021\n\tdirection\030\004 \001(\005\")\n\014Contro"
  "lReply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"@\n\020Ptz"
  "ZoomInRequest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002"
  " \001(\t\022\r\n\005speed\030\003 \001(\005\"+\n\016PtzZoomInReply\022\014\n"
  "\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"A\n\021PtzZoomOutRe"
  "quest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\r\n\005"
  "speed\030\003 \001(\005\",\n\017PtzZoomOutReply\022\014\n\004code\030\001"
  " \001(\005\022\013\n\003msg\030\002 \001(\t\"/\n\016PtzStopRequest\022\016\n\006m"
  "ainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\")\n\014PtzStopRep"
  "ly\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"A\n\021PtzIris"
  "BigRequest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001("
  "\t\022\r\n\005speed\030\003 \001(\005\",\n\017PtzIrisBigReply\022\014\n\004c"
  "ode\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"C\n\023PtzIrisSmallRe"
  "quest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\r\n\005"
  "speed\030\003 \001(\005\".\n\021PtzIrisSmallReply\022\014\n\004code"
  "\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"B\n\022PtzFocusOutReques"
  "t\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\r\n\005spee"
  "d\030\003 \001(\005\"-\n\020PtzFocusOutReply\022\014\n\004code\030\001 \001("
  "\005\022\013\n\003msg\030\002 \001(\t\"A\n\021PtzFocusInRequest\022\016\n\006m"
  "ainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\r\n\005speed\030\003 \001("
  "\005\",\n\017PtzFocusInReply\022\014\n\004code\030\001 \001(\005\022\013\n\003ms"
  "g\030\002 \001(\t\"1\n\020PtzIFStopRequest\022\016\n\006mainId\030\001 "
  "\001(\t\022\r\n\005subId\030\002 \001(\t\"+\n\016PtzIFStopReply\022\014\n\004"
  "code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"B\n\022RealPlayUrlRe"
  "quest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\r\n\005"
  "isTcp\030\003 \001(\005\":\n\020RealPlayUrlReply\022\014\n\004code\030"
  "\001 \001(\005\022\013\n\003url\030\002 \001(\t\022\013\n\003msg\030\003 \001(\t\"D\n\024RealP"
  "layUrlInRequest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId"
  "\030\002 \001(\t\022\r\n\005isTcp\030\003 \001(\005\"<\n\022RealPlayUrlInRe"
  "ply\022\014\n\004code\030\001 \001(\005\022\013\n\003url\030\002 \001(\t\022\013\n\003msg\030\003 "
  "\001(\t\"A\n\021GetRTMPUrlRequest\022\016\n\006mainId\030\001 \001(\t"
  "\022\r\n\005subId\030\002 \001(\t\022\r\n\005isTcp\030\003 \001(\005\"9\n\017GetRTM"
  "PUrlReply\022\013\n\003url\030\001 \001(\t\022\014\n\004code\030\002 \001(\005\022\013\n\003"
  "msg\030\003 \001(\t\"C\n\023GetRTMPUrlInRequest\022\016\n\006main"
  "Id\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\r\n\005isTcp\030\003 \001(\005\";"
  "\n\021GetRTMPUrlInReply\022\013\n\003url\030\001 \001(\t\022\014\n\004code"
  "\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"@\n\020GetHLSUrlRequest\022"
  "\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\r\n\005isTcp\030"
  "\003 \001(\005\"8\n\016GetHLSUrlReply\022\013\n\003url\030\001 \001(\t\022\014\n\004"
  "code\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"B\n\022GetHLSUrlInRe"
  "quest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\r\n\005"
  "isTcp\030\003 \001(\005\":\n\020GetHLSUrlInReply\022\013\n\003url\030\001"
  " \001(\t\022\014\n\004code\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"D\n\024StopV"
  "ideoByIdRequest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId"
  "\030\002 \001(\t\022\r\n\005isTcp\030\003 \001(\005\"/\n\022StopVideoByIdRe"
  "ply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"&\n\026StopVi"
  "deoBySsrcRequest\022\014\n\004ssrc\030\001 \001(\t\"1\n\024StopVi"
  "deoBySsrcReply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001("
  "\t\"f\n\022PlayBackUrlRequest\022\016\n\006mainId\030\001 \001(\t\022"
  "\r\n\005subId\030\002 \001(\t\022\021\n\tstartTime\030\003 \001(\t\022\017\n\007end"
  "Time\030\004 \001(\t\022\r\n\005isTcp\030\005 \001(\005\"^\n\020PlayBackUrl"
  "Reply\022\014\n\004code\030\001 \001(\005\022\017\n\007rtspUrl\030\002 \001(\t\022\017\n\007"
  "rtmpUrl\030\003 \001(\t\022\013\n\003msg\030\004 \001(\t\022\r\n\005token\030\005 \001("
  "\t\"B\n\017PresetGoRequest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005"
  "subId\030\002 \001(\t\022\020\n\010presetId\030\003 \001(\005\"C\n\020PresetS"
  "etRequest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t"
  "\022\020\n\010presetId\030\003 \001(\005\"C\n\020PresetDelRequest\022\016"
  "\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\020\n\010presetI"
  "d\030\003 \001(\005\"3\n\022PresetQueryRequest\022\016\n\006mainId\030"
  "\001 \001(\t\022\r\n\005subId\030\002 \001(\t\"9\n\020PresetQueryReply"
  "\022\n\n\002sn\030\001 \001(\005\022\014\n\004code\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\""
  "\036\n\020GetPresetRequest\022\n\n\002sn\030\001 \001(\005\"2\n\nPrese"
  "tInfo\022\020\n\010presetId\030\001 \001(\005\022\022\n\npresetName\030\002 "
  "\001(\t\"T\n\016GetPresetReply\022\'\n\npresetList\030\001 \003("
  "\0132\023.GB28181.PresetInfo\022\014\n\004code\030\002 \001(\005\022\013\n\003"
  "msg\030\003 \001(\t\"W\n\022QueryRecordRequest\022\016\n\006mainI"
  "d\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\021\n\tstartTime\030\003 \001("
  "\t\022\017\n\007endTime\030\004 \001(\t\"9\n\020QueryRecordReply\022\n"
  "\n\002sn\030\001 \001(\005\022\014\n\004code\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"\036\n"
  "\020GetRecordRequest\022\n\n\002sn\030\001 \001(\005\">\n\nRecordI"
  "nfo\022\014\n\004name\030\001 \001(\t\022\021\n\tstartTime\030\002 \001(\t\022\017\n\007"
  "endTime\030\003 \001(\t\"T\n\016GetRecordReply\022\'\n\nrecor"
  "dList\030\001 \003(\0132\023.GB28181.RecordInfo\022\014\n\004code"
  "\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\" \n\017PlayFastRequest\022\r"
  "\n\005token\030\001 \001(\t\"9\n\rPlayFastReply\022\r\n\005scale\030"
  "\001 \001(\002\022\014\n\004code\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\" \n\017Play"
  "SlowRequest\022\r\n\005token\030\001 \001(\t\"9\n\rPlaySlowRe"
  "ply\022\r\n\005scale\030\001 \001(\002\022\014\n\004code\030\002 \001(\005\022\013\n\003msg\030"
  "\003 \001(\t\"\035\n\014PauseRequest\022\r\n\005token\030\001 \001(\t\"\'\n\n"
  "PauseReply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"\034\n"
  "\013PlayRequest\022\r\n\005token\030\001 \001(\t\"&\n\tPlayReply"
  "\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"*\n\013SeekReque"
  "st\022\r\n\005token\030\001 \001(\t\022\014\n\004time\030\002 \001(\005\"&\n\tSeekR"
  "eply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"2\n\020GoFor"
  "wardRequest\022\r\n\005token\030\001 \001(\t\022\017\n\007nowTime\030\002 "
  "\001(\005\"+\n\016GoForwardReply\022\014\n\004code\030\001 \001(\005\022\013\n\003m"
  "sg\030\002 \001(\t\"/\n\rGoBackRequest\022\r\n\005token\030\001 \001(\t"
  "\022\017\n\007nowTime\030\002 \001(\005\"(\n\013GoBackReply\022\014\n\004code"
  "\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"&\n\025StopPlayRecordReq"
  "uest\022\r\n\005token\030\001 \001(\t\"0\n\023StopPlayRecordRep"
  "ly\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\003 \001(\t\"|\n\025RecordD"
  "ownloadRequest\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030"
  "\002 \001(\t\022\021\n\tstartTime\030\003 \001(\t\022\017\n\007endTime\030\004 \001("
  "\t\022\016\n\006destIp\030\005 \001(\t\022\020\n\010destPort\030\006 \001(\005\"Q\n\023R"
  "ecordDownloadReply\022\r\n\005token\030\001 \001(\t\022\020\n\010fil"
  "eSize\030\002 \001(\003\022\014\n\004code\030\003 \001(\005\022\013\n\003msg\030\004 \001(\t\"7"
  "\n\026GetDeviceStatusRequest\022\016\n\006mainId\030\001 \001(\t"
  "\022\r\n\005subId\030\002 \001(\t\"C\n\024GetDeviceStatusReply\022"
  "\020\n\010isOnline\030\001 \001(\010\022\014\n\004code\030\002 \001(\005\022\013\n\003msg\030\003"
  " \001(\t\"\033\n\031GetAllDeviceStatusRequest\"=\n\nSta"
  "tusInfo\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\020"
  "\n\010isOnline\030\003 \001(\010\"a\n\027GetAllDeviceStatusRe"
  "ply\022+\n\016statusInfoList\030\001 \003(\0132\023.GB28181.St"
  "atusInfo\022\014\n\004code\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"\026\n\024G"
  "etDeviceListRequest\"E\n\nDeviceList\022\016\n\006mai"
  "nId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\n"
  "\n\002ip\030\004 \001(\t\"X\n\022GetDeviceListReply\022\'\n\ndevi"
  "ceList\030\001 \003(\0132\023.GB28181.DeviceList\022\014\n\004cod"
  "e\030\002 \001(\005\022\013\n\003msg\030\003 \001(\t\"4\n\023DeviceRebootRequ"
  "est\022\016\n\006mainId\030\001 \001(\t\022\r\n\005subId\030\002 \001(\t\".\n\021De"
  "viceRebootReply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001"
  "(\t\"6\n\025StartBroadcastRequest\022\016\n\006mainId\030\001 "
  "\001(\t\022\r\n\005subId\030\002 \001(\t\"a\n\023StartBroadcastRepl"
  "y\022\016\n\006destIp\030\001 \001(\t\022\020\n\010destPort\030\002 \001(\005\022\r\n\005t"
  "oken\030\003 \001(\t\022\014\n\004code\030\004 \001(\005\022\013\n\003msg\030\005 \001(\t\"%\n"
  "\024StopBroadcastRequest\022\r\n\005token\030\001 \001(\t\"/\n\022"
  "StopBroadcastReply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030"
  "\002 \001(\t\"K\n\020StartTalkRequest\022\016\n\006mainId\030\001 \001("
  "\t\022\r\n\005subId\030\002 \001(\t\022\n\n\002ip\030\003 \001(\t\022\014\n\004port\030\004 \001"
  "(\005\"T\n\016StartTalkReply\022\n\n\002ip\030\001 \001(\t\022\014\n\004port"
  "\030\002 \001(\005\022\r\n\005token\030\003 \001(\t\022\014\n\004code\030\004 \001(\005\022\013\n\003m"
  "sg\030\005 \001(\t\" \n\017StopTalkRequest\022\r\n\005token\030\001 \001"
  "(\t\"*\n\rStopTalkReply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg"
  "\030\002 \001(\t\"\026\n\024ServiceStatusRequest\"\237\001\n\022Servi"
  "ceStatusReply\022\n\n\002ip\030\001 \001(\t\022\025\n\rdiskTotalSi"
  "ze\030\002 \001(\004\022\024\n\014diskUsedSize\030\003 \001(\004\022\030\n\020diskAv"
  "ilableSize\030\004 \001(\004\022\r\n\005SipId\030\005 \001(\t\022\014\n\004port\030"
  "\006 \001(\005\022\014\n\004code\030\007 \001(\005\022\013\n\003msg\030\010 \001(\t\"\202\001\n\023Onv"
  "ifPtzMoveRequest\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001"
  "(\005\022\014\n\004user\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\017\n\007ch"
  "annel\030\005 \001(\005\022\021\n\tdirectory\030\006 \001(\005\022\r\n\005speed\030"
  "\007 \001(\002\".\n\021OnvifPtzMoveReply\022\014\n\004code\030\001 \001(\005"
  "\022\013\n\003msg\030\002 \001(\t\"`\n\023OnvifPtzStopRequest\022\n\n\002"
  "ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\014\n\004user\030\003 \001(\t\022\020\n\010"
  "password\030\004 \001(\t\022\017\n\007channel\030\005 \001(\005\".\n\021Onvif"
  "PtzStopReply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\""
  "n\n\022OnvifZoomInRequest\022\n\n\002ip\030\001 \001(\t\022\014\n\004por"
  "t\030\002 \001(\005\022\014\n\004user\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022"
  "\017\n\007channel\030\005 \001(\005\022\r\n\005speed\030\006 \001(\002\"-\n\020Onvif"
  "ZoomInReply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"o"
  "\n\023OnvifZoomOutRequest\022\n\n\002ip\030\001 \001(\t\022\014\n\004por"
  "t\030\002 \001(\005\022\014\n\004user\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022"
  "\017\n\007channel\030\005 \001(\005\022\r\n\005speed\030\006 \001(\002\".\n\021Onvif"
  "ZoomOutReply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\""
  "a\n\024OnvifZoomStopRequest\022\n\n\002ip\030\001 \001(\t\022\014\n\004p"
  "ort\030\002 \001(\005\022\014\n\004user\030\003 \001(\t\022\020\n\010password\030\004 \001("
  "\t\022\017\n\007channel\030\005 \001(\005\"/\n\022OnvifZoomStopReply"
  "\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"q\n\025OnvifFocu"
  "sNearRequest\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\014"
  "\n\004user\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\017\n\007channe"
  "l\030\005 \001(\005\022\r\n\005speed\030\006 \001(\002\"0\n\023OnvifFocusNear"
  "Reply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"p\n\024Onvi"
  "fFocusFarRequest\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001"
  "(\005\022\014\n\004user\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\017\n\007ch"
  "annel\030\005 \001(\005\022\r\n\005speed\030\006 \001(\002\"/\n\022OnvifFocus"
  "FarReply\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"b\n\025O"
  "nvifFocusStopRequest\022\n\n\002ip\030\001 \001(\t\022\014\n\004port"
  "\030\002 \001(\005\022\014\n\004user\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\017"
  "\n\007channel\030\005 \001(\005\"0\n\023OnvifFocusStopReply\022\014"
  "\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"\255\001\n\021OnvifPtz3D"
  "Request\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\014\n\004use"
  "r\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\017\n\007channel\030\005 \001"
  "(\005\022\n\n\002x1\030\006 \001(\005\022\n\n\002y1\030\007 \001(\005\022\n\n\002x2\030\010 \001(\005\022\n"
  "\n\002y2\030\t \001(\005\022\r\n\005width\030\n \001(\005\022\016\n\006height\030\013 \001("
  "\005\",\n\017OnvifPtz3DReply\022\014\n\004code\030\001 \001(\005\022\013\n\003ms"
  "g\030\002 \001(\t\"4\n\017OnvifPresetInfo\022\020\n\010preToken\030\001"
  " \001(\014\022\017\n\007preName\030\002 \001(\014\"b\n\025OnvifGetPresetR"
  "equest\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\014\n\004user"
  "\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\017\n\007channel\030\005 \001("
  "\005\"^\n\023OnvifGetPresetReply\022,\n\npresetList\030\001"
  " \003(\0132\030.GB28181.OnvifPresetInfo\022\014\n\004code\030\002"
  " \001(\005\022\013\n\003msg\030\003 \001(\t\"u\n\026OnvifGotoPresetRequ"
  "est\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\014\n\004user\030\003 "
  "\001(\t\022\020\n\010password\030\004 \001(\t\022\017\n\007channel\030\005 \001(\005\022\020"
  "\n\010preToken\030\006 \001(\014\"1\n\024OnvifGotoPresetReply"
  "\022\014\n\004code\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"\205\001\n\025OnvifSet"
  "PresetRequest\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022"
  "\014\n\004user\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\017\n\007chann"
  "el\030\005 \001(\005\022\020\n\010preToken\030\006 \001(\014\022\017\n\007preName\030\007 "
  "\001(\014\"0\n\023OnvifSetPresetReply\022\014\n\004code\030\001 \001(\005"
  "\022\013\n\003msg\030\002 \001(\t\"e\n\030OnvifDeviceRebootReques"
  "t\022\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\014\n\004user\030\003 \001("
  "\t\022\020\n\010password\030\004 \001(\t\022\017\n\007channel\030\005 \001(\005\"3\n\026"
  "OnvifDeviceRebootReply\022\014\n\004code\030\001 \001(\005\022\013\n\003"
  "msg\030\002 \001(\t\"c\n\026OnvifGetMainUrlRequest\022\n\n\002i"
  "p\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\014\n\004user\030\003 \001(\t\022\020\n\010p"
  "assword\030\004 \001(\t\022\017\n\007channel\030\005 \001(\005\">\n\024OnvifG"
  "etMainUrlReply\022\013\n\003url\030\001 \001(\t\022\014\n\004code\030\002 \001("
  "\005\022\013\n\003msg\030\003 \001(\t\"b\n\025OnvifGetSubUrlRequest\022"
  "\n\n\002ip\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\014\n\004user\030\003 \001(\t\022"
  "\020\n\010password\030\004 \001(\t\022\017\n\007channel\030\005 \001(\005\"=\n\023On"
  "vifGetSubUrlReply\022\013\n\003url\030\001 \001(\t\022\014\n\004code\030\002"
  " \001(\005\022\013\n\003msg\030\003 \001(\t2\254!\n\007Greeter\022A\n\nPtzComm"
  "and\022\032.GB28181.PtzCommandRequest\032\025.GB2818"
  "1.ControlReply\"\000\022A\n\tPtzZoomIn\022\031.GB28181."
  "PtzZoomInRequest\032\027.GB28181.PtzZoomInRepl"
  "y\"\000\022D\n\nPtzZoomOut\022\032.GB28181.PtzZoomOutRe"
  "quest\032\030.GB28181.PtzZoomOutReply\"\000\022D\n\nPtz"
  "IrisBig\022\032.GB28181.PtzIrisBigRequest\032\030.GB"
  "28181.PtzIrisBigReply\"\000\022J\n\014PtzIrisSmall\022"
  "\034.GB28181.PtzIrisSmallRequest\032\032.GB28181."
  "PtzIrisSmallReply\"\000\022G\n\013PtzFocusOut\022\033.GB2"
  "8181.PtzFocusOutRequest\032\031.GB28181.PtzFoc"
  "usOutReply\"\000\022D\n\nPtzFocusIn\022\032.GB28181.Ptz"
  "FocusInRequest\032\030.GB28181.PtzFocusInReply"
  "\"\000\022A\n\tPtzIFStop\022\031.GB28181.PtzIFStopReque"
  "st\032\027.GB28181.PtzIFStopReply\"\000\022;\n\007PtzStop"
  "\022\027.GB28181.PtzStopRequest\032\025.GB28181.PtzS"
  "topReply\"\000\022J\n\016GetRealPlayUrl\022\033.GB28181.R"
  "ealPlayUrlRequest\032\031.GB28181.RealPlayUrlR"
  "eply\"\000\022D\n\nGetRTMPUrl\022\032.GB28181.GetRTMPUr"
  "lRequest\032\030.GB28181.GetRTMPUrlReply\"\000\022A\n\t"
  "GetHLSUrl\022\031.GB28181.GetHLSUrlRequest\032\027.G"
  "B28181.GetHLSUrlReply\"\000\022P\n\020GetRealPlayUr"
  "lIn\022\035.GB28181.RealPlayUrlInRequest\032\033.GB2"
  "8181.RealPlayUrlInReply\"\000\022J\n\014GetRTMPUrlI"
  "n\022\034.GB28181.GetRTMPUrlInRequest\032\032.GB2818"
  "1.GetRTMPUrlInReply\"\000\022G\n\013GetHLSUrlIn\022\033.G"
  "B28181.GetHLSUrlInRequest\032\031.GB28181.GetH"
  "LSUrlInReply\"\000\022M\n\rStopVideoById\022\035.GB2818"
  "1.StopVideoByIdRequest\032\033.GB28181.StopVid"
  "eoByIdReply\"\000\022S\n\017StopVideoBySsrc\022\037.GB281"
  "81.StopVideoBySsrcRequest\032\035.GB28181.Stop"
  "VideoBySsrcReply\"\000\022J\n\016GetPlayBackUrl\022\033.G"
  "B28181.PlayBackUrlRequest\032\031.GB28181.Play"
  "BackUrlReply\"\000\022=\n\010PresetGo\022\030.GB28181.Pre"
  "setGoRequest\032\025.GB28181.ControlReply\"\000\022\?\n"
  "\tPresetSet\022\031.GB28181.PresetSetRequest\032\025."
  "GB28181.ControlReply\"\000\022\?\n\tPresetDel\022\031.GB"
  "28181.PresetDelRequest\032\025.GB28181.Control"
  "Reply\"\000\022G\n\013PresetQuery\022\033.GB28181.PresetQ"
  "ueryRequest\032\031.GB28181.PresetQueryReply\"\000"
  "\022A\n\tGetPreset\022\031.GB28181.GetPresetRequest"
  "\032\027.GB28181.GetPresetReply\"\000\022G\n\013QueryReco"
  "rd\022\033.GB28181.QueryRecordRequest\032\031.GB2818"
  "1.QueryRecordReply\"\000\022A\n\tGetRecord\022\031.GB28"
  "181.GetRecordRequest\032\027.GB28181.GetRecord"
  "Reply\"\000\022>\n\010PlayFast\022\030.GB28181.PlayFastRe"
  "quest\032\026.GB28181.PlayFastReply\"\000\022>\n\010PlayS"
  "low\022\030.GB28181.PlaySlowRequest\032\026.GB28181."
  "PlaySlowReply\"\000\0225\n\005Pause\022\025.GB28181.Pause"
  "Request\032\023.GB28181.PauseReply\"\000\0222\n\004Play\022\024"
  ".GB28181.PlayRequest\032\022.GB28181.PlayReply"
  "\"\000\0222\n\004Seek\022\024.GB28181.SeekRequest\032\022.GB281"
  "81.SeekReply\"\000\022A\n\tGoForward\022\031.GB28181.Go"
  "ForwardRequest\032\027.GB28181.GoForwardReply\""
  "\000\022P\n\016StopPlayRecord\022\036.GB28181.StopPlayRe"
  "cordRequest\032\034.GB28181.StopPlayRecordRepl"
  "y\"\000\0228\n\006GoBack\022\026.GB28181.GoBackRequest\032\024."
  "GB28181.GoBackReply\"\000\022P\n\016RecordDownload\022"
  "\036.GB28181.RecordDownloadRequest\032\034.GB2818"
  "1.RecordDownloadReply\"\000\022S\n\017GetDeviceStat"
  "us\022\037.GB28181.GetDeviceStatusRequest\032\035.GB"
  "28181.GetDeviceStatusReply\"\000\022\\\n\022GetAllDe"
  "viceStatus\022\".GB28181.GetAllDeviceStatusR"
  "equest\032 .GB28181.GetAllDeviceStatusReply"
  "\"\000\022M\n\rGetDeviceList\022\035.GB28181.GetDeviceL"
  "istRequest\032\033.GB28181.GetDeviceListReply\""
  "\000\022J\n\014DeviceReboot\022\034.GB28181.DeviceReboot"
  "Request\032\032.GB28181.DeviceRebootReply\"\000\022P\n"
  "\016StartBroadcast\022\036.GB28181.StartBroadcast"
  "Request\032\034.GB28181.StartBroadcastReply\"\000\022"
  "M\n\rStopBroadcast\022\035.GB28181.StopBroadcast"
  "Request\032\033.GB28181.StopBroadcastReply\"\000\022A"
  "\n\tStartTalk\022\031.GB28181.StartTalkRequest\032\027"
  ".GB28181.StartTalkReply\"\000\022>\n\010StopTalk\022\030."
  "GB28181.StopTalkRequest\032\026.GB28181.StopTa"
  "lkReply\"\000\022M\n\rServiceStatus\022\035.GB28181.Ser"
  "viceStatusRequest\032\033.GB28181.ServiceStatu"
  "sReply\"\000\022J\n\014OnvifPtzMove\022\034.GB28181.Onvif"
  "PtzMoveRequest\032\032.GB28181.OnvifPtzMoveRep"
  "ly\"\000\022J\n\014OnvifPtzStop\022\034.GB28181.OnvifPtzS"
  "topRequest\032\032.GB28181.OnvifPtzStopReply\"\000"
  "\022G\n\013OnvifZoomIn\022\033.GB28181.OnvifZoomInReq"
  "uest\032\031.GB28181.OnvifZoomInReply\"\000\022J\n\014Onv"
  "ifZoomOut\022\034.GB28181.OnvifZoomOutRequest\032"
  "\032.GB28181.OnvifZoomOutReply\"\000\022M\n\rOnvifZo"
  "omStop\022\035.GB28181.OnvifZoomStopRequest\032\033."
  "GB28181.OnvifZoomStopReply\"\000\022P\n\016OnvifFoc"
  "usNear\022\036.GB28181.OnvifFocusNearRequest\032\034"
  ".GB28181.OnvifFocusNearReply\"\000\022M\n\rOnvifF"
  "ocusFar\022\035.GB28181.OnvifFocusFarRequest\032\033"
  ".GB28181.OnvifFocusFarReply\"\000\022P\n\016OnvifFo"
  "cusStop\022\036.GB28181.OnvifFocusStopRequest\032"
  "\034.GB28181.OnvifFocusStopReply\"\000\022D\n\nOnvif"
  "Ptz3D\022\032.GB28181.OnvifPtz3DRequest\032\030.GB28"
  "181.OnvifPtz3DReply\"\000\022P\n\016OnvifGetPreset\022"
  "\036.GB28181.OnvifGetPresetRequest\032\034.GB2818"
  "1.OnvifGetPresetReply\"\000\022S\n\017OnvifGotoPres"
  "et\022\037.GB28181.OnvifGotoPresetRequest\032\035.GB"
  "28181.OnvifGotoPresetReply\"\000\022P\n\016OnvifSet"
  "Preset\022\036.GB28181.OnvifSetPresetRequest\032\034"
  ".GB28181.OnvifSetPresetReply\"\000\022Y\n\021OnvifD"
  "eviceReboot\022!.GB28181.OnvifDeviceRebootR"
  "equest\032\037.GB28181.OnvifDeviceRebootReply\""
  "\000\022S\n\017OnvifGetMainUrl\022\037.GB28181.OnvifGetM"
  "ainUrlRequest\032\035.GB28181.OnvifGetMainUrlR"
  "eply\"\000\022P\n\016OnvifGetSubUrl\022\036.GB28181.Onvif"
  "GetSubUrlRequest\032\034.GB28181.OnvifGetSubUr"
  "lReply\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_gb28181_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_gb28181_2eproto_sccs[118] = {
  &scc_info_ControlReply_gb28181_2eproto.base,
  &scc_info_DeviceList_gb28181_2eproto.base,
  &scc_info_DeviceRebootReply_gb28181_2eproto.base,
  &scc_info_DeviceRebootRequest_gb28181_2eproto.base,
  &scc_info_GetAllDeviceStatusReply_gb28181_2eproto.base,
  &scc_info_GetAllDeviceStatusRequest_gb28181_2eproto.base,
  &scc_info_GetDeviceListReply_gb28181_2eproto.base,
  &scc_info_GetDeviceListRequest_gb28181_2eproto.base,
  &scc_info_GetDeviceStatusReply_gb28181_2eproto.base,
  &scc_info_GetDeviceStatusRequest_gb28181_2eproto.base,
  &scc_info_GetHLSUrlInReply_gb28181_2eproto.base,
  &scc_info_GetHLSUrlInRequest_gb28181_2eproto.base,
  &scc_info_GetHLSUrlReply_gb28181_2eproto.base,
  &scc_info_GetHLSUrlRequest_gb28181_2eproto.base,
  &scc_info_GetPresetReply_gb28181_2eproto.base,
  &scc_info_GetPresetRequest_gb28181_2eproto.base,
  &scc_info_GetRTMPUrlInReply_gb28181_2eproto.base,
  &scc_info_GetRTMPUrlInRequest_gb28181_2eproto.base,
  &scc_info_GetRTMPUrlReply_gb28181_2eproto.base,
  &scc_info_GetRTMPUrlRequest_gb28181_2eproto.base,
  &scc_info_GetRecordReply_gb28181_2eproto.base,
  &scc_info_GetRecordRequest_gb28181_2eproto.base,
  &scc_info_GoBackReply_gb28181_2eproto.base,
  &scc_info_GoBackRequest_gb28181_2eproto.base,
  &scc_info_GoForwardReply_gb28181_2eproto.base,
  &scc_info_GoForwardRequest_gb28181_2eproto.base,
  &scc_info_OnvifDeviceRebootReply_gb28181_2eproto.base,
  &scc_info_OnvifDeviceRebootRequest_gb28181_2eproto.base,
  &scc_info_OnvifFocusFarReply_gb28181_2eproto.base,
  &scc_info_OnvifFocusFarRequest_gb28181_2eproto.base,
  &scc_info_OnvifFocusNearReply_gb28181_2eproto.base,
  &scc_info_OnvifFocusNearRequest_gb28181_2eproto.base,
  &scc_info_OnvifFocusStopReply_gb28181_2eproto.base,
  &scc_info_OnvifFocusStopRequest_gb28181_2eproto.base,
  &scc_info_OnvifGetMainUrlReply_gb28181_2eproto.base,
  &scc_info_OnvifGetMainUrlRequest_gb28181_2eproto.base,
  &scc_info_OnvifGetPresetReply_gb28181_2eproto.base,
  &scc_info_OnvifGetPresetRequest_gb28181_2eproto.base,
  &scc_info_OnvifGetSubUrlReply_gb28181_2eproto.base,
  &scc_info_OnvifGetSubUrlRequest_gb28181_2eproto.base,
  &scc_info_OnvifGotoPresetReply_gb28181_2eproto.base,
  &scc_info_OnvifGotoPresetRequest_gb28181_2eproto.base,
  &scc_info_OnvifPresetInfo_gb28181_2eproto.base,
  &scc_info_OnvifPtz3DReply_gb28181_2eproto.base,
  &scc_info_OnvifPtz3DRequest_gb28181_2eproto.base,
  &scc_info_OnvifPtzMoveReply_gb28181_2eproto.base,
  &scc_info_OnvifPtzMoveRequest_gb28181_2eproto.base,
  &scc_info_OnvifPtzStopReply_gb28181_2eproto.base,
  &scc_info_OnvifPtzStopRequest_gb28181_2eproto.base,
  &scc_info_OnvifSetPresetReply_gb28181_2eproto.base,
  &scc_info_OnvifSetPresetRequest_gb28181_2eproto.base,
  &scc_info_OnvifZoomInReply_gb28181_2eproto.base,
  &scc_info_OnvifZoomInRequest_gb28181_2eproto.base,
  &scc_info_OnvifZoomOutReply_gb28181_2eproto.base,
  &scc_info_OnvifZoomOutRequest_gb28181_2eproto.base,
  &scc_info_OnvifZoomStopReply_gb28181_2eproto.base,
  &scc_info_OnvifZoomStopRequest_gb28181_2eproto.base,
  &scc_info_PauseReply_gb28181_2eproto.base,
  &scc_info_PauseRequest_gb28181_2eproto.base,
  &scc_info_PlayBackUrlReply_gb28181_2eproto.base,
  &scc_info_PlayBackUrlRequest_gb28181_2eproto.base,
  &scc_info_PlayFastReply_gb28181_2eproto.base,
  &scc_info_PlayFastRequest_gb28181_2eproto.base,
  &scc_info_PlayReply_gb28181_2eproto.base,
  &scc_info_PlayRequest_gb28181_2eproto.base,
  &scc_info_PlaySlowReply_gb28181_2eproto.base,
  &scc_info_PlaySlowRequest_gb28181_2eproto.base,
  &scc_info_PresetDelRequest_gb28181_2eproto.base,
  &scc_info_PresetGoRequest_gb28181_2eproto.base,
  &scc_info_PresetInfo_gb28181_2eproto.base,
  &scc_info_PresetQueryReply_gb28181_2eproto.base,
  &scc_info_PresetQueryRequest_gb28181_2eproto.base,
  &scc_info_PresetSetRequest_gb28181_2eproto.base,
  &scc_info_PtzCommandRequest_gb28181_2eproto.base,
  &scc_info_PtzFocusInReply_gb28181_2eproto.base,
  &scc_info_PtzFocusInRequest_gb28181_2eproto.base,
  &scc_info_PtzFocusOutReply_gb28181_2eproto.base,
  &scc_info_PtzFocusOutRequest_gb28181_2eproto.base,
  &scc_info_PtzIFStopReply_gb28181_2eproto.base,
  &scc_info_PtzIFStopRequest_gb28181_2eproto.base,
  &scc_info_PtzIrisBigReply_gb28181_2eproto.base,
  &scc_info_PtzIrisBigRequest_gb28181_2eproto.base,
  &scc_info_PtzIrisSmallReply_gb28181_2eproto.base,
  &scc_info_PtzIrisSmallRequest_gb28181_2eproto.base,
  &scc_info_PtzStopReply_gb28181_2eproto.base,
  &scc_info_PtzStopRequest_gb28181_2eproto.base,
  &scc_info_PtzZoomInReply_gb28181_2eproto.base,
  &scc_info_PtzZoomInRequest_gb28181_2eproto.base,
  &scc_info_PtzZoomOutReply_gb28181_2eproto.base,
  &scc_info_PtzZoomOutRequest_gb28181_2eproto.base,
  &scc_info_QueryRecordReply_gb28181_2eproto.base,
  &scc_info_QueryRecordRequest_gb28181_2eproto.base,
  &scc_info_RealPlayUrlInReply_gb28181_2eproto.base,
  &scc_info_RealPlayUrlInRequest_gb28181_2eproto.base,
  &scc_info_RealPlayUrlReply_gb28181_2eproto.base,
  &scc_info_RealPlayUrlRequest_gb28181_2eproto.base,
  &scc_info_RecordDownloadReply_gb28181_2eproto.base,
  &scc_info_RecordDownloadRequest_gb28181_2eproto.base,
  &scc_info_RecordInfo_gb28181_2eproto.base,
  &scc_info_SeekReply_gb28181_2eproto.base,
  &scc_info_SeekRequest_gb28181_2eproto.base,
  &scc_info_ServiceStatusReply_gb28181_2eproto.base,
  &scc_info_ServiceStatusRequest_gb28181_2eproto.base,
  &scc_info_StartBroadcastReply_gb28181_2eproto.base,
  &scc_info_StartBroadcastRequest_gb28181_2eproto.base,
  &scc_info_StartTalkReply_gb28181_2eproto.base,
  &scc_info_StartTalkRequest_gb28181_2eproto.base,
  &scc_info_StatusInfo_gb28181_2eproto.base,
  &scc_info_StopBroadcastReply_gb28181_2eproto.base,
  &scc_info_StopBroadcastRequest_gb28181_2eproto.base,
  &scc_info_StopPlayRecordReply_gb28181_2eproto.base,
  &scc_info_StopPlayRecordRequest_gb28181_2eproto.base,
  &scc_info_StopTalkReply_gb28181_2eproto.base,
  &scc_info_StopTalkRequest_gb28181_2eproto.base,
  &scc_info_StopVideoByIdReply_gb28181_2eproto.base,
  &scc_info_StopVideoByIdRequest_gb28181_2eproto.base,
  &scc_info_StopVideoBySsrcReply_gb28181_2eproto.base,
  &scc_info_StopVideoBySsrcRequest_gb28181_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_gb28181_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gb28181_2eproto = {
  false, false, descriptor_table_protodef_gb28181_2eproto, "gb28181.proto", 12056,
  &descriptor_table_gb28181_2eproto_once, descriptor_table_gb28181_2eproto_sccs, descriptor_table_gb28181_2eproto_deps, 118, 0,
  schemas, file_default_instances, TableStruct_gb28181_2eproto::offsets,
  file_level_metadata_gb28181_2eproto, 118, file_level_enum_descriptors_gb28181_2eproto, file_level_service_descriptors_gb28181_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_gb28181_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_gb28181_2eproto)), true);
namespace GB28181 {

// ===================================================================

void PtzCommandRequest::InitAsDefaultInstance() {
}
class PtzCommandRequest::_Internal {
 public:
};

PtzCommandRequest::PtzCommandRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzCommandRequest)
}
PtzCommandRequest::PtzCommandRequest(const PtzCommandRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  ::memcpy(&speed_, &from.speed_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&speed_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzCommandRequest)
}

void PtzCommandRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzCommandRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&speed_)) + sizeof(direction_));
}

PtzCommandRequest::~PtzCommandRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PtzCommandRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzCommandRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzCommandRequest::ArenaDtor(void* object) {
  PtzCommandRequest* _this = reinterpret_cast< PtzCommandRequest* >(object);
  (void)_this;
}
void PtzCommandRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzCommandRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzCommandRequest& PtzCommandRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzCommandRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzCommandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzCommandRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&speed_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&speed_)) + sizeof(direction_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzCommandRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzCommandRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzCommandRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 speed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 direction = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          direction_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzCommandRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzCommandRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzCommandRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzCommandRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_speed(), target);
  }

  // int32 direction = 4;
  if (this->direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzCommandRequest)
  return target;
}

size_t PtzCommandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzCommandRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speed());
  }

  // int32 direction = 4;
  if (this->direction() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_direction());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzCommandRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzCommandRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzCommandRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzCommandRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzCommandRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzCommandRequest)
    MergeFrom(*source);
  }
}

void PtzCommandRequest::MergeFrom(const PtzCommandRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzCommandRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  if (from.direction() != 0) {
    _internal_set_direction(from._internal_direction());
  }
}

void PtzCommandRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzCommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzCommandRequest::CopyFrom(const PtzCommandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzCommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzCommandRequest::IsInitialized() const {
  return true;
}

void PtzCommandRequest::InternalSwap(PtzCommandRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PtzCommandRequest, direction_)
      + sizeof(PtzCommandRequest::direction_)
      - PROTOBUF_FIELD_OFFSET(PtzCommandRequest, speed_)>(
          reinterpret_cast<char*>(&speed_),
          reinterpret_cast<char*>(&other->speed_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzCommandRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ControlReply::InitAsDefaultInstance() {
}
class ControlReply::_Internal {
 public:
};

ControlReply::ControlReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.ControlReply)
}
ControlReply::ControlReply(const ControlReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.ControlReply)
}

void ControlReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ControlReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

ControlReply::~ControlReply() {
  // @@protoc_insertion_point(destructor:GB28181.ControlReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ControlReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ControlReply::ArenaDtor(void* object) {
  ControlReply* _this = reinterpret_cast< ControlReply* >(object);
  (void)_this;
}
void ControlReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ControlReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlReply& ControlReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ControlReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void ControlReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.ControlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ControlReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.ControlReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ControlReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.ControlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.ControlReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.ControlReply)
  return target;
}

size_t ControlReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.ControlReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.ControlReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ControlReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.ControlReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.ControlReply)
    MergeFrom(*source);
  }
}

void ControlReply::MergeFrom(const ControlReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.ControlReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void ControlReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.ControlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlReply::CopyFrom(const ControlReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.ControlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlReply::IsInitialized() const {
  return true;
}

void ControlReply::InternalSwap(ControlReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ControlReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzZoomInRequest::InitAsDefaultInstance() {
}
class PtzZoomInRequest::_Internal {
 public:
};

PtzZoomInRequest::PtzZoomInRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzZoomInRequest)
}
PtzZoomInRequest::PtzZoomInRequest(const PtzZoomInRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzZoomInRequest)
}

void PtzZoomInRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzZoomInRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  speed_ = 0;
}

PtzZoomInRequest::~PtzZoomInRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PtzZoomInRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzZoomInRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzZoomInRequest::ArenaDtor(void* object) {
  PtzZoomInRequest* _this = reinterpret_cast< PtzZoomInRequest* >(object);
  (void)_this;
}
void PtzZoomInRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzZoomInRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzZoomInRequest& PtzZoomInRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzZoomInRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzZoomInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzZoomInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  speed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzZoomInRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzZoomInRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzZoomInRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 speed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzZoomInRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzZoomInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzZoomInRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzZoomInRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzZoomInRequest)
  return target;
}

size_t PtzZoomInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzZoomInRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzZoomInRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzZoomInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzZoomInRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzZoomInRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzZoomInRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzZoomInRequest)
    MergeFrom(*source);
  }
}

void PtzZoomInRequest::MergeFrom(const PtzZoomInRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzZoomInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
}

void PtzZoomInRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzZoomInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzZoomInRequest::CopyFrom(const PtzZoomInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzZoomInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzZoomInRequest::IsInitialized() const {
  return true;
}

void PtzZoomInRequest::InternalSwap(PtzZoomInRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(speed_, other->speed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzZoomInRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzZoomInReply::InitAsDefaultInstance() {
}
class PtzZoomInReply::_Internal {
 public:
};

PtzZoomInReply::PtzZoomInReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzZoomInReply)
}
PtzZoomInReply::PtzZoomInReply(const PtzZoomInReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzZoomInReply)
}

void PtzZoomInReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzZoomInReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PtzZoomInReply::~PtzZoomInReply() {
  // @@protoc_insertion_point(destructor:GB28181.PtzZoomInReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzZoomInReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzZoomInReply::ArenaDtor(void* object) {
  PtzZoomInReply* _this = reinterpret_cast< PtzZoomInReply* >(object);
  (void)_this;
}
void PtzZoomInReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzZoomInReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzZoomInReply& PtzZoomInReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzZoomInReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzZoomInReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzZoomInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzZoomInReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzZoomInReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzZoomInReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzZoomInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzZoomInReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzZoomInReply)
  return target;
}

size_t PtzZoomInReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzZoomInReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzZoomInReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzZoomInReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzZoomInReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzZoomInReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzZoomInReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzZoomInReply)
    MergeFrom(*source);
  }
}

void PtzZoomInReply::MergeFrom(const PtzZoomInReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzZoomInReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PtzZoomInReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzZoomInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzZoomInReply::CopyFrom(const PtzZoomInReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzZoomInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzZoomInReply::IsInitialized() const {
  return true;
}

void PtzZoomInReply::InternalSwap(PtzZoomInReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzZoomInReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzZoomOutRequest::InitAsDefaultInstance() {
}
class PtzZoomOutRequest::_Internal {
 public:
};

PtzZoomOutRequest::PtzZoomOutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzZoomOutRequest)
}
PtzZoomOutRequest::PtzZoomOutRequest(const PtzZoomOutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzZoomOutRequest)
}

void PtzZoomOutRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzZoomOutRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  speed_ = 0;
}

PtzZoomOutRequest::~PtzZoomOutRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PtzZoomOutRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzZoomOutRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzZoomOutRequest::ArenaDtor(void* object) {
  PtzZoomOutRequest* _this = reinterpret_cast< PtzZoomOutRequest* >(object);
  (void)_this;
}
void PtzZoomOutRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzZoomOutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzZoomOutRequest& PtzZoomOutRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzZoomOutRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzZoomOutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzZoomOutRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  speed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzZoomOutRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzZoomOutRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzZoomOutRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 speed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzZoomOutRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzZoomOutRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzZoomOutRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzZoomOutRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzZoomOutRequest)
  return target;
}

size_t PtzZoomOutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzZoomOutRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzZoomOutRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzZoomOutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzZoomOutRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzZoomOutRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzZoomOutRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzZoomOutRequest)
    MergeFrom(*source);
  }
}

void PtzZoomOutRequest::MergeFrom(const PtzZoomOutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzZoomOutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
}

void PtzZoomOutRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzZoomOutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzZoomOutRequest::CopyFrom(const PtzZoomOutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzZoomOutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzZoomOutRequest::IsInitialized() const {
  return true;
}

void PtzZoomOutRequest::InternalSwap(PtzZoomOutRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(speed_, other->speed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzZoomOutRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzZoomOutReply::InitAsDefaultInstance() {
}
class PtzZoomOutReply::_Internal {
 public:
};

PtzZoomOutReply::PtzZoomOutReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzZoomOutReply)
}
PtzZoomOutReply::PtzZoomOutReply(const PtzZoomOutReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzZoomOutReply)
}

void PtzZoomOutReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzZoomOutReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PtzZoomOutReply::~PtzZoomOutReply() {
  // @@protoc_insertion_point(destructor:GB28181.PtzZoomOutReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzZoomOutReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzZoomOutReply::ArenaDtor(void* object) {
  PtzZoomOutReply* _this = reinterpret_cast< PtzZoomOutReply* >(object);
  (void)_this;
}
void PtzZoomOutReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzZoomOutReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzZoomOutReply& PtzZoomOutReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzZoomOutReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzZoomOutReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzZoomOutReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzZoomOutReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzZoomOutReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzZoomOutReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzZoomOutReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzZoomOutReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzZoomOutReply)
  return target;
}

size_t PtzZoomOutReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzZoomOutReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzZoomOutReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzZoomOutReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzZoomOutReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzZoomOutReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzZoomOutReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzZoomOutReply)
    MergeFrom(*source);
  }
}

void PtzZoomOutReply::MergeFrom(const PtzZoomOutReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzZoomOutReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PtzZoomOutReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzZoomOutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzZoomOutReply::CopyFrom(const PtzZoomOutReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzZoomOutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzZoomOutReply::IsInitialized() const {
  return true;
}

void PtzZoomOutReply::InternalSwap(PtzZoomOutReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzZoomOutReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzStopRequest::InitAsDefaultInstance() {
}
class PtzStopRequest::_Internal {
 public:
};

PtzStopRequest::PtzStopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzStopRequest)
}
PtzStopRequest::PtzStopRequest(const PtzStopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzStopRequest)
}

void PtzStopRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzStopRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PtzStopRequest::~PtzStopRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PtzStopRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzStopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzStopRequest::ArenaDtor(void* object) {
  PtzStopRequest* _this = reinterpret_cast< PtzStopRequest* >(object);
  (void)_this;
}
void PtzStopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzStopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzStopRequest& PtzStopRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzStopRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzStopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzStopRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzStopRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzStopRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzStopRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzStopRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzStopRequest)
  return target;
}

size_t PtzStopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzStopRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzStopRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzStopRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzStopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzStopRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzStopRequest)
    MergeFrom(*source);
  }
}

void PtzStopRequest::MergeFrom(const PtzStopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
}

void PtzStopRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzStopRequest::CopyFrom(const PtzStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzStopRequest::IsInitialized() const {
  return true;
}

void PtzStopRequest::InternalSwap(PtzStopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzStopRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzStopReply::InitAsDefaultInstance() {
}
class PtzStopReply::_Internal {
 public:
};

PtzStopReply::PtzStopReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzStopReply)
}
PtzStopReply::PtzStopReply(const PtzStopReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzStopReply)
}

void PtzStopReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzStopReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PtzStopReply::~PtzStopReply() {
  // @@protoc_insertion_point(destructor:GB28181.PtzStopReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzStopReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzStopReply::ArenaDtor(void* object) {
  PtzStopReply* _this = reinterpret_cast< PtzStopReply* >(object);
  (void)_this;
}
void PtzStopReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzStopReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzStopReply& PtzStopReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzStopReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzStopReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzStopReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzStopReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzStopReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzStopReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzStopReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzStopReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzStopReply)
  return target;
}

size_t PtzStopReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzStopReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzStopReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzStopReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzStopReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzStopReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzStopReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzStopReply)
    MergeFrom(*source);
  }
}

void PtzStopReply::MergeFrom(const PtzStopReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzStopReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PtzStopReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzStopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzStopReply::CopyFrom(const PtzStopReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzStopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzStopReply::IsInitialized() const {
  return true;
}

void PtzStopReply::InternalSwap(PtzStopReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzStopReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzIrisBigRequest::InitAsDefaultInstance() {
}
class PtzIrisBigRequest::_Internal {
 public:
};

PtzIrisBigRequest::PtzIrisBigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzIrisBigRequest)
}
PtzIrisBigRequest::PtzIrisBigRequest(const PtzIrisBigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzIrisBigRequest)
}

void PtzIrisBigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzIrisBigRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  speed_ = 0;
}

PtzIrisBigRequest::~PtzIrisBigRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PtzIrisBigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzIrisBigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzIrisBigRequest::ArenaDtor(void* object) {
  PtzIrisBigRequest* _this = reinterpret_cast< PtzIrisBigRequest* >(object);
  (void)_this;
}
void PtzIrisBigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzIrisBigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzIrisBigRequest& PtzIrisBigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzIrisBigRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzIrisBigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzIrisBigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  speed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzIrisBigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzIrisBigRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzIrisBigRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 speed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzIrisBigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzIrisBigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzIrisBigRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzIrisBigRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzIrisBigRequest)
  return target;
}

size_t PtzIrisBigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzIrisBigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzIrisBigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzIrisBigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzIrisBigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzIrisBigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzIrisBigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzIrisBigRequest)
    MergeFrom(*source);
  }
}

void PtzIrisBigRequest::MergeFrom(const PtzIrisBigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzIrisBigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
}

void PtzIrisBigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzIrisBigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzIrisBigRequest::CopyFrom(const PtzIrisBigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzIrisBigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzIrisBigRequest::IsInitialized() const {
  return true;
}

void PtzIrisBigRequest::InternalSwap(PtzIrisBigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(speed_, other->speed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzIrisBigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzIrisBigReply::InitAsDefaultInstance() {
}
class PtzIrisBigReply::_Internal {
 public:
};

PtzIrisBigReply::PtzIrisBigReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzIrisBigReply)
}
PtzIrisBigReply::PtzIrisBigReply(const PtzIrisBigReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzIrisBigReply)
}

void PtzIrisBigReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzIrisBigReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PtzIrisBigReply::~PtzIrisBigReply() {
  // @@protoc_insertion_point(destructor:GB28181.PtzIrisBigReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzIrisBigReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzIrisBigReply::ArenaDtor(void* object) {
  PtzIrisBigReply* _this = reinterpret_cast< PtzIrisBigReply* >(object);
  (void)_this;
}
void PtzIrisBigReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzIrisBigReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzIrisBigReply& PtzIrisBigReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzIrisBigReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzIrisBigReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzIrisBigReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzIrisBigReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzIrisBigReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzIrisBigReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzIrisBigReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzIrisBigReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzIrisBigReply)
  return target;
}

size_t PtzIrisBigReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzIrisBigReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzIrisBigReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzIrisBigReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzIrisBigReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzIrisBigReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzIrisBigReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzIrisBigReply)
    MergeFrom(*source);
  }
}

void PtzIrisBigReply::MergeFrom(const PtzIrisBigReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzIrisBigReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PtzIrisBigReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzIrisBigReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzIrisBigReply::CopyFrom(const PtzIrisBigReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzIrisBigReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzIrisBigReply::IsInitialized() const {
  return true;
}

void PtzIrisBigReply::InternalSwap(PtzIrisBigReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzIrisBigReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzIrisSmallRequest::InitAsDefaultInstance() {
}
class PtzIrisSmallRequest::_Internal {
 public:
};

PtzIrisSmallRequest::PtzIrisSmallRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzIrisSmallRequest)
}
PtzIrisSmallRequest::PtzIrisSmallRequest(const PtzIrisSmallRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzIrisSmallRequest)
}

void PtzIrisSmallRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzIrisSmallRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  speed_ = 0;
}

PtzIrisSmallRequest::~PtzIrisSmallRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PtzIrisSmallRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzIrisSmallRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzIrisSmallRequest::ArenaDtor(void* object) {
  PtzIrisSmallRequest* _this = reinterpret_cast< PtzIrisSmallRequest* >(object);
  (void)_this;
}
void PtzIrisSmallRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzIrisSmallRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzIrisSmallRequest& PtzIrisSmallRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzIrisSmallRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzIrisSmallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzIrisSmallRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  speed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzIrisSmallRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzIrisSmallRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzIrisSmallRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 speed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzIrisSmallRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzIrisSmallRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzIrisSmallRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzIrisSmallRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzIrisSmallRequest)
  return target;
}

size_t PtzIrisSmallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzIrisSmallRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzIrisSmallRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzIrisSmallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzIrisSmallRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzIrisSmallRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzIrisSmallRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzIrisSmallRequest)
    MergeFrom(*source);
  }
}

void PtzIrisSmallRequest::MergeFrom(const PtzIrisSmallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzIrisSmallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
}

void PtzIrisSmallRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzIrisSmallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzIrisSmallRequest::CopyFrom(const PtzIrisSmallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzIrisSmallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzIrisSmallRequest::IsInitialized() const {
  return true;
}

void PtzIrisSmallRequest::InternalSwap(PtzIrisSmallRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(speed_, other->speed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzIrisSmallRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzIrisSmallReply::InitAsDefaultInstance() {
}
class PtzIrisSmallReply::_Internal {
 public:
};

PtzIrisSmallReply::PtzIrisSmallReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzIrisSmallReply)
}
PtzIrisSmallReply::PtzIrisSmallReply(const PtzIrisSmallReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzIrisSmallReply)
}

void PtzIrisSmallReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzIrisSmallReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PtzIrisSmallReply::~PtzIrisSmallReply() {
  // @@protoc_insertion_point(destructor:GB28181.PtzIrisSmallReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzIrisSmallReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzIrisSmallReply::ArenaDtor(void* object) {
  PtzIrisSmallReply* _this = reinterpret_cast< PtzIrisSmallReply* >(object);
  (void)_this;
}
void PtzIrisSmallReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzIrisSmallReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzIrisSmallReply& PtzIrisSmallReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzIrisSmallReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzIrisSmallReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzIrisSmallReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzIrisSmallReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzIrisSmallReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzIrisSmallReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzIrisSmallReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzIrisSmallReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzIrisSmallReply)
  return target;
}

size_t PtzIrisSmallReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzIrisSmallReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzIrisSmallReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzIrisSmallReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzIrisSmallReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzIrisSmallReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzIrisSmallReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzIrisSmallReply)
    MergeFrom(*source);
  }
}

void PtzIrisSmallReply::MergeFrom(const PtzIrisSmallReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzIrisSmallReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PtzIrisSmallReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzIrisSmallReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzIrisSmallReply::CopyFrom(const PtzIrisSmallReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzIrisSmallReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzIrisSmallReply::IsInitialized() const {
  return true;
}

void PtzIrisSmallReply::InternalSwap(PtzIrisSmallReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzIrisSmallReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzFocusOutRequest::InitAsDefaultInstance() {
}
class PtzFocusOutRequest::_Internal {
 public:
};

PtzFocusOutRequest::PtzFocusOutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzFocusOutRequest)
}
PtzFocusOutRequest::PtzFocusOutRequest(const PtzFocusOutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzFocusOutRequest)
}

void PtzFocusOutRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzFocusOutRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  speed_ = 0;
}

PtzFocusOutRequest::~PtzFocusOutRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PtzFocusOutRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzFocusOutRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzFocusOutRequest::ArenaDtor(void* object) {
  PtzFocusOutRequest* _this = reinterpret_cast< PtzFocusOutRequest* >(object);
  (void)_this;
}
void PtzFocusOutRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzFocusOutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzFocusOutRequest& PtzFocusOutRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzFocusOutRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzFocusOutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzFocusOutRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  speed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzFocusOutRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzFocusOutRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzFocusOutRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 speed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzFocusOutRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzFocusOutRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzFocusOutRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzFocusOutRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzFocusOutRequest)
  return target;
}

size_t PtzFocusOutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzFocusOutRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzFocusOutRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzFocusOutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzFocusOutRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzFocusOutRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzFocusOutRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzFocusOutRequest)
    MergeFrom(*source);
  }
}

void PtzFocusOutRequest::MergeFrom(const PtzFocusOutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzFocusOutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
}

void PtzFocusOutRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzFocusOutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzFocusOutRequest::CopyFrom(const PtzFocusOutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzFocusOutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzFocusOutRequest::IsInitialized() const {
  return true;
}

void PtzFocusOutRequest::InternalSwap(PtzFocusOutRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(speed_, other->speed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzFocusOutRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzFocusOutReply::InitAsDefaultInstance() {
}
class PtzFocusOutReply::_Internal {
 public:
};

PtzFocusOutReply::PtzFocusOutReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzFocusOutReply)
}
PtzFocusOutReply::PtzFocusOutReply(const PtzFocusOutReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzFocusOutReply)
}

void PtzFocusOutReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzFocusOutReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PtzFocusOutReply::~PtzFocusOutReply() {
  // @@protoc_insertion_point(destructor:GB28181.PtzFocusOutReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzFocusOutReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzFocusOutReply::ArenaDtor(void* object) {
  PtzFocusOutReply* _this = reinterpret_cast< PtzFocusOutReply* >(object);
  (void)_this;
}
void PtzFocusOutReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzFocusOutReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzFocusOutReply& PtzFocusOutReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzFocusOutReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzFocusOutReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzFocusOutReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzFocusOutReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzFocusOutReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzFocusOutReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzFocusOutReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzFocusOutReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzFocusOutReply)
  return target;
}

size_t PtzFocusOutReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzFocusOutReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzFocusOutReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzFocusOutReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzFocusOutReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzFocusOutReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzFocusOutReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzFocusOutReply)
    MergeFrom(*source);
  }
}

void PtzFocusOutReply::MergeFrom(const PtzFocusOutReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzFocusOutReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PtzFocusOutReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzFocusOutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzFocusOutReply::CopyFrom(const PtzFocusOutReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzFocusOutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzFocusOutReply::IsInitialized() const {
  return true;
}

void PtzFocusOutReply::InternalSwap(PtzFocusOutReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzFocusOutReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzFocusInRequest::InitAsDefaultInstance() {
}
class PtzFocusInRequest::_Internal {
 public:
};

PtzFocusInRequest::PtzFocusInRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzFocusInRequest)
}
PtzFocusInRequest::PtzFocusInRequest(const PtzFocusInRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzFocusInRequest)
}

void PtzFocusInRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzFocusInRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  speed_ = 0;
}

PtzFocusInRequest::~PtzFocusInRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PtzFocusInRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzFocusInRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzFocusInRequest::ArenaDtor(void* object) {
  PtzFocusInRequest* _this = reinterpret_cast< PtzFocusInRequest* >(object);
  (void)_this;
}
void PtzFocusInRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzFocusInRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzFocusInRequest& PtzFocusInRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzFocusInRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzFocusInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzFocusInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  speed_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzFocusInRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzFocusInRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzFocusInRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 speed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzFocusInRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzFocusInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzFocusInRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzFocusInRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzFocusInRequest)
  return target;
}

size_t PtzFocusInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzFocusInRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 speed = 3;
  if (this->speed() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_speed());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzFocusInRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzFocusInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzFocusInRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzFocusInRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzFocusInRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzFocusInRequest)
    MergeFrom(*source);
  }
}

void PtzFocusInRequest::MergeFrom(const PtzFocusInRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzFocusInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
}

void PtzFocusInRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzFocusInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzFocusInRequest::CopyFrom(const PtzFocusInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzFocusInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzFocusInRequest::IsInitialized() const {
  return true;
}

void PtzFocusInRequest::InternalSwap(PtzFocusInRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(speed_, other->speed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzFocusInRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzFocusInReply::InitAsDefaultInstance() {
}
class PtzFocusInReply::_Internal {
 public:
};

PtzFocusInReply::PtzFocusInReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzFocusInReply)
}
PtzFocusInReply::PtzFocusInReply(const PtzFocusInReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzFocusInReply)
}

void PtzFocusInReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzFocusInReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PtzFocusInReply::~PtzFocusInReply() {
  // @@protoc_insertion_point(destructor:GB28181.PtzFocusInReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzFocusInReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzFocusInReply::ArenaDtor(void* object) {
  PtzFocusInReply* _this = reinterpret_cast< PtzFocusInReply* >(object);
  (void)_this;
}
void PtzFocusInReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzFocusInReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzFocusInReply& PtzFocusInReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzFocusInReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzFocusInReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzFocusInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzFocusInReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzFocusInReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzFocusInReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzFocusInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzFocusInReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzFocusInReply)
  return target;
}

size_t PtzFocusInReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzFocusInReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzFocusInReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzFocusInReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzFocusInReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzFocusInReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzFocusInReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzFocusInReply)
    MergeFrom(*source);
  }
}

void PtzFocusInReply::MergeFrom(const PtzFocusInReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzFocusInReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PtzFocusInReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzFocusInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzFocusInReply::CopyFrom(const PtzFocusInReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzFocusInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzFocusInReply::IsInitialized() const {
  return true;
}

void PtzFocusInReply::InternalSwap(PtzFocusInReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzFocusInReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzIFStopRequest::InitAsDefaultInstance() {
}
class PtzIFStopRequest::_Internal {
 public:
};

PtzIFStopRequest::PtzIFStopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzIFStopRequest)
}
PtzIFStopRequest::PtzIFStopRequest(const PtzIFStopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzIFStopRequest)
}

void PtzIFStopRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzIFStopRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PtzIFStopRequest::~PtzIFStopRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PtzIFStopRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzIFStopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzIFStopRequest::ArenaDtor(void* object) {
  PtzIFStopRequest* _this = reinterpret_cast< PtzIFStopRequest* >(object);
  (void)_this;
}
void PtzIFStopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzIFStopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzIFStopRequest& PtzIFStopRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzIFStopRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzIFStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzIFStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzIFStopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzIFStopRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzIFStopRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzIFStopRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzIFStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzIFStopRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzIFStopRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzIFStopRequest)
  return target;
}

size_t PtzIFStopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzIFStopRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzIFStopRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzIFStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzIFStopRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzIFStopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzIFStopRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzIFStopRequest)
    MergeFrom(*source);
  }
}

void PtzIFStopRequest::MergeFrom(const PtzIFStopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzIFStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
}

void PtzIFStopRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzIFStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzIFStopRequest::CopyFrom(const PtzIFStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzIFStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzIFStopRequest::IsInitialized() const {
  return true;
}

void PtzIFStopRequest::InternalSwap(PtzIFStopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzIFStopRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PtzIFStopReply::InitAsDefaultInstance() {
}
class PtzIFStopReply::_Internal {
 public:
};

PtzIFStopReply::PtzIFStopReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PtzIFStopReply)
}
PtzIFStopReply::PtzIFStopReply(const PtzIFStopReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PtzIFStopReply)
}

void PtzIFStopReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PtzIFStopReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PtzIFStopReply::~PtzIFStopReply() {
  // @@protoc_insertion_point(destructor:GB28181.PtzIFStopReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PtzIFStopReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PtzIFStopReply::ArenaDtor(void* object) {
  PtzIFStopReply* _this = reinterpret_cast< PtzIFStopReply* >(object);
  (void)_this;
}
void PtzIFStopReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PtzIFStopReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PtzIFStopReply& PtzIFStopReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PtzIFStopReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PtzIFStopReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PtzIFStopReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PtzIFStopReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PtzIFStopReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PtzIFStopReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PtzIFStopReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PtzIFStopReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PtzIFStopReply)
  return target;
}

size_t PtzIFStopReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PtzIFStopReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PtzIFStopReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PtzIFStopReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PtzIFStopReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PtzIFStopReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PtzIFStopReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PtzIFStopReply)
    MergeFrom(*source);
  }
}

void PtzIFStopReply::MergeFrom(const PtzIFStopReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PtzIFStopReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PtzIFStopReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PtzIFStopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PtzIFStopReply::CopyFrom(const PtzIFStopReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PtzIFStopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PtzIFStopReply::IsInitialized() const {
  return true;
}

void PtzIFStopReply::InternalSwap(PtzIFStopReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PtzIFStopReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RealPlayUrlRequest::InitAsDefaultInstance() {
}
class RealPlayUrlRequest::_Internal {
 public:
};

RealPlayUrlRequest::RealPlayUrlRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.RealPlayUrlRequest)
}
RealPlayUrlRequest::RealPlayUrlRequest(const RealPlayUrlRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  istcp_ = from.istcp_;
  // @@protoc_insertion_point(copy_constructor:GB28181.RealPlayUrlRequest)
}

void RealPlayUrlRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RealPlayUrlRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  istcp_ = 0;
}

RealPlayUrlRequest::~RealPlayUrlRequest() {
  // @@protoc_insertion_point(destructor:GB28181.RealPlayUrlRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RealPlayUrlRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RealPlayUrlRequest::ArenaDtor(void* object) {
  RealPlayUrlRequest* _this = reinterpret_cast< RealPlayUrlRequest* >(object);
  (void)_this;
}
void RealPlayUrlRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RealPlayUrlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RealPlayUrlRequest& RealPlayUrlRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RealPlayUrlRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void RealPlayUrlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.RealPlayUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  istcp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RealPlayUrlRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RealPlayUrlRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RealPlayUrlRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isTcp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          istcp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RealPlayUrlRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.RealPlayUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RealPlayUrlRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RealPlayUrlRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_istcp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.RealPlayUrlRequest)
  return target;
}

size_t RealPlayUrlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.RealPlayUrlRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_istcp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RealPlayUrlRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.RealPlayUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RealPlayUrlRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RealPlayUrlRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.RealPlayUrlRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.RealPlayUrlRequest)
    MergeFrom(*source);
  }
}

void RealPlayUrlRequest::MergeFrom(const RealPlayUrlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.RealPlayUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.istcp() != 0) {
    _internal_set_istcp(from._internal_istcp());
  }
}

void RealPlayUrlRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.RealPlayUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealPlayUrlRequest::CopyFrom(const RealPlayUrlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.RealPlayUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealPlayUrlRequest::IsInitialized() const {
  return true;
}

void RealPlayUrlRequest::InternalSwap(RealPlayUrlRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(istcp_, other->istcp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RealPlayUrlRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RealPlayUrlReply::InitAsDefaultInstance() {
}
class RealPlayUrlReply::_Internal {
 public:
};

RealPlayUrlReply::RealPlayUrlReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.RealPlayUrlReply)
}
RealPlayUrlReply::RealPlayUrlReply(const RealPlayUrlReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.RealPlayUrlReply)
}

void RealPlayUrlReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RealPlayUrlReply_gb28181_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

RealPlayUrlReply::~RealPlayUrlReply() {
  // @@protoc_insertion_point(destructor:GB28181.RealPlayUrlReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RealPlayUrlReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RealPlayUrlReply::ArenaDtor(void* object) {
  RealPlayUrlReply* _this = reinterpret_cast< RealPlayUrlReply* >(object);
  (void)_this;
}
void RealPlayUrlReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RealPlayUrlReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RealPlayUrlReply& RealPlayUrlReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RealPlayUrlReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void RealPlayUrlReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.RealPlayUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RealPlayUrlReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RealPlayUrlReply.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RealPlayUrlReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RealPlayUrlReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.RealPlayUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RealPlayUrlReply.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RealPlayUrlReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.RealPlayUrlReply)
  return target;
}

size_t RealPlayUrlReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.RealPlayUrlReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RealPlayUrlReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.RealPlayUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RealPlayUrlReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RealPlayUrlReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.RealPlayUrlReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.RealPlayUrlReply)
    MergeFrom(*source);
  }
}

void RealPlayUrlReply::MergeFrom(const RealPlayUrlReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.RealPlayUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void RealPlayUrlReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.RealPlayUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealPlayUrlReply::CopyFrom(const RealPlayUrlReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.RealPlayUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealPlayUrlReply::IsInitialized() const {
  return true;
}

void RealPlayUrlReply::InternalSwap(RealPlayUrlReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RealPlayUrlReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RealPlayUrlInRequest::InitAsDefaultInstance() {
}
class RealPlayUrlInRequest::_Internal {
 public:
};

RealPlayUrlInRequest::RealPlayUrlInRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.RealPlayUrlInRequest)
}
RealPlayUrlInRequest::RealPlayUrlInRequest(const RealPlayUrlInRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  istcp_ = from.istcp_;
  // @@protoc_insertion_point(copy_constructor:GB28181.RealPlayUrlInRequest)
}

void RealPlayUrlInRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RealPlayUrlInRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  istcp_ = 0;
}

RealPlayUrlInRequest::~RealPlayUrlInRequest() {
  // @@protoc_insertion_point(destructor:GB28181.RealPlayUrlInRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RealPlayUrlInRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RealPlayUrlInRequest::ArenaDtor(void* object) {
  RealPlayUrlInRequest* _this = reinterpret_cast< RealPlayUrlInRequest* >(object);
  (void)_this;
}
void RealPlayUrlInRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RealPlayUrlInRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RealPlayUrlInRequest& RealPlayUrlInRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RealPlayUrlInRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void RealPlayUrlInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.RealPlayUrlInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  istcp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RealPlayUrlInRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RealPlayUrlInRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RealPlayUrlInRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isTcp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          istcp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RealPlayUrlInRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.RealPlayUrlInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RealPlayUrlInRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RealPlayUrlInRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_istcp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.RealPlayUrlInRequest)
  return target;
}

size_t RealPlayUrlInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.RealPlayUrlInRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_istcp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RealPlayUrlInRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.RealPlayUrlInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RealPlayUrlInRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RealPlayUrlInRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.RealPlayUrlInRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.RealPlayUrlInRequest)
    MergeFrom(*source);
  }
}

void RealPlayUrlInRequest::MergeFrom(const RealPlayUrlInRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.RealPlayUrlInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.istcp() != 0) {
    _internal_set_istcp(from._internal_istcp());
  }
}

void RealPlayUrlInRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.RealPlayUrlInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealPlayUrlInRequest::CopyFrom(const RealPlayUrlInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.RealPlayUrlInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealPlayUrlInRequest::IsInitialized() const {
  return true;
}

void RealPlayUrlInRequest::InternalSwap(RealPlayUrlInRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(istcp_, other->istcp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RealPlayUrlInRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RealPlayUrlInReply::InitAsDefaultInstance() {
}
class RealPlayUrlInReply::_Internal {
 public:
};

RealPlayUrlInReply::RealPlayUrlInReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.RealPlayUrlInReply)
}
RealPlayUrlInReply::RealPlayUrlInReply(const RealPlayUrlInReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.RealPlayUrlInReply)
}

void RealPlayUrlInReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RealPlayUrlInReply_gb28181_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

RealPlayUrlInReply::~RealPlayUrlInReply() {
  // @@protoc_insertion_point(destructor:GB28181.RealPlayUrlInReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RealPlayUrlInReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RealPlayUrlInReply::ArenaDtor(void* object) {
  RealPlayUrlInReply* _this = reinterpret_cast< RealPlayUrlInReply* >(object);
  (void)_this;
}
void RealPlayUrlInReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RealPlayUrlInReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RealPlayUrlInReply& RealPlayUrlInReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RealPlayUrlInReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void RealPlayUrlInReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.RealPlayUrlInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RealPlayUrlInReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RealPlayUrlInReply.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RealPlayUrlInReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RealPlayUrlInReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.RealPlayUrlInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RealPlayUrlInReply.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RealPlayUrlInReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.RealPlayUrlInReply)
  return target;
}

size_t RealPlayUrlInReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.RealPlayUrlInReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RealPlayUrlInReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.RealPlayUrlInReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RealPlayUrlInReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RealPlayUrlInReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.RealPlayUrlInReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.RealPlayUrlInReply)
    MergeFrom(*source);
  }
}

void RealPlayUrlInReply::MergeFrom(const RealPlayUrlInReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.RealPlayUrlInReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void RealPlayUrlInReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.RealPlayUrlInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RealPlayUrlInReply::CopyFrom(const RealPlayUrlInReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.RealPlayUrlInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RealPlayUrlInReply::IsInitialized() const {
  return true;
}

void RealPlayUrlInReply::InternalSwap(RealPlayUrlInReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RealPlayUrlInReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRTMPUrlRequest::InitAsDefaultInstance() {
}
class GetRTMPUrlRequest::_Internal {
 public:
};

GetRTMPUrlRequest::GetRTMPUrlRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetRTMPUrlRequest)
}
GetRTMPUrlRequest::GetRTMPUrlRequest(const GetRTMPUrlRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  istcp_ = from.istcp_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetRTMPUrlRequest)
}

void GetRTMPUrlRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRTMPUrlRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  istcp_ = 0;
}

GetRTMPUrlRequest::~GetRTMPUrlRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GetRTMPUrlRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRTMPUrlRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRTMPUrlRequest::ArenaDtor(void* object) {
  GetRTMPUrlRequest* _this = reinterpret_cast< GetRTMPUrlRequest* >(object);
  (void)_this;
}
void GetRTMPUrlRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRTMPUrlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRTMPUrlRequest& GetRTMPUrlRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRTMPUrlRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetRTMPUrlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetRTMPUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  istcp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRTMPUrlRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetRTMPUrlRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetRTMPUrlRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isTcp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          istcp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRTMPUrlRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetRTMPUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetRTMPUrlRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetRTMPUrlRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_istcp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetRTMPUrlRequest)
  return target;
}

size_t GetRTMPUrlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetRTMPUrlRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_istcp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRTMPUrlRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetRTMPUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRTMPUrlRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRTMPUrlRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetRTMPUrlRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetRTMPUrlRequest)
    MergeFrom(*source);
  }
}

void GetRTMPUrlRequest::MergeFrom(const GetRTMPUrlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetRTMPUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.istcp() != 0) {
    _internal_set_istcp(from._internal_istcp());
  }
}

void GetRTMPUrlRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetRTMPUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRTMPUrlRequest::CopyFrom(const GetRTMPUrlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetRTMPUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRTMPUrlRequest::IsInitialized() const {
  return true;
}

void GetRTMPUrlRequest::InternalSwap(GetRTMPUrlRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(istcp_, other->istcp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRTMPUrlRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRTMPUrlReply::InitAsDefaultInstance() {
}
class GetRTMPUrlReply::_Internal {
 public:
};

GetRTMPUrlReply::GetRTMPUrlReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetRTMPUrlReply)
}
GetRTMPUrlReply::GetRTMPUrlReply(const GetRTMPUrlReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetRTMPUrlReply)
}

void GetRTMPUrlReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRTMPUrlReply_gb28181_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetRTMPUrlReply::~GetRTMPUrlReply() {
  // @@protoc_insertion_point(destructor:GB28181.GetRTMPUrlReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRTMPUrlReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRTMPUrlReply::ArenaDtor(void* object) {
  GetRTMPUrlReply* _this = reinterpret_cast< GetRTMPUrlReply* >(object);
  (void)_this;
}
void GetRTMPUrlReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRTMPUrlReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRTMPUrlReply& GetRTMPUrlReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRTMPUrlReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetRTMPUrlReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetRTMPUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRTMPUrlReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetRTMPUrlReply.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetRTMPUrlReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRTMPUrlReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetRTMPUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetRTMPUrlReply.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetRTMPUrlReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetRTMPUrlReply)
  return target;
}

size_t GetRTMPUrlReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetRTMPUrlReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRTMPUrlReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetRTMPUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRTMPUrlReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRTMPUrlReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetRTMPUrlReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetRTMPUrlReply)
    MergeFrom(*source);
  }
}

void GetRTMPUrlReply::MergeFrom(const GetRTMPUrlReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetRTMPUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetRTMPUrlReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetRTMPUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRTMPUrlReply::CopyFrom(const GetRTMPUrlReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetRTMPUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRTMPUrlReply::IsInitialized() const {
  return true;
}

void GetRTMPUrlReply::InternalSwap(GetRTMPUrlReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRTMPUrlReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRTMPUrlInRequest::InitAsDefaultInstance() {
}
class GetRTMPUrlInRequest::_Internal {
 public:
};

GetRTMPUrlInRequest::GetRTMPUrlInRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetRTMPUrlInRequest)
}
GetRTMPUrlInRequest::GetRTMPUrlInRequest(const GetRTMPUrlInRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  istcp_ = from.istcp_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetRTMPUrlInRequest)
}

void GetRTMPUrlInRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRTMPUrlInRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  istcp_ = 0;
}

GetRTMPUrlInRequest::~GetRTMPUrlInRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GetRTMPUrlInRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRTMPUrlInRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRTMPUrlInRequest::ArenaDtor(void* object) {
  GetRTMPUrlInRequest* _this = reinterpret_cast< GetRTMPUrlInRequest* >(object);
  (void)_this;
}
void GetRTMPUrlInRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRTMPUrlInRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRTMPUrlInRequest& GetRTMPUrlInRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRTMPUrlInRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetRTMPUrlInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetRTMPUrlInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  istcp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRTMPUrlInRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetRTMPUrlInRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetRTMPUrlInRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isTcp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          istcp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRTMPUrlInRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetRTMPUrlInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetRTMPUrlInRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetRTMPUrlInRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_istcp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetRTMPUrlInRequest)
  return target;
}

size_t GetRTMPUrlInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetRTMPUrlInRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_istcp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRTMPUrlInRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetRTMPUrlInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRTMPUrlInRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRTMPUrlInRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetRTMPUrlInRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetRTMPUrlInRequest)
    MergeFrom(*source);
  }
}

void GetRTMPUrlInRequest::MergeFrom(const GetRTMPUrlInRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetRTMPUrlInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.istcp() != 0) {
    _internal_set_istcp(from._internal_istcp());
  }
}

void GetRTMPUrlInRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetRTMPUrlInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRTMPUrlInRequest::CopyFrom(const GetRTMPUrlInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetRTMPUrlInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRTMPUrlInRequest::IsInitialized() const {
  return true;
}

void GetRTMPUrlInRequest::InternalSwap(GetRTMPUrlInRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(istcp_, other->istcp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRTMPUrlInRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRTMPUrlInReply::InitAsDefaultInstance() {
}
class GetRTMPUrlInReply::_Internal {
 public:
};

GetRTMPUrlInReply::GetRTMPUrlInReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetRTMPUrlInReply)
}
GetRTMPUrlInReply::GetRTMPUrlInReply(const GetRTMPUrlInReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetRTMPUrlInReply)
}

void GetRTMPUrlInReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRTMPUrlInReply_gb28181_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetRTMPUrlInReply::~GetRTMPUrlInReply() {
  // @@protoc_insertion_point(destructor:GB28181.GetRTMPUrlInReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRTMPUrlInReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRTMPUrlInReply::ArenaDtor(void* object) {
  GetRTMPUrlInReply* _this = reinterpret_cast< GetRTMPUrlInReply* >(object);
  (void)_this;
}
void GetRTMPUrlInReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRTMPUrlInReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRTMPUrlInReply& GetRTMPUrlInReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRTMPUrlInReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetRTMPUrlInReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetRTMPUrlInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRTMPUrlInReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetRTMPUrlInReply.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetRTMPUrlInReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRTMPUrlInReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetRTMPUrlInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetRTMPUrlInReply.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetRTMPUrlInReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetRTMPUrlInReply)
  return target;
}

size_t GetRTMPUrlInReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetRTMPUrlInReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRTMPUrlInReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetRTMPUrlInReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRTMPUrlInReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRTMPUrlInReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetRTMPUrlInReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetRTMPUrlInReply)
    MergeFrom(*source);
  }
}

void GetRTMPUrlInReply::MergeFrom(const GetRTMPUrlInReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetRTMPUrlInReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetRTMPUrlInReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetRTMPUrlInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRTMPUrlInReply::CopyFrom(const GetRTMPUrlInReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetRTMPUrlInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRTMPUrlInReply::IsInitialized() const {
  return true;
}

void GetRTMPUrlInReply::InternalSwap(GetRTMPUrlInReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRTMPUrlInReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetHLSUrlRequest::InitAsDefaultInstance() {
}
class GetHLSUrlRequest::_Internal {
 public:
};

GetHLSUrlRequest::GetHLSUrlRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetHLSUrlRequest)
}
GetHLSUrlRequest::GetHLSUrlRequest(const GetHLSUrlRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  istcp_ = from.istcp_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetHLSUrlRequest)
}

void GetHLSUrlRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetHLSUrlRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  istcp_ = 0;
}

GetHLSUrlRequest::~GetHLSUrlRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GetHLSUrlRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetHLSUrlRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetHLSUrlRequest::ArenaDtor(void* object) {
  GetHLSUrlRequest* _this = reinterpret_cast< GetHLSUrlRequest* >(object);
  (void)_this;
}
void GetHLSUrlRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetHLSUrlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetHLSUrlRequest& GetHLSUrlRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetHLSUrlRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetHLSUrlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetHLSUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  istcp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetHLSUrlRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetHLSUrlRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetHLSUrlRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isTcp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          istcp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetHLSUrlRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetHLSUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetHLSUrlRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetHLSUrlRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_istcp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetHLSUrlRequest)
  return target;
}

size_t GetHLSUrlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetHLSUrlRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_istcp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetHLSUrlRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetHLSUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetHLSUrlRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetHLSUrlRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetHLSUrlRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetHLSUrlRequest)
    MergeFrom(*source);
  }
}

void GetHLSUrlRequest::MergeFrom(const GetHLSUrlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetHLSUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.istcp() != 0) {
    _internal_set_istcp(from._internal_istcp());
  }
}

void GetHLSUrlRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetHLSUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHLSUrlRequest::CopyFrom(const GetHLSUrlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetHLSUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHLSUrlRequest::IsInitialized() const {
  return true;
}

void GetHLSUrlRequest::InternalSwap(GetHLSUrlRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(istcp_, other->istcp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetHLSUrlRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetHLSUrlReply::InitAsDefaultInstance() {
}
class GetHLSUrlReply::_Internal {
 public:
};

GetHLSUrlReply::GetHLSUrlReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetHLSUrlReply)
}
GetHLSUrlReply::GetHLSUrlReply(const GetHLSUrlReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetHLSUrlReply)
}

void GetHLSUrlReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetHLSUrlReply_gb28181_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetHLSUrlReply::~GetHLSUrlReply() {
  // @@protoc_insertion_point(destructor:GB28181.GetHLSUrlReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetHLSUrlReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetHLSUrlReply::ArenaDtor(void* object) {
  GetHLSUrlReply* _this = reinterpret_cast< GetHLSUrlReply* >(object);
  (void)_this;
}
void GetHLSUrlReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetHLSUrlReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetHLSUrlReply& GetHLSUrlReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetHLSUrlReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetHLSUrlReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetHLSUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetHLSUrlReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetHLSUrlReply.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetHLSUrlReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetHLSUrlReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetHLSUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetHLSUrlReply.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetHLSUrlReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetHLSUrlReply)
  return target;
}

size_t GetHLSUrlReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetHLSUrlReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetHLSUrlReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetHLSUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetHLSUrlReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetHLSUrlReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetHLSUrlReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetHLSUrlReply)
    MergeFrom(*source);
  }
}

void GetHLSUrlReply::MergeFrom(const GetHLSUrlReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetHLSUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetHLSUrlReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetHLSUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHLSUrlReply::CopyFrom(const GetHLSUrlReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetHLSUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHLSUrlReply::IsInitialized() const {
  return true;
}

void GetHLSUrlReply::InternalSwap(GetHLSUrlReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetHLSUrlReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetHLSUrlInRequest::InitAsDefaultInstance() {
}
class GetHLSUrlInRequest::_Internal {
 public:
};

GetHLSUrlInRequest::GetHLSUrlInRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetHLSUrlInRequest)
}
GetHLSUrlInRequest::GetHLSUrlInRequest(const GetHLSUrlInRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  istcp_ = from.istcp_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetHLSUrlInRequest)
}

void GetHLSUrlInRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetHLSUrlInRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  istcp_ = 0;
}

GetHLSUrlInRequest::~GetHLSUrlInRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GetHLSUrlInRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetHLSUrlInRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetHLSUrlInRequest::ArenaDtor(void* object) {
  GetHLSUrlInRequest* _this = reinterpret_cast< GetHLSUrlInRequest* >(object);
  (void)_this;
}
void GetHLSUrlInRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetHLSUrlInRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetHLSUrlInRequest& GetHLSUrlInRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetHLSUrlInRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetHLSUrlInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetHLSUrlInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  istcp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetHLSUrlInRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetHLSUrlInRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetHLSUrlInRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isTcp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          istcp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetHLSUrlInRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetHLSUrlInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetHLSUrlInRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetHLSUrlInRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_istcp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetHLSUrlInRequest)
  return target;
}

size_t GetHLSUrlInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetHLSUrlInRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_istcp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetHLSUrlInRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetHLSUrlInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetHLSUrlInRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetHLSUrlInRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetHLSUrlInRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetHLSUrlInRequest)
    MergeFrom(*source);
  }
}

void GetHLSUrlInRequest::MergeFrom(const GetHLSUrlInRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetHLSUrlInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.istcp() != 0) {
    _internal_set_istcp(from._internal_istcp());
  }
}

void GetHLSUrlInRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetHLSUrlInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHLSUrlInRequest::CopyFrom(const GetHLSUrlInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetHLSUrlInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHLSUrlInRequest::IsInitialized() const {
  return true;
}

void GetHLSUrlInRequest::InternalSwap(GetHLSUrlInRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(istcp_, other->istcp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetHLSUrlInRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetHLSUrlInReply::InitAsDefaultInstance() {
}
class GetHLSUrlInReply::_Internal {
 public:
};

GetHLSUrlInReply::GetHLSUrlInReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetHLSUrlInReply)
}
GetHLSUrlInReply::GetHLSUrlInReply(const GetHLSUrlInReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetHLSUrlInReply)
}

void GetHLSUrlInReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetHLSUrlInReply_gb28181_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetHLSUrlInReply::~GetHLSUrlInReply() {
  // @@protoc_insertion_point(destructor:GB28181.GetHLSUrlInReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetHLSUrlInReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetHLSUrlInReply::ArenaDtor(void* object) {
  GetHLSUrlInReply* _this = reinterpret_cast< GetHLSUrlInReply* >(object);
  (void)_this;
}
void GetHLSUrlInReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetHLSUrlInReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetHLSUrlInReply& GetHLSUrlInReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetHLSUrlInReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetHLSUrlInReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetHLSUrlInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetHLSUrlInReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetHLSUrlInReply.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetHLSUrlInReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetHLSUrlInReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetHLSUrlInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetHLSUrlInReply.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetHLSUrlInReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetHLSUrlInReply)
  return target;
}

size_t GetHLSUrlInReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetHLSUrlInReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetHLSUrlInReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetHLSUrlInReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetHLSUrlInReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetHLSUrlInReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetHLSUrlInReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetHLSUrlInReply)
    MergeFrom(*source);
  }
}

void GetHLSUrlInReply::MergeFrom(const GetHLSUrlInReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetHLSUrlInReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetHLSUrlInReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetHLSUrlInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHLSUrlInReply::CopyFrom(const GetHLSUrlInReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetHLSUrlInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHLSUrlInReply::IsInitialized() const {
  return true;
}

void GetHLSUrlInReply::InternalSwap(GetHLSUrlInReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetHLSUrlInReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopVideoByIdRequest::InitAsDefaultInstance() {
}
class StopVideoByIdRequest::_Internal {
 public:
};

StopVideoByIdRequest::StopVideoByIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StopVideoByIdRequest)
}
StopVideoByIdRequest::StopVideoByIdRequest(const StopVideoByIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  istcp_ = from.istcp_;
  // @@protoc_insertion_point(copy_constructor:GB28181.StopVideoByIdRequest)
}

void StopVideoByIdRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopVideoByIdRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  istcp_ = 0;
}

StopVideoByIdRequest::~StopVideoByIdRequest() {
  // @@protoc_insertion_point(destructor:GB28181.StopVideoByIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopVideoByIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopVideoByIdRequest::ArenaDtor(void* object) {
  StopVideoByIdRequest* _this = reinterpret_cast< StopVideoByIdRequest* >(object);
  (void)_this;
}
void StopVideoByIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopVideoByIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopVideoByIdRequest& StopVideoByIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopVideoByIdRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StopVideoByIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StopVideoByIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  istcp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopVideoByIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopVideoByIdRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopVideoByIdRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isTcp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          istcp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopVideoByIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StopVideoByIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopVideoByIdRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopVideoByIdRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_istcp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StopVideoByIdRequest)
  return target;
}

size_t StopVideoByIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StopVideoByIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 isTcp = 3;
  if (this->istcp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_istcp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopVideoByIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StopVideoByIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopVideoByIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopVideoByIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StopVideoByIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StopVideoByIdRequest)
    MergeFrom(*source);
  }
}

void StopVideoByIdRequest::MergeFrom(const StopVideoByIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StopVideoByIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.istcp() != 0) {
    _internal_set_istcp(from._internal_istcp());
  }
}

void StopVideoByIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StopVideoByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopVideoByIdRequest::CopyFrom(const StopVideoByIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StopVideoByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopVideoByIdRequest::IsInitialized() const {
  return true;
}

void StopVideoByIdRequest::InternalSwap(StopVideoByIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(istcp_, other->istcp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopVideoByIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopVideoByIdReply::InitAsDefaultInstance() {
}
class StopVideoByIdReply::_Internal {
 public:
};

StopVideoByIdReply::StopVideoByIdReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StopVideoByIdReply)
}
StopVideoByIdReply::StopVideoByIdReply(const StopVideoByIdReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.StopVideoByIdReply)
}

void StopVideoByIdReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopVideoByIdReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

StopVideoByIdReply::~StopVideoByIdReply() {
  // @@protoc_insertion_point(destructor:GB28181.StopVideoByIdReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopVideoByIdReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopVideoByIdReply::ArenaDtor(void* object) {
  StopVideoByIdReply* _this = reinterpret_cast< StopVideoByIdReply* >(object);
  (void)_this;
}
void StopVideoByIdReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopVideoByIdReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopVideoByIdReply& StopVideoByIdReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopVideoByIdReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StopVideoByIdReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StopVideoByIdReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopVideoByIdReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopVideoByIdReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopVideoByIdReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StopVideoByIdReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopVideoByIdReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StopVideoByIdReply)
  return target;
}

size_t StopVideoByIdReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StopVideoByIdReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopVideoByIdReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StopVideoByIdReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StopVideoByIdReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopVideoByIdReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StopVideoByIdReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StopVideoByIdReply)
    MergeFrom(*source);
  }
}

void StopVideoByIdReply::MergeFrom(const StopVideoByIdReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StopVideoByIdReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void StopVideoByIdReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StopVideoByIdReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopVideoByIdReply::CopyFrom(const StopVideoByIdReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StopVideoByIdReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopVideoByIdReply::IsInitialized() const {
  return true;
}

void StopVideoByIdReply::InternalSwap(StopVideoByIdReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopVideoByIdReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopVideoBySsrcRequest::InitAsDefaultInstance() {
}
class StopVideoBySsrcRequest::_Internal {
 public:
};

StopVideoBySsrcRequest::StopVideoBySsrcRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StopVideoBySsrcRequest)
}
StopVideoBySsrcRequest::StopVideoBySsrcRequest(const StopVideoBySsrcRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ssrc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ssrc().empty()) {
    ssrc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ssrc(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.StopVideoBySsrcRequest)
}

void StopVideoBySsrcRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopVideoBySsrcRequest_gb28181_2eproto.base);
  ssrc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopVideoBySsrcRequest::~StopVideoBySsrcRequest() {
  // @@protoc_insertion_point(destructor:GB28181.StopVideoBySsrcRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopVideoBySsrcRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ssrc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopVideoBySsrcRequest::ArenaDtor(void* object) {
  StopVideoBySsrcRequest* _this = reinterpret_cast< StopVideoBySsrcRequest* >(object);
  (void)_this;
}
void StopVideoBySsrcRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopVideoBySsrcRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopVideoBySsrcRequest& StopVideoBySsrcRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopVideoBySsrcRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StopVideoBySsrcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StopVideoBySsrcRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ssrc_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopVideoBySsrcRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ssrc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ssrc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopVideoBySsrcRequest.ssrc"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopVideoBySsrcRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StopVideoBySsrcRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ssrc = 1;
  if (this->ssrc().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ssrc().data(), static_cast<int>(this->_internal_ssrc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopVideoBySsrcRequest.ssrc");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ssrc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StopVideoBySsrcRequest)
  return target;
}

size_t StopVideoBySsrcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StopVideoBySsrcRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ssrc = 1;
  if (this->ssrc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ssrc());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopVideoBySsrcRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StopVideoBySsrcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopVideoBySsrcRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopVideoBySsrcRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StopVideoBySsrcRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StopVideoBySsrcRequest)
    MergeFrom(*source);
  }
}

void StopVideoBySsrcRequest::MergeFrom(const StopVideoBySsrcRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StopVideoBySsrcRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ssrc().size() > 0) {
    _internal_set_ssrc(from._internal_ssrc());
  }
}

void StopVideoBySsrcRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StopVideoBySsrcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopVideoBySsrcRequest::CopyFrom(const StopVideoBySsrcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StopVideoBySsrcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopVideoBySsrcRequest::IsInitialized() const {
  return true;
}

void StopVideoBySsrcRequest::InternalSwap(StopVideoBySsrcRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ssrc_.Swap(&other->ssrc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopVideoBySsrcRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopVideoBySsrcReply::InitAsDefaultInstance() {
}
class StopVideoBySsrcReply::_Internal {
 public:
};

StopVideoBySsrcReply::StopVideoBySsrcReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StopVideoBySsrcReply)
}
StopVideoBySsrcReply::StopVideoBySsrcReply(const StopVideoBySsrcReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.StopVideoBySsrcReply)
}

void StopVideoBySsrcReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopVideoBySsrcReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

StopVideoBySsrcReply::~StopVideoBySsrcReply() {
  // @@protoc_insertion_point(destructor:GB28181.StopVideoBySsrcReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopVideoBySsrcReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopVideoBySsrcReply::ArenaDtor(void* object) {
  StopVideoBySsrcReply* _this = reinterpret_cast< StopVideoBySsrcReply* >(object);
  (void)_this;
}
void StopVideoBySsrcReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopVideoBySsrcReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopVideoBySsrcReply& StopVideoBySsrcReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopVideoBySsrcReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StopVideoBySsrcReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StopVideoBySsrcReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopVideoBySsrcReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopVideoBySsrcReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopVideoBySsrcReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StopVideoBySsrcReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopVideoBySsrcReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StopVideoBySsrcReply)
  return target;
}

size_t StopVideoBySsrcReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StopVideoBySsrcReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopVideoBySsrcReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StopVideoBySsrcReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StopVideoBySsrcReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopVideoBySsrcReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StopVideoBySsrcReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StopVideoBySsrcReply)
    MergeFrom(*source);
  }
}

void StopVideoBySsrcReply::MergeFrom(const StopVideoBySsrcReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StopVideoBySsrcReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void StopVideoBySsrcReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StopVideoBySsrcReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopVideoBySsrcReply::CopyFrom(const StopVideoBySsrcReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StopVideoBySsrcReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopVideoBySsrcReply::IsInitialized() const {
  return true;
}

void StopVideoBySsrcReply::InternalSwap(StopVideoBySsrcReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopVideoBySsrcReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlayBackUrlRequest::InitAsDefaultInstance() {
}
class PlayBackUrlRequest::_Internal {
 public:
};

PlayBackUrlRequest::PlayBackUrlRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PlayBackUrlRequest)
}
PlayBackUrlRequest::PlayBackUrlRequest(const PlayBackUrlRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_starttime().empty()) {
    starttime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_starttime(),
      GetArena());
  }
  endtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_endtime().empty()) {
    endtime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_endtime(),
      GetArena());
  }
  istcp_ = from.istcp_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PlayBackUrlRequest)
}

void PlayBackUrlRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlayBackUrlRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  istcp_ = 0;
}

PlayBackUrlRequest::~PlayBackUrlRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PlayBackUrlRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayBackUrlRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlayBackUrlRequest::ArenaDtor(void* object) {
  PlayBackUrlRequest* _this = reinterpret_cast< PlayBackUrlRequest* >(object);
  (void)_this;
}
void PlayBackUrlRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayBackUrlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayBackUrlRequest& PlayBackUrlRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayBackUrlRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PlayBackUrlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PlayBackUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  starttime_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  endtime_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  istcp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayBackUrlRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayBackUrlRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayBackUrlRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string startTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_starttime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayBackUrlRequest.startTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string endTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_endtime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayBackUrlRequest.endTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 isTcp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          istcp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayBackUrlRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PlayBackUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayBackUrlRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayBackUrlRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // string startTime = 3;
  if (this->starttime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starttime().data(), static_cast<int>(this->_internal_starttime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayBackUrlRequest.startTime");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_starttime(), target);
  }

  // string endTime = 4;
  if (this->endtime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endtime().data(), static_cast<int>(this->_internal_endtime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayBackUrlRequest.endTime");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_endtime(), target);
  }

  // int32 isTcp = 5;
  if (this->istcp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_istcp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PlayBackUrlRequest)
  return target;
}

size_t PlayBackUrlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PlayBackUrlRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // string startTime = 3;
  if (this->starttime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starttime());
  }

  // string endTime = 4;
  if (this->endtime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endtime());
  }

  // int32 isTcp = 5;
  if (this->istcp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_istcp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayBackUrlRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PlayBackUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayBackUrlRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayBackUrlRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PlayBackUrlRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PlayBackUrlRequest)
    MergeFrom(*source);
  }
}

void PlayBackUrlRequest::MergeFrom(const PlayBackUrlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PlayBackUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.starttime().size() > 0) {
    _internal_set_starttime(from._internal_starttime());
  }
  if (from.endtime().size() > 0) {
    _internal_set_endtime(from._internal_endtime());
  }
  if (from.istcp() != 0) {
    _internal_set_istcp(from._internal_istcp());
  }
}

void PlayBackUrlRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PlayBackUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayBackUrlRequest::CopyFrom(const PlayBackUrlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PlayBackUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayBackUrlRequest::IsInitialized() const {
  return true;
}

void PlayBackUrlRequest::InternalSwap(PlayBackUrlRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  starttime_.Swap(&other->starttime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  endtime_.Swap(&other->endtime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(istcp_, other->istcp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayBackUrlRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlayBackUrlReply::InitAsDefaultInstance() {
}
class PlayBackUrlReply::_Internal {
 public:
};

PlayBackUrlReply::PlayBackUrlReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PlayBackUrlReply)
}
PlayBackUrlReply::PlayBackUrlReply(const PlayBackUrlReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rtspurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rtspurl().empty()) {
    rtspurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_rtspurl(),
      GetArena());
  }
  rtmpurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rtmpurl().empty()) {
    rtmpurl_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_rtmpurl(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PlayBackUrlReply)
}

void PlayBackUrlReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlayBackUrlReply_gb28181_2eproto.base);
  rtspurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rtmpurl_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PlayBackUrlReply::~PlayBackUrlReply() {
  // @@protoc_insertion_point(destructor:GB28181.PlayBackUrlReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayBackUrlReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  rtspurl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rtmpurl_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlayBackUrlReply::ArenaDtor(void* object) {
  PlayBackUrlReply* _this = reinterpret_cast< PlayBackUrlReply* >(object);
  (void)_this;
}
void PlayBackUrlReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayBackUrlReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayBackUrlReply& PlayBackUrlReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayBackUrlReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PlayBackUrlReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PlayBackUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rtspurl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rtmpurl_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayBackUrlReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rtspUrl = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rtspurl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayBackUrlReply.rtspUrl"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rtmpUrl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_rtmpurl();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayBackUrlReply.rtmpUrl"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayBackUrlReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string token = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayBackUrlReply.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayBackUrlReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PlayBackUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string rtspUrl = 2;
  if (this->rtspurl().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rtspurl().data(), static_cast<int>(this->_internal_rtspurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayBackUrlReply.rtspUrl");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rtspurl(), target);
  }

  // string rtmpUrl = 3;
  if (this->rtmpurl().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rtmpurl().data(), static_cast<int>(this->_internal_rtmpurl().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayBackUrlReply.rtmpUrl");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_rtmpurl(), target);
  }

  // string msg = 4;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayBackUrlReply.msg");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_msg(), target);
  }

  // string token = 5;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayBackUrlReply.token");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PlayBackUrlReply)
  return target;
}

size_t PlayBackUrlReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PlayBackUrlReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rtspUrl = 2;
  if (this->rtspurl().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rtspurl());
  }

  // string rtmpUrl = 3;
  if (this->rtmpurl().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rtmpurl());
  }

  // string msg = 4;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // string token = 5;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayBackUrlReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PlayBackUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayBackUrlReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayBackUrlReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PlayBackUrlReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PlayBackUrlReply)
    MergeFrom(*source);
  }
}

void PlayBackUrlReply::MergeFrom(const PlayBackUrlReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PlayBackUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rtspurl().size() > 0) {
    _internal_set_rtspurl(from._internal_rtspurl());
  }
  if (from.rtmpurl().size() > 0) {
    _internal_set_rtmpurl(from._internal_rtmpurl());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PlayBackUrlReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PlayBackUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayBackUrlReply::CopyFrom(const PlayBackUrlReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PlayBackUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayBackUrlReply::IsInitialized() const {
  return true;
}

void PlayBackUrlReply::InternalSwap(PlayBackUrlReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rtspurl_.Swap(&other->rtspurl_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rtmpurl_.Swap(&other->rtmpurl_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayBackUrlReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PresetGoRequest::InitAsDefaultInstance() {
}
class PresetGoRequest::_Internal {
 public:
};

PresetGoRequest::PresetGoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PresetGoRequest)
}
PresetGoRequest::PresetGoRequest(const PresetGoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  presetid_ = from.presetid_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PresetGoRequest)
}

void PresetGoRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PresetGoRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  presetid_ = 0;
}

PresetGoRequest::~PresetGoRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PresetGoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PresetGoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PresetGoRequest::ArenaDtor(void* object) {
  PresetGoRequest* _this = reinterpret_cast< PresetGoRequest* >(object);
  (void)_this;
}
void PresetGoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PresetGoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PresetGoRequest& PresetGoRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PresetGoRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PresetGoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PresetGoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  presetid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PresetGoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PresetGoRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PresetGoRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 presetId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          presetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PresetGoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PresetGoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PresetGoRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PresetGoRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 presetId = 3;
  if (this->presetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_presetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PresetGoRequest)
  return target;
}

size_t PresetGoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PresetGoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 presetId = 3;
  if (this->presetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_presetid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PresetGoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PresetGoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PresetGoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PresetGoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PresetGoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PresetGoRequest)
    MergeFrom(*source);
  }
}

void PresetGoRequest::MergeFrom(const PresetGoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PresetGoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.presetid() != 0) {
    _internal_set_presetid(from._internal_presetid());
  }
}

void PresetGoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PresetGoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresetGoRequest::CopyFrom(const PresetGoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PresetGoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresetGoRequest::IsInitialized() const {
  return true;
}

void PresetGoRequest::InternalSwap(PresetGoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(presetid_, other->presetid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PresetGoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PresetSetRequest::InitAsDefaultInstance() {
}
class PresetSetRequest::_Internal {
 public:
};

PresetSetRequest::PresetSetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PresetSetRequest)
}
PresetSetRequest::PresetSetRequest(const PresetSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  presetid_ = from.presetid_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PresetSetRequest)
}

void PresetSetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PresetSetRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  presetid_ = 0;
}

PresetSetRequest::~PresetSetRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PresetSetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PresetSetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PresetSetRequest::ArenaDtor(void* object) {
  PresetSetRequest* _this = reinterpret_cast< PresetSetRequest* >(object);
  (void)_this;
}
void PresetSetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PresetSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PresetSetRequest& PresetSetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PresetSetRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PresetSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PresetSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  presetid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PresetSetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PresetSetRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PresetSetRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 presetId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          presetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PresetSetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PresetSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PresetSetRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PresetSetRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 presetId = 3;
  if (this->presetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_presetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PresetSetRequest)
  return target;
}

size_t PresetSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PresetSetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 presetId = 3;
  if (this->presetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_presetid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PresetSetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PresetSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PresetSetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PresetSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PresetSetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PresetSetRequest)
    MergeFrom(*source);
  }
}

void PresetSetRequest::MergeFrom(const PresetSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PresetSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.presetid() != 0) {
    _internal_set_presetid(from._internal_presetid());
  }
}

void PresetSetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PresetSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresetSetRequest::CopyFrom(const PresetSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PresetSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresetSetRequest::IsInitialized() const {
  return true;
}

void PresetSetRequest::InternalSwap(PresetSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(presetid_, other->presetid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PresetSetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PresetDelRequest::InitAsDefaultInstance() {
}
class PresetDelRequest::_Internal {
 public:
};

PresetDelRequest::PresetDelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PresetDelRequest)
}
PresetDelRequest::PresetDelRequest(const PresetDelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  presetid_ = from.presetid_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PresetDelRequest)
}

void PresetDelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PresetDelRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  presetid_ = 0;
}

PresetDelRequest::~PresetDelRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PresetDelRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PresetDelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PresetDelRequest::ArenaDtor(void* object) {
  PresetDelRequest* _this = reinterpret_cast< PresetDelRequest* >(object);
  (void)_this;
}
void PresetDelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PresetDelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PresetDelRequest& PresetDelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PresetDelRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PresetDelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PresetDelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  presetid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PresetDelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PresetDelRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PresetDelRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 presetId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          presetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PresetDelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PresetDelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PresetDelRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PresetDelRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // int32 presetId = 3;
  if (this->presetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_presetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PresetDelRequest)
  return target;
}

size_t PresetDelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PresetDelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // int32 presetId = 3;
  if (this->presetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_presetid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PresetDelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PresetDelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PresetDelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PresetDelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PresetDelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PresetDelRequest)
    MergeFrom(*source);
  }
}

void PresetDelRequest::MergeFrom(const PresetDelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PresetDelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.presetid() != 0) {
    _internal_set_presetid(from._internal_presetid());
  }
}

void PresetDelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PresetDelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresetDelRequest::CopyFrom(const PresetDelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PresetDelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresetDelRequest::IsInitialized() const {
  return true;
}

void PresetDelRequest::InternalSwap(PresetDelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(presetid_, other->presetid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PresetDelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PresetQueryRequest::InitAsDefaultInstance() {
}
class PresetQueryRequest::_Internal {
 public:
};

PresetQueryRequest::PresetQueryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PresetQueryRequest)
}
PresetQueryRequest::PresetQueryRequest(const PresetQueryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.PresetQueryRequest)
}

void PresetQueryRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PresetQueryRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PresetQueryRequest::~PresetQueryRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PresetQueryRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PresetQueryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PresetQueryRequest::ArenaDtor(void* object) {
  PresetQueryRequest* _this = reinterpret_cast< PresetQueryRequest* >(object);
  (void)_this;
}
void PresetQueryRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PresetQueryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PresetQueryRequest& PresetQueryRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PresetQueryRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PresetQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PresetQueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PresetQueryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PresetQueryRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PresetQueryRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PresetQueryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PresetQueryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PresetQueryRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PresetQueryRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PresetQueryRequest)
  return target;
}

size_t PresetQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PresetQueryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PresetQueryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PresetQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PresetQueryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PresetQueryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PresetQueryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PresetQueryRequest)
    MergeFrom(*source);
  }
}

void PresetQueryRequest::MergeFrom(const PresetQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PresetQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
}

void PresetQueryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PresetQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresetQueryRequest::CopyFrom(const PresetQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PresetQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresetQueryRequest::IsInitialized() const {
  return true;
}

void PresetQueryRequest::InternalSwap(PresetQueryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PresetQueryRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PresetQueryReply::InitAsDefaultInstance() {
}
class PresetQueryReply::_Internal {
 public:
};

PresetQueryReply::PresetQueryReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PresetQueryReply)
}
PresetQueryReply::PresetQueryReply(const PresetQueryReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  ::memcpy(&sn_, &from.sn_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&sn_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:GB28181.PresetQueryReply)
}

void PresetQueryReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PresetQueryReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&sn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&sn_)) + sizeof(code_));
}

PresetQueryReply::~PresetQueryReply() {
  // @@protoc_insertion_point(destructor:GB28181.PresetQueryReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PresetQueryReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PresetQueryReply::ArenaDtor(void* object) {
  PresetQueryReply* _this = reinterpret_cast< PresetQueryReply* >(object);
  (void)_this;
}
void PresetQueryReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PresetQueryReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PresetQueryReply& PresetQueryReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PresetQueryReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PresetQueryReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PresetQueryReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&sn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&sn_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PresetQueryReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 sn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PresetQueryReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PresetQueryReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PresetQueryReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sn = 1;
  if (this->sn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sn(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PresetQueryReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PresetQueryReply)
  return target;
}

size_t PresetQueryReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PresetQueryReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 sn = 1;
  if (this->sn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sn());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PresetQueryReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PresetQueryReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PresetQueryReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PresetQueryReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PresetQueryReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PresetQueryReply)
    MergeFrom(*source);
  }
}

void PresetQueryReply::MergeFrom(const PresetQueryReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PresetQueryReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.sn() != 0) {
    _internal_set_sn(from._internal_sn());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PresetQueryReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PresetQueryReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresetQueryReply::CopyFrom(const PresetQueryReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PresetQueryReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresetQueryReply::IsInitialized() const {
  return true;
}

void PresetQueryReply::InternalSwap(PresetQueryReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PresetQueryReply, code_)
      + sizeof(PresetQueryReply::code_)
      - PROTOBUF_FIELD_OFFSET(PresetQueryReply, sn_)>(
          reinterpret_cast<char*>(&sn_),
          reinterpret_cast<char*>(&other->sn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PresetQueryReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPresetRequest::InitAsDefaultInstance() {
}
class GetPresetRequest::_Internal {
 public:
};

GetPresetRequest::GetPresetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetPresetRequest)
}
GetPresetRequest::GetPresetRequest(const GetPresetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sn_ = from.sn_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetPresetRequest)
}

void GetPresetRequest::SharedCtor() {
  sn_ = 0;
}

GetPresetRequest::~GetPresetRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GetPresetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPresetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetPresetRequest::ArenaDtor(void* object) {
  GetPresetRequest* _this = reinterpret_cast< GetPresetRequest* >(object);
  (void)_this;
}
void GetPresetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPresetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPresetRequest& GetPresetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPresetRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetPresetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetPresetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sn_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPresetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 sn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPresetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetPresetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sn = 1;
  if (this->sn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetPresetRequest)
  return target;
}

size_t GetPresetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetPresetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sn = 1;
  if (this->sn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPresetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetPresetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPresetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPresetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetPresetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetPresetRequest)
    MergeFrom(*source);
  }
}

void GetPresetRequest::MergeFrom(const GetPresetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetPresetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sn() != 0) {
    _internal_set_sn(from._internal_sn());
  }
}

void GetPresetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetPresetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPresetRequest::CopyFrom(const GetPresetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetPresetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPresetRequest::IsInitialized() const {
  return true;
}

void GetPresetRequest::InternalSwap(GetPresetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(sn_, other->sn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPresetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PresetInfo::InitAsDefaultInstance() {
}
class PresetInfo::_Internal {
 public:
};

PresetInfo::PresetInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PresetInfo)
}
PresetInfo::PresetInfo(const PresetInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  presetname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_presetname().empty()) {
    presetname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_presetname(),
      GetArena());
  }
  presetid_ = from.presetid_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PresetInfo)
}

void PresetInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PresetInfo_gb28181_2eproto.base);
  presetname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  presetid_ = 0;
}

PresetInfo::~PresetInfo() {
  // @@protoc_insertion_point(destructor:GB28181.PresetInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PresetInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  presetname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PresetInfo::ArenaDtor(void* object) {
  PresetInfo* _this = reinterpret_cast< PresetInfo* >(object);
  (void)_this;
}
void PresetInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PresetInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PresetInfo& PresetInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PresetInfo_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PresetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PresetInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  presetname_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  presetid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PresetInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 presetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          presetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string presetName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_presetname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PresetInfo.presetName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PresetInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PresetInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 presetId = 1;
  if (this->presetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_presetid(), target);
  }

  // string presetName = 2;
  if (this->presetname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_presetname().data(), static_cast<int>(this->_internal_presetname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PresetInfo.presetName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_presetname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PresetInfo)
  return target;
}

size_t PresetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PresetInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string presetName = 2;
  if (this->presetname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_presetname());
  }

  // int32 presetId = 1;
  if (this->presetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_presetid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PresetInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PresetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PresetInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PresetInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PresetInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PresetInfo)
    MergeFrom(*source);
  }
}

void PresetInfo::MergeFrom(const PresetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PresetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.presetname().size() > 0) {
    _internal_set_presetname(from._internal_presetname());
  }
  if (from.presetid() != 0) {
    _internal_set_presetid(from._internal_presetid());
  }
}

void PresetInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PresetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresetInfo::CopyFrom(const PresetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PresetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresetInfo::IsInitialized() const {
  return true;
}

void PresetInfo::InternalSwap(PresetInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  presetname_.Swap(&other->presetname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(presetid_, other->presetid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PresetInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetPresetReply::InitAsDefaultInstance() {
}
class GetPresetReply::_Internal {
 public:
};

GetPresetReply::GetPresetReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  presetlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetPresetReply)
}
GetPresetReply::GetPresetReply(const GetPresetReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      presetlist_(from.presetlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetPresetReply)
}

void GetPresetReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetPresetReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetPresetReply::~GetPresetReply() {
  // @@protoc_insertion_point(destructor:GB28181.GetPresetReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetPresetReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetPresetReply::ArenaDtor(void* object) {
  GetPresetReply* _this = reinterpret_cast< GetPresetReply* >(object);
  (void)_this;
}
void GetPresetReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetPresetReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetPresetReply& GetPresetReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetPresetReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetPresetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetPresetReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  presetlist_.Clear();
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPresetReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .GB28181.PresetInfo presetList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_presetlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetPresetReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetPresetReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetPresetReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GB28181.PresetInfo presetList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_presetlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_presetlist(i), target, stream);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetPresetReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetPresetReply)
  return target;
}

size_t GetPresetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetPresetReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GB28181.PresetInfo presetList = 1;
  total_size += 1UL * this->_internal_presetlist_size();
  for (const auto& msg : this->presetlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetPresetReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetPresetReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPresetReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetPresetReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetPresetReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetPresetReply)
    MergeFrom(*source);
  }
}

void GetPresetReply::MergeFrom(const GetPresetReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetPresetReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  presetlist_.MergeFrom(from.presetlist_);
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetPresetReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetPresetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPresetReply::CopyFrom(const GetPresetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetPresetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPresetReply::IsInitialized() const {
  return true;
}

void GetPresetReply::InternalSwap(GetPresetReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  presetlist_.InternalSwap(&other->presetlist_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPresetReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QueryRecordRequest::InitAsDefaultInstance() {
}
class QueryRecordRequest::_Internal {
 public:
};

QueryRecordRequest::QueryRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.QueryRecordRequest)
}
QueryRecordRequest::QueryRecordRequest(const QueryRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_starttime().empty()) {
    starttime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_starttime(),
      GetArena());
  }
  endtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_endtime().empty()) {
    endtime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_endtime(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.QueryRecordRequest)
}

void QueryRecordRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryRecordRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

QueryRecordRequest::~QueryRecordRequest() {
  // @@protoc_insertion_point(destructor:GB28181.QueryRecordRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QueryRecordRequest::ArenaDtor(void* object) {
  QueryRecordRequest* _this = reinterpret_cast< QueryRecordRequest* >(object);
  (void)_this;
}
void QueryRecordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryRecordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryRecordRequest& QueryRecordRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryRecordRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void QueryRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.QueryRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  starttime_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  endtime_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryRecordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.QueryRecordRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.QueryRecordRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string startTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_starttime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.QueryRecordRequest.startTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string endTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_endtime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.QueryRecordRequest.endTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryRecordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.QueryRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.QueryRecordRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.QueryRecordRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // string startTime = 3;
  if (this->starttime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starttime().data(), static_cast<int>(this->_internal_starttime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.QueryRecordRequest.startTime");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_starttime(), target);
  }

  // string endTime = 4;
  if (this->endtime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endtime().data(), static_cast<int>(this->_internal_endtime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.QueryRecordRequest.endTime");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_endtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.QueryRecordRequest)
  return target;
}

size_t QueryRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.QueryRecordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // string startTime = 3;
  if (this->starttime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starttime());
  }

  // string endTime = 4;
  if (this->endtime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endtime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRecordRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.QueryRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRecordRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryRecordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.QueryRecordRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.QueryRecordRequest)
    MergeFrom(*source);
  }
}

void QueryRecordRequest::MergeFrom(const QueryRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.QueryRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.starttime().size() > 0) {
    _internal_set_starttime(from._internal_starttime());
  }
  if (from.endtime().size() > 0) {
    _internal_set_endtime(from._internal_endtime());
  }
}

void QueryRecordRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.QueryRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRecordRequest::CopyFrom(const QueryRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.QueryRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRecordRequest::IsInitialized() const {
  return true;
}

void QueryRecordRequest::InternalSwap(QueryRecordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  starttime_.Swap(&other->starttime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  endtime_.Swap(&other->endtime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryRecordRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QueryRecordReply::InitAsDefaultInstance() {
}
class QueryRecordReply::_Internal {
 public:
};

QueryRecordReply::QueryRecordReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.QueryRecordReply)
}
QueryRecordReply::QueryRecordReply(const QueryRecordReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  ::memcpy(&sn_, &from.sn_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&sn_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:GB28181.QueryRecordReply)
}

void QueryRecordReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryRecordReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&sn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&sn_)) + sizeof(code_));
}

QueryRecordReply::~QueryRecordReply() {
  // @@protoc_insertion_point(destructor:GB28181.QueryRecordReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryRecordReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void QueryRecordReply::ArenaDtor(void* object) {
  QueryRecordReply* _this = reinterpret_cast< QueryRecordReply* >(object);
  (void)_this;
}
void QueryRecordReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryRecordReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryRecordReply& QueryRecordReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryRecordReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void QueryRecordReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.QueryRecordReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&sn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&sn_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryRecordReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 sn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.QueryRecordReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryRecordReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.QueryRecordReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sn = 1;
  if (this->sn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sn(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.QueryRecordReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.QueryRecordReply)
  return target;
}

size_t QueryRecordReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.QueryRecordReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 sn = 1;
  if (this->sn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sn());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryRecordReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.QueryRecordReply)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRecordReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryRecordReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.QueryRecordReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.QueryRecordReply)
    MergeFrom(*source);
  }
}

void QueryRecordReply::MergeFrom(const QueryRecordReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.QueryRecordReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.sn() != 0) {
    _internal_set_sn(from._internal_sn());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void QueryRecordReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.QueryRecordReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRecordReply::CopyFrom(const QueryRecordReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.QueryRecordReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRecordReply::IsInitialized() const {
  return true;
}

void QueryRecordReply::InternalSwap(QueryRecordReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(QueryRecordReply, code_)
      + sizeof(QueryRecordReply::code_)
      - PROTOBUF_FIELD_OFFSET(QueryRecordReply, sn_)>(
          reinterpret_cast<char*>(&sn_),
          reinterpret_cast<char*>(&other->sn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryRecordReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRecordRequest::InitAsDefaultInstance() {
}
class GetRecordRequest::_Internal {
 public:
};

GetRecordRequest::GetRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetRecordRequest)
}
GetRecordRequest::GetRecordRequest(const GetRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sn_ = from.sn_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetRecordRequest)
}

void GetRecordRequest::SharedCtor() {
  sn_ = 0;
}

GetRecordRequest::~GetRecordRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GetRecordRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetRecordRequest::ArenaDtor(void* object) {
  GetRecordRequest* _this = reinterpret_cast< GetRecordRequest* >(object);
  (void)_this;
}
void GetRecordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRecordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRecordRequest& GetRecordRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRecordRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sn_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRecordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 sn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRecordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sn = 1;
  if (this->sn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetRecordRequest)
  return target;
}

size_t GetRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetRecordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sn = 1;
  if (this->sn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRecordRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRecordRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRecordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetRecordRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetRecordRequest)
    MergeFrom(*source);
  }
}

void GetRecordRequest::MergeFrom(const GetRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sn() != 0) {
    _internal_set_sn(from._internal_sn());
  }
}

void GetRecordRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRecordRequest::CopyFrom(const GetRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecordRequest::IsInitialized() const {
  return true;
}

void GetRecordRequest::InternalSwap(GetRecordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(sn_, other->sn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRecordRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecordInfo::InitAsDefaultInstance() {
}
class RecordInfo::_Internal {
 public:
};

RecordInfo::RecordInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.RecordInfo)
}
RecordInfo::RecordInfo(const RecordInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_starttime().empty()) {
    starttime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_starttime(),
      GetArena());
  }
  endtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_endtime().empty()) {
    endtime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_endtime(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.RecordInfo)
}

void RecordInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecordInfo_gb28181_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RecordInfo::~RecordInfo() {
  // @@protoc_insertion_point(destructor:GB28181.RecordInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecordInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RecordInfo::ArenaDtor(void* object) {
  RecordInfo* _this = reinterpret_cast< RecordInfo* >(object);
  (void)_this;
}
void RecordInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecordInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecordInfo& RecordInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecordInfo_gb28181_2eproto.base);
  return *internal_default_instance();
}


void RecordInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.RecordInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  starttime_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  endtime_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecordInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RecordInfo.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string startTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_starttime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RecordInfo.startTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string endTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_endtime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RecordInfo.endTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecordInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.RecordInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RecordInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string startTime = 2;
  if (this->starttime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starttime().data(), static_cast<int>(this->_internal_starttime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RecordInfo.startTime");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_starttime(), target);
  }

  // string endTime = 3;
  if (this->endtime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endtime().data(), static_cast<int>(this->_internal_endtime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RecordInfo.endTime");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_endtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.RecordInfo)
  return target;
}

size_t RecordInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.RecordInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string startTime = 2;
  if (this->starttime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starttime());
  }

  // string endTime = 3;
  if (this->endtime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endtime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecordInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.RecordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecordInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.RecordInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.RecordInfo)
    MergeFrom(*source);
  }
}

void RecordInfo::MergeFrom(const RecordInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.RecordInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.starttime().size() > 0) {
    _internal_set_starttime(from._internal_starttime());
  }
  if (from.endtime().size() > 0) {
    _internal_set_endtime(from._internal_endtime());
  }
}

void RecordInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.RecordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordInfo::CopyFrom(const RecordInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.RecordInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordInfo::IsInitialized() const {
  return true;
}

void RecordInfo::InternalSwap(RecordInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  starttime_.Swap(&other->starttime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  endtime_.Swap(&other->endtime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RecordInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRecordReply::InitAsDefaultInstance() {
}
class GetRecordReply::_Internal {
 public:
};

GetRecordReply::GetRecordReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  recordlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetRecordReply)
}
GetRecordReply::GetRecordReply(const GetRecordReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      recordlist_(from.recordlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetRecordReply)
}

void GetRecordReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRecordReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetRecordReply::~GetRecordReply() {
  // @@protoc_insertion_point(destructor:GB28181.GetRecordReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRecordReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRecordReply::ArenaDtor(void* object) {
  GetRecordReply* _this = reinterpret_cast< GetRecordReply* >(object);
  (void)_this;
}
void GetRecordReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRecordReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRecordReply& GetRecordReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRecordReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetRecordReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetRecordReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recordlist_.Clear();
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRecordReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .GB28181.RecordInfo recordList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_recordlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetRecordReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRecordReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetRecordReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GB28181.RecordInfo recordList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_recordlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_recordlist(i), target, stream);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetRecordReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetRecordReply)
  return target;
}

size_t GetRecordReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetRecordReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GB28181.RecordInfo recordList = 1;
  total_size += 1UL * this->_internal_recordlist_size();
  for (const auto& msg : this->recordlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRecordReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetRecordReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRecordReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRecordReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetRecordReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetRecordReply)
    MergeFrom(*source);
  }
}

void GetRecordReply::MergeFrom(const GetRecordReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetRecordReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recordlist_.MergeFrom(from.recordlist_);
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetRecordReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetRecordReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRecordReply::CopyFrom(const GetRecordReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetRecordReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecordReply::IsInitialized() const {
  return true;
}

void GetRecordReply::InternalSwap(GetRecordReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recordlist_.InternalSwap(&other->recordlist_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRecordReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlayFastRequest::InitAsDefaultInstance() {
}
class PlayFastRequest::_Internal {
 public:
};

PlayFastRequest::PlayFastRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PlayFastRequest)
}
PlayFastRequest::PlayFastRequest(const PlayFastRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.PlayFastRequest)
}

void PlayFastRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlayFastRequest_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PlayFastRequest::~PlayFastRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PlayFastRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayFastRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlayFastRequest::ArenaDtor(void* object) {
  PlayFastRequest* _this = reinterpret_cast< PlayFastRequest* >(object);
  (void)_this;
}
void PlayFastRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayFastRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayFastRequest& PlayFastRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayFastRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PlayFastRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PlayFastRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayFastRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayFastRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayFastRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PlayFastRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayFastRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PlayFastRequest)
  return target;
}

size_t PlayFastRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PlayFastRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayFastRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PlayFastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayFastRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayFastRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PlayFastRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PlayFastRequest)
    MergeFrom(*source);
  }
}

void PlayFastRequest::MergeFrom(const PlayFastRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PlayFastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void PlayFastRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PlayFastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayFastRequest::CopyFrom(const PlayFastRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PlayFastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayFastRequest::IsInitialized() const {
  return true;
}

void PlayFastRequest::InternalSwap(PlayFastRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayFastRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlayFastReply::InitAsDefaultInstance() {
}
class PlayFastReply::_Internal {
 public:
};

PlayFastReply::PlayFastReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PlayFastReply)
}
PlayFastReply::PlayFastReply(const PlayFastReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  ::memcpy(&scale_, &from.scale_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&scale_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:GB28181.PlayFastReply)
}

void PlayFastReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlayFastReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(code_));
}

PlayFastReply::~PlayFastReply() {
  // @@protoc_insertion_point(destructor:GB28181.PlayFastReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayFastReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlayFastReply::ArenaDtor(void* object) {
  PlayFastReply* _this = reinterpret_cast< PlayFastReply* >(object);
  (void)_this;
}
void PlayFastReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayFastReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayFastReply& PlayFastReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayFastReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PlayFastReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PlayFastReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayFastReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float scale = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayFastReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayFastReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PlayFastReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float scale = 1;
  if (!(this->scale() <= 0 && this->scale() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_scale(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayFastReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PlayFastReply)
  return target;
}

size_t PlayFastReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PlayFastReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // float scale = 1;
  if (!(this->scale() <= 0 && this->scale() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayFastReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PlayFastReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayFastReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayFastReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PlayFastReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PlayFastReply)
    MergeFrom(*source);
  }
}

void PlayFastReply::MergeFrom(const PlayFastReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PlayFastReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (!(from.scale() <= 0 && from.scale() >= 0)) {
    _internal_set_scale(from._internal_scale());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PlayFastReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PlayFastReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayFastReply::CopyFrom(const PlayFastReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PlayFastReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayFastReply::IsInitialized() const {
  return true;
}

void PlayFastReply::InternalSwap(PlayFastReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayFastReply, code_)
      + sizeof(PlayFastReply::code_)
      - PROTOBUF_FIELD_OFFSET(PlayFastReply, scale_)>(
          reinterpret_cast<char*>(&scale_),
          reinterpret_cast<char*>(&other->scale_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayFastReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlaySlowRequest::InitAsDefaultInstance() {
}
class PlaySlowRequest::_Internal {
 public:
};

PlaySlowRequest::PlaySlowRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PlaySlowRequest)
}
PlaySlowRequest::PlaySlowRequest(const PlaySlowRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.PlaySlowRequest)
}

void PlaySlowRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlaySlowRequest_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PlaySlowRequest::~PlaySlowRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PlaySlowRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlaySlowRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlaySlowRequest::ArenaDtor(void* object) {
  PlaySlowRequest* _this = reinterpret_cast< PlaySlowRequest* >(object);
  (void)_this;
}
void PlaySlowRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlaySlowRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlaySlowRequest& PlaySlowRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlaySlowRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PlaySlowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PlaySlowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlaySlowRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlaySlowRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlaySlowRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PlaySlowRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlaySlowRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PlaySlowRequest)
  return target;
}

size_t PlaySlowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PlaySlowRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlaySlowRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PlaySlowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaySlowRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlaySlowRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PlaySlowRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PlaySlowRequest)
    MergeFrom(*source);
  }
}

void PlaySlowRequest::MergeFrom(const PlaySlowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PlaySlowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void PlaySlowRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PlaySlowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaySlowRequest::CopyFrom(const PlaySlowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PlaySlowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaySlowRequest::IsInitialized() const {
  return true;
}

void PlaySlowRequest::InternalSwap(PlaySlowRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PlaySlowRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlaySlowReply::InitAsDefaultInstance() {
}
class PlaySlowReply::_Internal {
 public:
};

PlaySlowReply::PlaySlowReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PlaySlowReply)
}
PlaySlowReply::PlaySlowReply(const PlaySlowReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  ::memcpy(&scale_, &from.scale_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&scale_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:GB28181.PlaySlowReply)
}

void PlaySlowReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlaySlowReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(code_));
}

PlaySlowReply::~PlaySlowReply() {
  // @@protoc_insertion_point(destructor:GB28181.PlaySlowReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlaySlowReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlaySlowReply::ArenaDtor(void* object) {
  PlaySlowReply* _this = reinterpret_cast< PlaySlowReply* >(object);
  (void)_this;
}
void PlaySlowReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlaySlowReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlaySlowReply& PlaySlowReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlaySlowReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PlaySlowReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PlaySlowReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlaySlowReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float scale = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlaySlowReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlaySlowReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PlaySlowReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float scale = 1;
  if (!(this->scale() <= 0 && this->scale() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_scale(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlaySlowReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PlaySlowReply)
  return target;
}

size_t PlaySlowReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PlaySlowReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // float scale = 1;
  if (!(this->scale() <= 0 && this->scale() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlaySlowReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PlaySlowReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaySlowReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlaySlowReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PlaySlowReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PlaySlowReply)
    MergeFrom(*source);
  }
}

void PlaySlowReply::MergeFrom(const PlaySlowReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PlaySlowReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (!(from.scale() <= 0 && from.scale() >= 0)) {
    _internal_set_scale(from._internal_scale());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PlaySlowReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PlaySlowReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaySlowReply::CopyFrom(const PlaySlowReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PlaySlowReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaySlowReply::IsInitialized() const {
  return true;
}

void PlaySlowReply::InternalSwap(PlaySlowReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlaySlowReply, code_)
      + sizeof(PlaySlowReply::code_)
      - PROTOBUF_FIELD_OFFSET(PlaySlowReply, scale_)>(
          reinterpret_cast<char*>(&scale_),
          reinterpret_cast<char*>(&other->scale_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PlaySlowReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PauseRequest::InitAsDefaultInstance() {
}
class PauseRequest::_Internal {
 public:
};

PauseRequest::PauseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PauseRequest)
}
PauseRequest::PauseRequest(const PauseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.PauseRequest)
}

void PauseRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PauseRequest_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PauseRequest::~PauseRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PauseRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PauseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PauseRequest::ArenaDtor(void* object) {
  PauseRequest* _this = reinterpret_cast< PauseRequest* >(object);
  (void)_this;
}
void PauseRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PauseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PauseRequest& PauseRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PauseRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PauseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PauseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PauseRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PauseRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PauseRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PauseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PauseRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PauseRequest)
  return target;
}

size_t PauseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PauseRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PauseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PauseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PauseRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PauseRequest)
    MergeFrom(*source);
  }
}

void PauseRequest::MergeFrom(const PauseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PauseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void PauseRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PauseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseRequest::CopyFrom(const PauseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PauseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseRequest::IsInitialized() const {
  return true;
}

void PauseRequest::InternalSwap(PauseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PauseRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PauseReply::InitAsDefaultInstance() {
}
class PauseReply::_Internal {
 public:
};

PauseReply::PauseReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PauseReply)
}
PauseReply::PauseReply(const PauseReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PauseReply)
}

void PauseReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PauseReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PauseReply::~PauseReply() {
  // @@protoc_insertion_point(destructor:GB28181.PauseReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PauseReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PauseReply::ArenaDtor(void* object) {
  PauseReply* _this = reinterpret_cast< PauseReply* >(object);
  (void)_this;
}
void PauseReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PauseReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PauseReply& PauseReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PauseReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PauseReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PauseReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PauseReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PauseReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PauseReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PauseReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PauseReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PauseReply)
  return target;
}

size_t PauseReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PauseReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PauseReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PauseReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PauseReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PauseReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PauseReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PauseReply)
    MergeFrom(*source);
  }
}

void PauseReply::MergeFrom(const PauseReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PauseReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PauseReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PauseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PauseReply::CopyFrom(const PauseReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PauseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PauseReply::IsInitialized() const {
  return true;
}

void PauseReply::InternalSwap(PauseReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PauseReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlayRequest::InitAsDefaultInstance() {
}
class PlayRequest::_Internal {
 public:
};

PlayRequest::PlayRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PlayRequest)
}
PlayRequest::PlayRequest(const PlayRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.PlayRequest)
}

void PlayRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlayRequest_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PlayRequest::~PlayRequest() {
  // @@protoc_insertion_point(destructor:GB28181.PlayRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlayRequest::ArenaDtor(void* object) {
  PlayRequest* _this = reinterpret_cast< PlayRequest* >(object);
  (void)_this;
}
void PlayRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayRequest& PlayRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PlayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PlayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PlayRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PlayRequest)
  return target;
}

size_t PlayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PlayRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PlayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PlayRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PlayRequest)
    MergeFrom(*source);
  }
}

void PlayRequest::MergeFrom(const PlayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PlayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void PlayRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PlayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayRequest::CopyFrom(const PlayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PlayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayRequest::IsInitialized() const {
  return true;
}

void PlayRequest::InternalSwap(PlayRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PlayReply::InitAsDefaultInstance() {
}
class PlayReply::_Internal {
 public:
};

PlayReply::PlayReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.PlayReply)
}
PlayReply::PlayReply(const PlayReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.PlayReply)
}

void PlayReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlayReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

PlayReply::~PlayReply() {
  // @@protoc_insertion_point(destructor:GB28181.PlayReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PlayReply::ArenaDtor(void* object) {
  PlayReply* _this = reinterpret_cast< PlayReply* >(object);
  (void)_this;
}
void PlayReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayReply& PlayReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void PlayReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.PlayReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.PlayReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.PlayReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.PlayReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.PlayReply)
  return target;
}

size_t PlayReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.PlayReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.PlayReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.PlayReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.PlayReply)
    MergeFrom(*source);
  }
}

void PlayReply::MergeFrom(const PlayReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.PlayReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void PlayReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.PlayReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayReply::CopyFrom(const PlayReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.PlayReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayReply::IsInitialized() const {
  return true;
}

void PlayReply::InternalSwap(PlayReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SeekRequest::InitAsDefaultInstance() {
}
class SeekRequest::_Internal {
 public:
};

SeekRequest::SeekRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.SeekRequest)
}
SeekRequest::SeekRequest(const SeekRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:GB28181.SeekRequest)
}

void SeekRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SeekRequest_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
}

SeekRequest::~SeekRequest() {
  // @@protoc_insertion_point(destructor:GB28181.SeekRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SeekRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SeekRequest::ArenaDtor(void* object) {
  SeekRequest* _this = reinterpret_cast< SeekRequest* >(object);
  (void)_this;
}
void SeekRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SeekRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SeekRequest& SeekRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SeekRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void SeekRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.SeekRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  time_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SeekRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.SeekRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SeekRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.SeekRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.SeekRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // int32 time = 2;
  if (this->time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.SeekRequest)
  return target;
}

size_t SeekRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.SeekRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int32 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SeekRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.SeekRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SeekRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SeekRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.SeekRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.SeekRequest)
    MergeFrom(*source);
  }
}

void SeekRequest::MergeFrom(const SeekRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.SeekRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.time() != 0) {
    _internal_set_time(from._internal_time());
  }
}

void SeekRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.SeekRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeekRequest::CopyFrom(const SeekRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.SeekRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeekRequest::IsInitialized() const {
  return true;
}

void SeekRequest::InternalSwap(SeekRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(time_, other->time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SeekRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SeekReply::InitAsDefaultInstance() {
}
class SeekReply::_Internal {
 public:
};

SeekReply::SeekReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.SeekReply)
}
SeekReply::SeekReply(const SeekReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.SeekReply)
}

void SeekReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SeekReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

SeekReply::~SeekReply() {
  // @@protoc_insertion_point(destructor:GB28181.SeekReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SeekReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SeekReply::ArenaDtor(void* object) {
  SeekReply* _this = reinterpret_cast< SeekReply* >(object);
  (void)_this;
}
void SeekReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SeekReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SeekReply& SeekReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SeekReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void SeekReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.SeekReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SeekReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.SeekReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SeekReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.SeekReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.SeekReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.SeekReply)
  return target;
}

size_t SeekReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.SeekReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SeekReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.SeekReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SeekReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SeekReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.SeekReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.SeekReply)
    MergeFrom(*source);
  }
}

void SeekReply::MergeFrom(const SeekReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.SeekReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void SeekReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.SeekReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeekReply::CopyFrom(const SeekReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.SeekReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeekReply::IsInitialized() const {
  return true;
}

void SeekReply::InternalSwap(SeekReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SeekReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GoForwardRequest::InitAsDefaultInstance() {
}
class GoForwardRequest::_Internal {
 public:
};

GoForwardRequest::GoForwardRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GoForwardRequest)
}
GoForwardRequest::GoForwardRequest(const GoForwardRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  nowtime_ = from.nowtime_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GoForwardRequest)
}

void GoForwardRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GoForwardRequest_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nowtime_ = 0;
}

GoForwardRequest::~GoForwardRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GoForwardRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GoForwardRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GoForwardRequest::ArenaDtor(void* object) {
  GoForwardRequest* _this = reinterpret_cast< GoForwardRequest* >(object);
  (void)_this;
}
void GoForwardRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoForwardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GoForwardRequest& GoForwardRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GoForwardRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GoForwardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GoForwardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nowtime_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoForwardRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GoForwardRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 nowTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          nowtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GoForwardRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GoForwardRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GoForwardRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // int32 nowTime = 2;
  if (this->nowtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_nowtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GoForwardRequest)
  return target;
}

size_t GoForwardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GoForwardRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int32 nowTime = 2;
  if (this->nowtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_nowtime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GoForwardRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GoForwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GoForwardRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GoForwardRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GoForwardRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GoForwardRequest)
    MergeFrom(*source);
  }
}

void GoForwardRequest::MergeFrom(const GoForwardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GoForwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.nowtime() != 0) {
    _internal_set_nowtime(from._internal_nowtime());
  }
}

void GoForwardRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GoForwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoForwardRequest::CopyFrom(const GoForwardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GoForwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoForwardRequest::IsInitialized() const {
  return true;
}

void GoForwardRequest::InternalSwap(GoForwardRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(nowtime_, other->nowtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GoForwardRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GoForwardReply::InitAsDefaultInstance() {
}
class GoForwardReply::_Internal {
 public:
};

GoForwardReply::GoForwardReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GoForwardReply)
}
GoForwardReply::GoForwardReply(const GoForwardReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GoForwardReply)
}

void GoForwardReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GoForwardReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GoForwardReply::~GoForwardReply() {
  // @@protoc_insertion_point(destructor:GB28181.GoForwardReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GoForwardReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GoForwardReply::ArenaDtor(void* object) {
  GoForwardReply* _this = reinterpret_cast< GoForwardReply* >(object);
  (void)_this;
}
void GoForwardReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoForwardReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GoForwardReply& GoForwardReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GoForwardReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GoForwardReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GoForwardReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoForwardReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GoForwardReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GoForwardReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GoForwardReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GoForwardReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GoForwardReply)
  return target;
}

size_t GoForwardReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GoForwardReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GoForwardReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GoForwardReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GoForwardReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GoForwardReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GoForwardReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GoForwardReply)
    MergeFrom(*source);
  }
}

void GoForwardReply::MergeFrom(const GoForwardReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GoForwardReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GoForwardReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GoForwardReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoForwardReply::CopyFrom(const GoForwardReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GoForwardReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoForwardReply::IsInitialized() const {
  return true;
}

void GoForwardReply::InternalSwap(GoForwardReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GoForwardReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GoBackRequest::InitAsDefaultInstance() {
}
class GoBackRequest::_Internal {
 public:
};

GoBackRequest::GoBackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GoBackRequest)
}
GoBackRequest::GoBackRequest(const GoBackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  nowtime_ = from.nowtime_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GoBackRequest)
}

void GoBackRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GoBackRequest_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nowtime_ = 0;
}

GoBackRequest::~GoBackRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GoBackRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GoBackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GoBackRequest::ArenaDtor(void* object) {
  GoBackRequest* _this = reinterpret_cast< GoBackRequest* >(object);
  (void)_this;
}
void GoBackRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoBackRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GoBackRequest& GoBackRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GoBackRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GoBackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GoBackRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  nowtime_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoBackRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GoBackRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 nowTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          nowtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GoBackRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GoBackRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GoBackRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // int32 nowTime = 2;
  if (this->nowtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_nowtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GoBackRequest)
  return target;
}

size_t GoBackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GoBackRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // int32 nowTime = 2;
  if (this->nowtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_nowtime());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GoBackRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GoBackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GoBackRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GoBackRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GoBackRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GoBackRequest)
    MergeFrom(*source);
  }
}

void GoBackRequest::MergeFrom(const GoBackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GoBackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.nowtime() != 0) {
    _internal_set_nowtime(from._internal_nowtime());
  }
}

void GoBackRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GoBackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoBackRequest::CopyFrom(const GoBackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GoBackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoBackRequest::IsInitialized() const {
  return true;
}

void GoBackRequest::InternalSwap(GoBackRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(nowtime_, other->nowtime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GoBackRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GoBackReply::InitAsDefaultInstance() {
}
class GoBackReply::_Internal {
 public:
};

GoBackReply::GoBackReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GoBackReply)
}
GoBackReply::GoBackReply(const GoBackReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GoBackReply)
}

void GoBackReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GoBackReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GoBackReply::~GoBackReply() {
  // @@protoc_insertion_point(destructor:GB28181.GoBackReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GoBackReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GoBackReply::ArenaDtor(void* object) {
  GoBackReply* _this = reinterpret_cast< GoBackReply* >(object);
  (void)_this;
}
void GoBackReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GoBackReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GoBackReply& GoBackReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GoBackReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GoBackReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GoBackReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GoBackReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GoBackReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GoBackReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GoBackReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GoBackReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GoBackReply)
  return target;
}

size_t GoBackReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GoBackReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GoBackReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GoBackReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GoBackReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GoBackReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GoBackReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GoBackReply)
    MergeFrom(*source);
  }
}

void GoBackReply::MergeFrom(const GoBackReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GoBackReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GoBackReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GoBackReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GoBackReply::CopyFrom(const GoBackReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GoBackReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GoBackReply::IsInitialized() const {
  return true;
}

void GoBackReply::InternalSwap(GoBackReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GoBackReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopPlayRecordRequest::InitAsDefaultInstance() {
}
class StopPlayRecordRequest::_Internal {
 public:
};

StopPlayRecordRequest::StopPlayRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StopPlayRecordRequest)
}
StopPlayRecordRequest::StopPlayRecordRequest(const StopPlayRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.StopPlayRecordRequest)
}

void StopPlayRecordRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopPlayRecordRequest_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopPlayRecordRequest::~StopPlayRecordRequest() {
  // @@protoc_insertion_point(destructor:GB28181.StopPlayRecordRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopPlayRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopPlayRecordRequest::ArenaDtor(void* object) {
  StopPlayRecordRequest* _this = reinterpret_cast< StopPlayRecordRequest* >(object);
  (void)_this;
}
void StopPlayRecordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopPlayRecordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopPlayRecordRequest& StopPlayRecordRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopPlayRecordRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StopPlayRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StopPlayRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopPlayRecordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopPlayRecordRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopPlayRecordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StopPlayRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopPlayRecordRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StopPlayRecordRequest)
  return target;
}

size_t StopPlayRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StopPlayRecordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopPlayRecordRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StopPlayRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopPlayRecordRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopPlayRecordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StopPlayRecordRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StopPlayRecordRequest)
    MergeFrom(*source);
  }
}

void StopPlayRecordRequest::MergeFrom(const StopPlayRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StopPlayRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void StopPlayRecordRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StopPlayRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopPlayRecordRequest::CopyFrom(const StopPlayRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StopPlayRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopPlayRecordRequest::IsInitialized() const {
  return true;
}

void StopPlayRecordRequest::InternalSwap(StopPlayRecordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopPlayRecordRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopPlayRecordReply::InitAsDefaultInstance() {
}
class StopPlayRecordReply::_Internal {
 public:
};

StopPlayRecordReply::StopPlayRecordReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StopPlayRecordReply)
}
StopPlayRecordReply::StopPlayRecordReply(const StopPlayRecordReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.StopPlayRecordReply)
}

void StopPlayRecordReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopPlayRecordReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

StopPlayRecordReply::~StopPlayRecordReply() {
  // @@protoc_insertion_point(destructor:GB28181.StopPlayRecordReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopPlayRecordReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopPlayRecordReply::ArenaDtor(void* object) {
  StopPlayRecordReply* _this = reinterpret_cast< StopPlayRecordReply* >(object);
  (void)_this;
}
void StopPlayRecordReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopPlayRecordReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopPlayRecordReply& StopPlayRecordReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopPlayRecordReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StopPlayRecordReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StopPlayRecordReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopPlayRecordReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopPlayRecordReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopPlayRecordReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StopPlayRecordReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopPlayRecordReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StopPlayRecordReply)
  return target;
}

size_t StopPlayRecordReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StopPlayRecordReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopPlayRecordReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StopPlayRecordReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StopPlayRecordReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopPlayRecordReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StopPlayRecordReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StopPlayRecordReply)
    MergeFrom(*source);
  }
}

void StopPlayRecordReply::MergeFrom(const StopPlayRecordReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StopPlayRecordReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void StopPlayRecordReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StopPlayRecordReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopPlayRecordReply::CopyFrom(const StopPlayRecordReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StopPlayRecordReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopPlayRecordReply::IsInitialized() const {
  return true;
}

void StopPlayRecordReply::InternalSwap(StopPlayRecordReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopPlayRecordReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecordDownloadRequest::InitAsDefaultInstance() {
}
class RecordDownloadRequest::_Internal {
 public:
};

RecordDownloadRequest::RecordDownloadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.RecordDownloadRequest)
}
RecordDownloadRequest::RecordDownloadRequest(const RecordDownloadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_starttime().empty()) {
    starttime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_starttime(),
      GetArena());
  }
  endtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_endtime().empty()) {
    endtime_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_endtime(),
      GetArena());
  }
  destip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_destip().empty()) {
    destip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_destip(),
      GetArena());
  }
  destport_ = from.destport_;
  // @@protoc_insertion_point(copy_constructor:GB28181.RecordDownloadRequest)
}

void RecordDownloadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecordDownloadRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destport_ = 0;
}

RecordDownloadRequest::~RecordDownloadRequest() {
  // @@protoc_insertion_point(destructor:GB28181.RecordDownloadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecordDownloadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  starttime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endtime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RecordDownloadRequest::ArenaDtor(void* object) {
  RecordDownloadRequest* _this = reinterpret_cast< RecordDownloadRequest* >(object);
  (void)_this;
}
void RecordDownloadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecordDownloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecordDownloadRequest& RecordDownloadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecordDownloadRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void RecordDownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.RecordDownloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  starttime_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  endtime_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  destip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  destport_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecordDownloadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RecordDownloadRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RecordDownloadRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string startTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_starttime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RecordDownloadRequest.startTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string endTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_endtime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RecordDownloadRequest.endTime"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string destIp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_destip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RecordDownloadRequest.destIp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 destPort = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          destport_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecordDownloadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.RecordDownloadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RecordDownloadRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RecordDownloadRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // string startTime = 3;
  if (this->starttime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starttime().data(), static_cast<int>(this->_internal_starttime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RecordDownloadRequest.startTime");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_starttime(), target);
  }

  // string endTime = 4;
  if (this->endtime().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endtime().data(), static_cast<int>(this->_internal_endtime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RecordDownloadRequest.endTime");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_endtime(), target);
  }

  // string destIp = 5;
  if (this->destip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destip().data(), static_cast<int>(this->_internal_destip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RecordDownloadRequest.destIp");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_destip(), target);
  }

  // int32 destPort = 6;
  if (this->destport() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_destport(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.RecordDownloadRequest)
  return target;
}

size_t RecordDownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.RecordDownloadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // string startTime = 3;
  if (this->starttime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starttime());
  }

  // string endTime = 4;
  if (this->endtime().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endtime());
  }

  // string destIp = 5;
  if (this->destip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destip());
  }

  // int32 destPort = 6;
  if (this->destport() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_destport());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecordDownloadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.RecordDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordDownloadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecordDownloadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.RecordDownloadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.RecordDownloadRequest)
    MergeFrom(*source);
  }
}

void RecordDownloadRequest::MergeFrom(const RecordDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.RecordDownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.starttime().size() > 0) {
    _internal_set_starttime(from._internal_starttime());
  }
  if (from.endtime().size() > 0) {
    _internal_set_endtime(from._internal_endtime());
  }
  if (from.destip().size() > 0) {
    _internal_set_destip(from._internal_destip());
  }
  if (from.destport() != 0) {
    _internal_set_destport(from._internal_destport());
  }
}

void RecordDownloadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.RecordDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordDownloadRequest::CopyFrom(const RecordDownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.RecordDownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordDownloadRequest::IsInitialized() const {
  return true;
}

void RecordDownloadRequest::InternalSwap(RecordDownloadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  starttime_.Swap(&other->starttime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  endtime_.Swap(&other->endtime_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  destip_.Swap(&other->destip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(destport_, other->destport_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecordDownloadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecordDownloadReply::InitAsDefaultInstance() {
}
class RecordDownloadReply::_Internal {
 public:
};

RecordDownloadReply::RecordDownloadReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.RecordDownloadReply)
}
RecordDownloadReply::RecordDownloadReply(const RecordDownloadReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  ::memcpy(&filesize_, &from.filesize_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&filesize_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:GB28181.RecordDownloadReply)
}

void RecordDownloadReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecordDownloadReply_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&filesize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&filesize_)) + sizeof(code_));
}

RecordDownloadReply::~RecordDownloadReply() {
  // @@protoc_insertion_point(destructor:GB28181.RecordDownloadReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RecordDownloadReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RecordDownloadReply::ArenaDtor(void* object) {
  RecordDownloadReply* _this = reinterpret_cast< RecordDownloadReply* >(object);
  (void)_this;
}
void RecordDownloadReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RecordDownloadReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecordDownloadReply& RecordDownloadReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecordDownloadReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void RecordDownloadReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.RecordDownloadReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&filesize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&filesize_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RecordDownloadReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RecordDownloadReply.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 fileSize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          filesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.RecordDownloadReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecordDownloadReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.RecordDownloadReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RecordDownloadReply.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // int64 fileSize = 2;
  if (this->filesize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_filesize(), target);
  }

  // int32 code = 3;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_code(), target);
  }

  // string msg = 4;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.RecordDownloadReply.msg");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.RecordDownloadReply)
  return target;
}

size_t RecordDownloadReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.RecordDownloadReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string msg = 4;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int64 fileSize = 2;
  if (this->filesize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_filesize());
  }

  // int32 code = 3;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecordDownloadReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.RecordDownloadReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordDownloadReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecordDownloadReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.RecordDownloadReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.RecordDownloadReply)
    MergeFrom(*source);
  }
}

void RecordDownloadReply::MergeFrom(const RecordDownloadReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.RecordDownloadReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.filesize() != 0) {
    _internal_set_filesize(from._internal_filesize());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void RecordDownloadReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.RecordDownloadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordDownloadReply::CopyFrom(const RecordDownloadReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.RecordDownloadReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordDownloadReply::IsInitialized() const {
  return true;
}

void RecordDownloadReply::InternalSwap(RecordDownloadReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RecordDownloadReply, code_)
      + sizeof(RecordDownloadReply::code_)
      - PROTOBUF_FIELD_OFFSET(RecordDownloadReply, filesize_)>(
          reinterpret_cast<char*>(&filesize_),
          reinterpret_cast<char*>(&other->filesize_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RecordDownloadReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDeviceStatusRequest::InitAsDefaultInstance() {
}
class GetDeviceStatusRequest::_Internal {
 public:
};

GetDeviceStatusRequest::GetDeviceStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetDeviceStatusRequest)
}
GetDeviceStatusRequest::GetDeviceStatusRequest(const GetDeviceStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.GetDeviceStatusRequest)
}

void GetDeviceStatusRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetDeviceStatusRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetDeviceStatusRequest::~GetDeviceStatusRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GetDeviceStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDeviceStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetDeviceStatusRequest::ArenaDtor(void* object) {
  GetDeviceStatusRequest* _this = reinterpret_cast< GetDeviceStatusRequest* >(object);
  (void)_this;
}
void GetDeviceStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDeviceStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDeviceStatusRequest& GetDeviceStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDeviceStatusRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetDeviceStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetDeviceStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDeviceStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetDeviceStatusRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetDeviceStatusRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDeviceStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetDeviceStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetDeviceStatusRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetDeviceStatusRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetDeviceStatusRequest)
  return target;
}

size_t GetDeviceStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetDeviceStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeviceStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetDeviceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeviceStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDeviceStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetDeviceStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetDeviceStatusRequest)
    MergeFrom(*source);
  }
}

void GetDeviceStatusRequest::MergeFrom(const GetDeviceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetDeviceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
}

void GetDeviceStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetDeviceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeviceStatusRequest::CopyFrom(const GetDeviceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetDeviceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeviceStatusRequest::IsInitialized() const {
  return true;
}

void GetDeviceStatusRequest::InternalSwap(GetDeviceStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDeviceStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDeviceStatusReply::InitAsDefaultInstance() {
}
class GetDeviceStatusReply::_Internal {
 public:
};

GetDeviceStatusReply::GetDeviceStatusReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetDeviceStatusReply)
}
GetDeviceStatusReply::GetDeviceStatusReply(const GetDeviceStatusReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  ::memcpy(&isonline_, &from.isonline_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&isonline_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:GB28181.GetDeviceStatusReply)
}

void GetDeviceStatusReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetDeviceStatusReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&isonline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&isonline_)) + sizeof(code_));
}

GetDeviceStatusReply::~GetDeviceStatusReply() {
  // @@protoc_insertion_point(destructor:GB28181.GetDeviceStatusReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDeviceStatusReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetDeviceStatusReply::ArenaDtor(void* object) {
  GetDeviceStatusReply* _this = reinterpret_cast< GetDeviceStatusReply* >(object);
  (void)_this;
}
void GetDeviceStatusReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDeviceStatusReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDeviceStatusReply& GetDeviceStatusReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDeviceStatusReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetDeviceStatusReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetDeviceStatusReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&isonline_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&isonline_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDeviceStatusReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool isOnline = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          isonline_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetDeviceStatusReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDeviceStatusReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetDeviceStatusReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isOnline = 1;
  if (this->isonline() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_isonline(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetDeviceStatusReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetDeviceStatusReply)
  return target;
}

size_t GetDeviceStatusReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetDeviceStatusReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // bool isOnline = 1;
  if (this->isonline() != 0) {
    total_size += 1 + 1;
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeviceStatusReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetDeviceStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeviceStatusReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDeviceStatusReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetDeviceStatusReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetDeviceStatusReply)
    MergeFrom(*source);
  }
}

void GetDeviceStatusReply::MergeFrom(const GetDeviceStatusReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetDeviceStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.isonline() != 0) {
    _internal_set_isonline(from._internal_isonline());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetDeviceStatusReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetDeviceStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeviceStatusReply::CopyFrom(const GetDeviceStatusReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetDeviceStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeviceStatusReply::IsInitialized() const {
  return true;
}

void GetDeviceStatusReply::InternalSwap(GetDeviceStatusReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDeviceStatusReply, code_)
      + sizeof(GetDeviceStatusReply::code_)
      - PROTOBUF_FIELD_OFFSET(GetDeviceStatusReply, isonline_)>(
          reinterpret_cast<char*>(&isonline_),
          reinterpret_cast<char*>(&other->isonline_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDeviceStatusReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllDeviceStatusRequest::InitAsDefaultInstance() {
}
class GetAllDeviceStatusRequest::_Internal {
 public:
};

GetAllDeviceStatusRequest::GetAllDeviceStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetAllDeviceStatusRequest)
}
GetAllDeviceStatusRequest::GetAllDeviceStatusRequest(const GetAllDeviceStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GB28181.GetAllDeviceStatusRequest)
}

void GetAllDeviceStatusRequest::SharedCtor() {
}

GetAllDeviceStatusRequest::~GetAllDeviceStatusRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GetAllDeviceStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllDeviceStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetAllDeviceStatusRequest::ArenaDtor(void* object) {
  GetAllDeviceStatusRequest* _this = reinterpret_cast< GetAllDeviceStatusRequest* >(object);
  (void)_this;
}
void GetAllDeviceStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllDeviceStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllDeviceStatusRequest& GetAllDeviceStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllDeviceStatusRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetAllDeviceStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetAllDeviceStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllDeviceStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllDeviceStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetAllDeviceStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetAllDeviceStatusRequest)
  return target;
}

size_t GetAllDeviceStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetAllDeviceStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllDeviceStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetAllDeviceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllDeviceStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllDeviceStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetAllDeviceStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetAllDeviceStatusRequest)
    MergeFrom(*source);
  }
}

void GetAllDeviceStatusRequest::MergeFrom(const GetAllDeviceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetAllDeviceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetAllDeviceStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetAllDeviceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllDeviceStatusRequest::CopyFrom(const GetAllDeviceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetAllDeviceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllDeviceStatusRequest::IsInitialized() const {
  return true;
}

void GetAllDeviceStatusRequest::InternalSwap(GetAllDeviceStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllDeviceStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StatusInfo::InitAsDefaultInstance() {
}
class StatusInfo::_Internal {
 public:
};

StatusInfo::StatusInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StatusInfo)
}
StatusInfo::StatusInfo(const StatusInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  isonline_ = from.isonline_;
  // @@protoc_insertion_point(copy_constructor:GB28181.StatusInfo)
}

void StatusInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StatusInfo_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  isonline_ = false;
}

StatusInfo::~StatusInfo() {
  // @@protoc_insertion_point(destructor:GB28181.StatusInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StatusInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StatusInfo::ArenaDtor(void* object) {
  StatusInfo* _this = reinterpret_cast< StatusInfo* >(object);
  (void)_this;
}
void StatusInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StatusInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StatusInfo& StatusInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StatusInfo_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StatusInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StatusInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  isonline_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StatusInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StatusInfo.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StatusInfo.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool isOnline = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          isonline_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StatusInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StatusInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StatusInfo.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StatusInfo.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // bool isOnline = 3;
  if (this->isonline() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_isonline(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StatusInfo)
  return target;
}

size_t StatusInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StatusInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // bool isOnline = 3;
  if (this->isonline() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatusInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StatusInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StatusInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StatusInfo)
    MergeFrom(*source);
  }
}

void StatusInfo::MergeFrom(const StatusInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StatusInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.isonline() != 0) {
    _internal_set_isonline(from._internal_isonline());
  }
}

void StatusInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusInfo::CopyFrom(const StatusInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StatusInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusInfo::IsInitialized() const {
  return true;
}

void StatusInfo::InternalSwap(StatusInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(isonline_, other->isonline_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StatusInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetAllDeviceStatusReply::InitAsDefaultInstance() {
}
class GetAllDeviceStatusReply::_Internal {
 public:
};

GetAllDeviceStatusReply::GetAllDeviceStatusReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  statusinfolist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetAllDeviceStatusReply)
}
GetAllDeviceStatusReply::GetAllDeviceStatusReply(const GetAllDeviceStatusReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      statusinfolist_(from.statusinfolist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetAllDeviceStatusReply)
}

void GetAllDeviceStatusReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetAllDeviceStatusReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetAllDeviceStatusReply::~GetAllDeviceStatusReply() {
  // @@protoc_insertion_point(destructor:GB28181.GetAllDeviceStatusReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetAllDeviceStatusReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetAllDeviceStatusReply::ArenaDtor(void* object) {
  GetAllDeviceStatusReply* _this = reinterpret_cast< GetAllDeviceStatusReply* >(object);
  (void)_this;
}
void GetAllDeviceStatusReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetAllDeviceStatusReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetAllDeviceStatusReply& GetAllDeviceStatusReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetAllDeviceStatusReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetAllDeviceStatusReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetAllDeviceStatusReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  statusinfolist_.Clear();
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllDeviceStatusReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .GB28181.StatusInfo statusInfoList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_statusinfolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetAllDeviceStatusReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetAllDeviceStatusReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetAllDeviceStatusReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GB28181.StatusInfo statusInfoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_statusinfolist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_statusinfolist(i), target, stream);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetAllDeviceStatusReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetAllDeviceStatusReply)
  return target;
}

size_t GetAllDeviceStatusReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetAllDeviceStatusReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GB28181.StatusInfo statusInfoList = 1;
  total_size += 1UL * this->_internal_statusinfolist_size();
  for (const auto& msg : this->statusinfolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetAllDeviceStatusReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetAllDeviceStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllDeviceStatusReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetAllDeviceStatusReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetAllDeviceStatusReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetAllDeviceStatusReply)
    MergeFrom(*source);
  }
}

void GetAllDeviceStatusReply::MergeFrom(const GetAllDeviceStatusReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetAllDeviceStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  statusinfolist_.MergeFrom(from.statusinfolist_);
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetAllDeviceStatusReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetAllDeviceStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllDeviceStatusReply::CopyFrom(const GetAllDeviceStatusReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetAllDeviceStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllDeviceStatusReply::IsInitialized() const {
  return true;
}

void GetAllDeviceStatusReply::InternalSwap(GetAllDeviceStatusReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  statusinfolist_.InternalSwap(&other->statusinfolist_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllDeviceStatusReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDeviceListRequest::InitAsDefaultInstance() {
}
class GetDeviceListRequest::_Internal {
 public:
};

GetDeviceListRequest::GetDeviceListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetDeviceListRequest)
}
GetDeviceListRequest::GetDeviceListRequest(const GetDeviceListRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GB28181.GetDeviceListRequest)
}

void GetDeviceListRequest::SharedCtor() {
}

GetDeviceListRequest::~GetDeviceListRequest() {
  // @@protoc_insertion_point(destructor:GB28181.GetDeviceListRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDeviceListRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetDeviceListRequest::ArenaDtor(void* object) {
  GetDeviceListRequest* _this = reinterpret_cast< GetDeviceListRequest* >(object);
  (void)_this;
}
void GetDeviceListRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDeviceListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDeviceListRequest& GetDeviceListRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDeviceListRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetDeviceListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetDeviceListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDeviceListRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDeviceListRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetDeviceListRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetDeviceListRequest)
  return target;
}

size_t GetDeviceListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetDeviceListRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeviceListRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetDeviceListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeviceListRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDeviceListRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetDeviceListRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetDeviceListRequest)
    MergeFrom(*source);
  }
}

void GetDeviceListRequest::MergeFrom(const GetDeviceListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetDeviceListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetDeviceListRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetDeviceListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeviceListRequest::CopyFrom(const GetDeviceListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetDeviceListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeviceListRequest::IsInitialized() const {
  return true;
}

void GetDeviceListRequest::InternalSwap(GetDeviceListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDeviceListRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeviceList::InitAsDefaultInstance() {
}
class DeviceList::_Internal {
 public:
};

DeviceList::DeviceList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.DeviceList)
}
DeviceList::DeviceList(const DeviceList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.DeviceList)
}

void DeviceList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeviceList_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeviceList::~DeviceList() {
  // @@protoc_insertion_point(destructor:GB28181.DeviceList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeviceList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeviceList::ArenaDtor(void* object) {
  DeviceList* _this = reinterpret_cast< DeviceList* >(object);
  (void)_this;
}
void DeviceList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeviceList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeviceList& DeviceList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeviceList_gb28181_2eproto.base);
  return *internal_default_instance();
}


void DeviceList::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.DeviceList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeviceList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.DeviceList.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.DeviceList.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.DeviceList.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ip = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.DeviceList.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeviceList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.DeviceList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.DeviceList.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.DeviceList.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.DeviceList.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.DeviceList.ip");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_ip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.DeviceList)
  return target;
}

size_t DeviceList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.DeviceList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.DeviceList)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeviceList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.DeviceList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.DeviceList)
    MergeFrom(*source);
  }
}

void DeviceList::MergeFrom(const DeviceList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.DeviceList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
}

void DeviceList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.DeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceList::CopyFrom(const DeviceList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.DeviceList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceList::IsInitialized() const {
  return true;
}

void DeviceList::InternalSwap(DeviceList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeviceList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDeviceListReply::InitAsDefaultInstance() {
}
class GetDeviceListReply::_Internal {
 public:
};

GetDeviceListReply::GetDeviceListReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  devicelist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.GetDeviceListReply)
}
GetDeviceListReply::GetDeviceListReply(const GetDeviceListReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      devicelist_(from.devicelist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.GetDeviceListReply)
}

void GetDeviceListReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetDeviceListReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

GetDeviceListReply::~GetDeviceListReply() {
  // @@protoc_insertion_point(destructor:GB28181.GetDeviceListReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDeviceListReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetDeviceListReply::ArenaDtor(void* object) {
  GetDeviceListReply* _this = reinterpret_cast< GetDeviceListReply* >(object);
  (void)_this;
}
void GetDeviceListReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDeviceListReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDeviceListReply& GetDeviceListReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDeviceListReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void GetDeviceListReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.GetDeviceListReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devicelist_.Clear();
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDeviceListReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .GB28181.DeviceList deviceList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_devicelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.GetDeviceListReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDeviceListReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.GetDeviceListReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GB28181.DeviceList deviceList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_devicelist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_devicelist(i), target, stream);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.GetDeviceListReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.GetDeviceListReply)
  return target;
}

size_t GetDeviceListReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.GetDeviceListReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GB28181.DeviceList deviceList = 1;
  total_size += 1UL * this->_internal_devicelist_size();
  for (const auto& msg : this->devicelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeviceListReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.GetDeviceListReply)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeviceListReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDeviceListReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.GetDeviceListReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.GetDeviceListReply)
    MergeFrom(*source);
  }
}

void GetDeviceListReply::MergeFrom(const GetDeviceListReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.GetDeviceListReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devicelist_.MergeFrom(from.devicelist_);
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void GetDeviceListReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.GetDeviceListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeviceListReply::CopyFrom(const GetDeviceListReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.GetDeviceListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeviceListReply::IsInitialized() const {
  return true;
}

void GetDeviceListReply::InternalSwap(GetDeviceListReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  devicelist_.InternalSwap(&other->devicelist_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDeviceListReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeviceRebootRequest::InitAsDefaultInstance() {
}
class DeviceRebootRequest::_Internal {
 public:
};

DeviceRebootRequest::DeviceRebootRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.DeviceRebootRequest)
}
DeviceRebootRequest::DeviceRebootRequest(const DeviceRebootRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.DeviceRebootRequest)
}

void DeviceRebootRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeviceRebootRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeviceRebootRequest::~DeviceRebootRequest() {
  // @@protoc_insertion_point(destructor:GB28181.DeviceRebootRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeviceRebootRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeviceRebootRequest::ArenaDtor(void* object) {
  DeviceRebootRequest* _this = reinterpret_cast< DeviceRebootRequest* >(object);
  (void)_this;
}
void DeviceRebootRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeviceRebootRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeviceRebootRequest& DeviceRebootRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeviceRebootRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void DeviceRebootRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.DeviceRebootRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeviceRebootRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.DeviceRebootRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.DeviceRebootRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeviceRebootRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.DeviceRebootRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.DeviceRebootRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.DeviceRebootRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.DeviceRebootRequest)
  return target;
}

size_t DeviceRebootRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.DeviceRebootRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceRebootRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.DeviceRebootRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceRebootRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeviceRebootRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.DeviceRebootRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.DeviceRebootRequest)
    MergeFrom(*source);
  }
}

void DeviceRebootRequest::MergeFrom(const DeviceRebootRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.DeviceRebootRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
}

void DeviceRebootRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.DeviceRebootRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceRebootRequest::CopyFrom(const DeviceRebootRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.DeviceRebootRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceRebootRequest::IsInitialized() const {
  return true;
}

void DeviceRebootRequest::InternalSwap(DeviceRebootRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeviceRebootRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeviceRebootReply::InitAsDefaultInstance() {
}
class DeviceRebootReply::_Internal {
 public:
};

DeviceRebootReply::DeviceRebootReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.DeviceRebootReply)
}
DeviceRebootReply::DeviceRebootReply(const DeviceRebootReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.DeviceRebootReply)
}

void DeviceRebootReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeviceRebootReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

DeviceRebootReply::~DeviceRebootReply() {
  // @@protoc_insertion_point(destructor:GB28181.DeviceRebootReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeviceRebootReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeviceRebootReply::ArenaDtor(void* object) {
  DeviceRebootReply* _this = reinterpret_cast< DeviceRebootReply* >(object);
  (void)_this;
}
void DeviceRebootReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeviceRebootReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeviceRebootReply& DeviceRebootReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeviceRebootReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void DeviceRebootReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.DeviceRebootReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeviceRebootReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.DeviceRebootReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeviceRebootReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.DeviceRebootReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.DeviceRebootReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.DeviceRebootReply)
  return target;
}

size_t DeviceRebootReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.DeviceRebootReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceRebootReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.DeviceRebootReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceRebootReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeviceRebootReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.DeviceRebootReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.DeviceRebootReply)
    MergeFrom(*source);
  }
}

void DeviceRebootReply::MergeFrom(const DeviceRebootReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.DeviceRebootReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void DeviceRebootReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.DeviceRebootReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceRebootReply::CopyFrom(const DeviceRebootReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.DeviceRebootReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceRebootReply::IsInitialized() const {
  return true;
}

void DeviceRebootReply::InternalSwap(DeviceRebootReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeviceRebootReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartBroadcastRequest::InitAsDefaultInstance() {
}
class StartBroadcastRequest::_Internal {
 public:
};

StartBroadcastRequest::StartBroadcastRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StartBroadcastRequest)
}
StartBroadcastRequest::StartBroadcastRequest(const StartBroadcastRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.StartBroadcastRequest)
}

void StartBroadcastRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartBroadcastRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StartBroadcastRequest::~StartBroadcastRequest() {
  // @@protoc_insertion_point(destructor:GB28181.StartBroadcastRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartBroadcastRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartBroadcastRequest::ArenaDtor(void* object) {
  StartBroadcastRequest* _this = reinterpret_cast< StartBroadcastRequest* >(object);
  (void)_this;
}
void StartBroadcastRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartBroadcastRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartBroadcastRequest& StartBroadcastRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartBroadcastRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StartBroadcastRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StartBroadcastRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartBroadcastRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartBroadcastRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartBroadcastRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartBroadcastRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StartBroadcastRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartBroadcastRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartBroadcastRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StartBroadcastRequest)
  return target;
}

size_t StartBroadcastRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StartBroadcastRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartBroadcastRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StartBroadcastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartBroadcastRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartBroadcastRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StartBroadcastRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StartBroadcastRequest)
    MergeFrom(*source);
  }
}

void StartBroadcastRequest::MergeFrom(const StartBroadcastRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StartBroadcastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
}

void StartBroadcastRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StartBroadcastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartBroadcastRequest::CopyFrom(const StartBroadcastRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StartBroadcastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartBroadcastRequest::IsInitialized() const {
  return true;
}

void StartBroadcastRequest::InternalSwap(StartBroadcastRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StartBroadcastRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartBroadcastReply::InitAsDefaultInstance() {
}
class StartBroadcastReply::_Internal {
 public:
};

StartBroadcastReply::StartBroadcastReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StartBroadcastReply)
}
StartBroadcastReply::StartBroadcastReply(const StartBroadcastReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  destip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_destip().empty()) {
    destip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_destip(),
      GetArena());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  ::memcpy(&destport_, &from.destport_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&destport_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:GB28181.StartBroadcastReply)
}

void StartBroadcastReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartBroadcastReply_gb28181_2eproto.base);
  destip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&destport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&destport_)) + sizeof(code_));
}

StartBroadcastReply::~StartBroadcastReply() {
  // @@protoc_insertion_point(destructor:GB28181.StartBroadcastReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartBroadcastReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  destip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartBroadcastReply::ArenaDtor(void* object) {
  StartBroadcastReply* _this = reinterpret_cast< StartBroadcastReply* >(object);
  (void)_this;
}
void StartBroadcastReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartBroadcastReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartBroadcastReply& StartBroadcastReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartBroadcastReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StartBroadcastReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StartBroadcastReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  destip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&destport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&destport_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartBroadcastReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string destIp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_destip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartBroadcastReply.destIp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 destPort = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          destport_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartBroadcastReply.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartBroadcastReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartBroadcastReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StartBroadcastReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string destIp = 1;
  if (this->destip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destip().data(), static_cast<int>(this->_internal_destip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartBroadcastReply.destIp");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_destip(), target);
  }

  // int32 destPort = 2;
  if (this->destport() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_destport(), target);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartBroadcastReply.token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_token(), target);
  }

  // int32 code = 4;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_code(), target);
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartBroadcastReply.msg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StartBroadcastReply)
  return target;
}

size_t StartBroadcastReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StartBroadcastReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string destIp = 1;
  if (this->destip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destip());
  }

  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 destPort = 2;
  if (this->destport() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_destport());
  }

  // int32 code = 4;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartBroadcastReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StartBroadcastReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StartBroadcastReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartBroadcastReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StartBroadcastReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StartBroadcastReply)
    MergeFrom(*source);
  }
}

void StartBroadcastReply::MergeFrom(const StartBroadcastReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StartBroadcastReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.destip().size() > 0) {
    _internal_set_destip(from._internal_destip());
  }
  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.destport() != 0) {
    _internal_set_destport(from._internal_destport());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void StartBroadcastReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StartBroadcastReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartBroadcastReply::CopyFrom(const StartBroadcastReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StartBroadcastReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartBroadcastReply::IsInitialized() const {
  return true;
}

void StartBroadcastReply::InternalSwap(StartBroadcastReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  destip_.Swap(&other->destip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartBroadcastReply, code_)
      + sizeof(StartBroadcastReply::code_)
      - PROTOBUF_FIELD_OFFSET(StartBroadcastReply, destport_)>(
          reinterpret_cast<char*>(&destport_),
          reinterpret_cast<char*>(&other->destport_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StartBroadcastReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopBroadcastRequest::InitAsDefaultInstance() {
}
class StopBroadcastRequest::_Internal {
 public:
};

StopBroadcastRequest::StopBroadcastRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StopBroadcastRequest)
}
StopBroadcastRequest::StopBroadcastRequest(const StopBroadcastRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.StopBroadcastRequest)
}

void StopBroadcastRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopBroadcastRequest_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopBroadcastRequest::~StopBroadcastRequest() {
  // @@protoc_insertion_point(destructor:GB28181.StopBroadcastRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopBroadcastRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopBroadcastRequest::ArenaDtor(void* object) {
  StopBroadcastRequest* _this = reinterpret_cast< StopBroadcastRequest* >(object);
  (void)_this;
}
void StopBroadcastRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopBroadcastRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopBroadcastRequest& StopBroadcastRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopBroadcastRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StopBroadcastRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StopBroadcastRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopBroadcastRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopBroadcastRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopBroadcastRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StopBroadcastRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopBroadcastRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StopBroadcastRequest)
  return target;
}

size_t StopBroadcastRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StopBroadcastRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopBroadcastRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StopBroadcastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopBroadcastRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopBroadcastRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StopBroadcastRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StopBroadcastRequest)
    MergeFrom(*source);
  }
}

void StopBroadcastRequest::MergeFrom(const StopBroadcastRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StopBroadcastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void StopBroadcastRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StopBroadcastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopBroadcastRequest::CopyFrom(const StopBroadcastRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StopBroadcastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopBroadcastRequest::IsInitialized() const {
  return true;
}

void StopBroadcastRequest::InternalSwap(StopBroadcastRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopBroadcastRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopBroadcastReply::InitAsDefaultInstance() {
}
class StopBroadcastReply::_Internal {
 public:
};

StopBroadcastReply::StopBroadcastReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StopBroadcastReply)
}
StopBroadcastReply::StopBroadcastReply(const StopBroadcastReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.StopBroadcastReply)
}

void StopBroadcastReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopBroadcastReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

StopBroadcastReply::~StopBroadcastReply() {
  // @@protoc_insertion_point(destructor:GB28181.StopBroadcastReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopBroadcastReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopBroadcastReply::ArenaDtor(void* object) {
  StopBroadcastReply* _this = reinterpret_cast< StopBroadcastReply* >(object);
  (void)_this;
}
void StopBroadcastReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopBroadcastReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopBroadcastReply& StopBroadcastReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopBroadcastReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StopBroadcastReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StopBroadcastReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopBroadcastReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopBroadcastReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopBroadcastReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StopBroadcastReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopBroadcastReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StopBroadcastReply)
  return target;
}

size_t StopBroadcastReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StopBroadcastReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopBroadcastReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StopBroadcastReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StopBroadcastReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopBroadcastReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StopBroadcastReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StopBroadcastReply)
    MergeFrom(*source);
  }
}

void StopBroadcastReply::MergeFrom(const StopBroadcastReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StopBroadcastReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void StopBroadcastReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StopBroadcastReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopBroadcastReply::CopyFrom(const StopBroadcastReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StopBroadcastReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopBroadcastReply::IsInitialized() const {
  return true;
}

void StopBroadcastReply::InternalSwap(StopBroadcastReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopBroadcastReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartTalkRequest::InitAsDefaultInstance() {
}
class StartTalkRequest::_Internal {
 public:
};

StartTalkRequest::StartTalkRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StartTalkRequest)
}
StartTalkRequest::StartTalkRequest(const StartTalkRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mainid().empty()) {
    mainid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mainid(),
      GetArena());
  }
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_subid().empty()) {
    subid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_subid(),
      GetArena());
  }
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:GB28181.StartTalkRequest)
}

void StartTalkRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartTalkRequest_gb28181_2eproto.base);
  mainid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

StartTalkRequest::~StartTalkRequest() {
  // @@protoc_insertion_point(destructor:GB28181.StartTalkRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartTalkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mainid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartTalkRequest::ArenaDtor(void* object) {
  StartTalkRequest* _this = reinterpret_cast< StartTalkRequest* >(object);
  (void)_this;
}
void StartTalkRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartTalkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartTalkRequest& StartTalkRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartTalkRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StartTalkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StartTalkRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mainid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  port_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartTalkRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string mainId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mainid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartTalkRequest.mainId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string subId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_subid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartTalkRequest.subId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ip = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartTalkRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartTalkRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StartTalkRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mainid().data(), static_cast<int>(this->_internal_mainid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartTalkRequest.mainId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mainid(), target);
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subid().data(), static_cast<int>(this->_internal_subid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartTalkRequest.subId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_subid(), target);
  }

  // string ip = 3;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartTalkRequest.ip");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_ip(), target);
  }

  // int32 port = 4;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_port(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StartTalkRequest)
  return target;
}

size_t StartTalkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StartTalkRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string mainId = 1;
  if (this->mainid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mainid());
  }

  // string subId = 2;
  if (this->subid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subid());
  }

  // string ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // int32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartTalkRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StartTalkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartTalkRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartTalkRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StartTalkRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StartTalkRequest)
    MergeFrom(*source);
  }
}

void StartTalkRequest::MergeFrom(const StartTalkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StartTalkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mainid().size() > 0) {
    _internal_set_mainid(from._internal_mainid());
  }
  if (from.subid().size() > 0) {
    _internal_set_subid(from._internal_subid());
  }
  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
}

void StartTalkRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StartTalkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartTalkRequest::CopyFrom(const StartTalkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StartTalkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTalkRequest::IsInitialized() const {
  return true;
}

void StartTalkRequest::InternalSwap(StartTalkRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mainid_.Swap(&other->mainid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  subid_.Swap(&other->subid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(port_, other->port_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StartTalkRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StartTalkReply::InitAsDefaultInstance() {
}
class StartTalkReply::_Internal {
 public:
};

StartTalkReply::StartTalkReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StartTalkReply)
}
StartTalkReply::StartTalkReply(const StartTalkReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&port_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:GB28181.StartTalkReply)
}

void StartTalkReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StartTalkReply_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&port_)) + sizeof(code_));
}

StartTalkReply::~StartTalkReply() {
  // @@protoc_insertion_point(destructor:GB28181.StartTalkReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StartTalkReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StartTalkReply::ArenaDtor(void* object) {
  StartTalkReply* _this = reinterpret_cast< StartTalkReply* >(object);
  (void)_this;
}
void StartTalkReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StartTalkReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StartTalkReply& StartTalkReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StartTalkReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StartTalkReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StartTalkReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&port_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StartTalkReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartTalkReply.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartTalkReply.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StartTalkReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StartTalkReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StartTalkReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartTalkReply.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartTalkReply.token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_token(), target);
  }

  // int32 code = 4;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_code(), target);
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StartTalkReply.msg");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StartTalkReply)
  return target;
}

size_t StartTalkReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StartTalkReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 code = 4;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartTalkReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StartTalkReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StartTalkReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StartTalkReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StartTalkReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StartTalkReply)
    MergeFrom(*source);
  }
}

void StartTalkReply::MergeFrom(const StartTalkReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StartTalkReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void StartTalkReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StartTalkReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartTalkReply::CopyFrom(const StartTalkReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StartTalkReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartTalkReply::IsInitialized() const {
  return true;
}

void StartTalkReply::InternalSwap(StartTalkReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StartTalkReply, code_)
      + sizeof(StartTalkReply::code_)
      - PROTOBUF_FIELD_OFFSET(StartTalkReply, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StartTalkReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopTalkRequest::InitAsDefaultInstance() {
}
class StopTalkRequest::_Internal {
 public:
};

StopTalkRequest::StopTalkRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StopTalkRequest)
}
StopTalkRequest::StopTalkRequest(const StopTalkRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.StopTalkRequest)
}

void StopTalkRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopTalkRequest_gb28181_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StopTalkRequest::~StopTalkRequest() {
  // @@protoc_insertion_point(destructor:GB28181.StopTalkRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopTalkRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopTalkRequest::ArenaDtor(void* object) {
  StopTalkRequest* _this = reinterpret_cast< StopTalkRequest* >(object);
  (void)_this;
}
void StopTalkRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopTalkRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopTalkRequest& StopTalkRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopTalkRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StopTalkRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StopTalkRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopTalkRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopTalkRequest.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopTalkRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StopTalkRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopTalkRequest.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StopTalkRequest)
  return target;
}

size_t StopTalkRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StopTalkRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopTalkRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StopTalkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopTalkRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopTalkRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StopTalkRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StopTalkRequest)
    MergeFrom(*source);
  }
}

void StopTalkRequest::MergeFrom(const StopTalkRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StopTalkRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void StopTalkRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StopTalkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopTalkRequest::CopyFrom(const StopTalkRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StopTalkRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopTalkRequest::IsInitialized() const {
  return true;
}

void StopTalkRequest::InternalSwap(StopTalkRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StopTalkRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StopTalkReply::InitAsDefaultInstance() {
}
class StopTalkReply::_Internal {
 public:
};

StopTalkReply::StopTalkReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.StopTalkReply)
}
StopTalkReply::StopTalkReply(const StopTalkReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.StopTalkReply)
}

void StopTalkReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StopTalkReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

StopTalkReply::~StopTalkReply() {
  // @@protoc_insertion_point(destructor:GB28181.StopTalkReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StopTalkReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StopTalkReply::ArenaDtor(void* object) {
  StopTalkReply* _this = reinterpret_cast< StopTalkReply* >(object);
  (void)_this;
}
void StopTalkReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StopTalkReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StopTalkReply& StopTalkReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StopTalkReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void StopTalkReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.StopTalkReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StopTalkReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.StopTalkReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StopTalkReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.StopTalkReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.StopTalkReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.StopTalkReply)
  return target;
}

size_t StopTalkReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.StopTalkReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopTalkReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.StopTalkReply)
  GOOGLE_DCHECK_NE(&from, this);
  const StopTalkReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StopTalkReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.StopTalkReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.StopTalkReply)
    MergeFrom(*source);
  }
}

void StopTalkReply::MergeFrom(const StopTalkReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.StopTalkReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void StopTalkReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.StopTalkReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopTalkReply::CopyFrom(const StopTalkReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.StopTalkReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopTalkReply::IsInitialized() const {
  return true;
}

void StopTalkReply::InternalSwap(StopTalkReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StopTalkReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServiceStatusRequest::InitAsDefaultInstance() {
}
class ServiceStatusRequest::_Internal {
 public:
};

ServiceStatusRequest::ServiceStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.ServiceStatusRequest)
}
ServiceStatusRequest::ServiceStatusRequest(const ServiceStatusRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GB28181.ServiceStatusRequest)
}

void ServiceStatusRequest::SharedCtor() {
}

ServiceStatusRequest::~ServiceStatusRequest() {
  // @@protoc_insertion_point(destructor:GB28181.ServiceStatusRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServiceStatusRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ServiceStatusRequest::ArenaDtor(void* object) {
  ServiceStatusRequest* _this = reinterpret_cast< ServiceStatusRequest* >(object);
  (void)_this;
}
void ServiceStatusRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServiceStatusRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServiceStatusRequest& ServiceStatusRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServiceStatusRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void ServiceStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.ServiceStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceStatusRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServiceStatusRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.ServiceStatusRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.ServiceStatusRequest)
  return target;
}

size_t ServiceStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.ServiceStatusRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceStatusRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.ServiceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceStatusRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServiceStatusRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.ServiceStatusRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.ServiceStatusRequest)
    MergeFrom(*source);
  }
}

void ServiceStatusRequest::MergeFrom(const ServiceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.ServiceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServiceStatusRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.ServiceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceStatusRequest::CopyFrom(const ServiceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.ServiceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceStatusRequest::IsInitialized() const {
  return true;
}

void ServiceStatusRequest::InternalSwap(ServiceStatusRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceStatusRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServiceStatusReply::InitAsDefaultInstance() {
}
class ServiceStatusReply::_Internal {
 public:
};

ServiceStatusReply::ServiceStatusReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.ServiceStatusReply)
}
ServiceStatusReply::ServiceStatusReply(const ServiceStatusReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  sipid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sipid().empty()) {
    sipid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sipid(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  ::memcpy(&disktotalsize_, &from.disktotalsize_,
    static_cast<size_t>(reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&disktotalsize_)) + sizeof(code_));
  // @@protoc_insertion_point(copy_constructor:GB28181.ServiceStatusReply)
}

void ServiceStatusReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServiceStatusReply_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sipid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&disktotalsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&disktotalsize_)) + sizeof(code_));
}

ServiceStatusReply::~ServiceStatusReply() {
  // @@protoc_insertion_point(destructor:GB28181.ServiceStatusReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServiceStatusReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sipid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ServiceStatusReply::ArenaDtor(void* object) {
  ServiceStatusReply* _this = reinterpret_cast< ServiceStatusReply* >(object);
  (void)_this;
}
void ServiceStatusReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServiceStatusReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServiceStatusReply& ServiceStatusReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServiceStatusReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void ServiceStatusReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.ServiceStatusReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sipid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&disktotalsize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&disktotalsize_)) + sizeof(code_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceStatusReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.ServiceStatusReply.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 diskTotalSize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          disktotalsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 diskUsedSize = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          diskusedsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 diskAvilableSize = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          diskavilablesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SipId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_sipid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.ServiceStatusReply.SipId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.ServiceStatusReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServiceStatusReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.ServiceStatusReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.ServiceStatusReply.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // uint64 diskTotalSize = 2;
  if (this->disktotalsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_disktotalsize(), target);
  }

  // uint64 diskUsedSize = 3;
  if (this->diskusedsize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_diskusedsize(), target);
  }

  // uint64 diskAvilableSize = 4;
  if (this->diskavilablesize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_diskavilablesize(), target);
  }

  // string SipId = 5;
  if (this->sipid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sipid().data(), static_cast<int>(this->_internal_sipid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.ServiceStatusReply.SipId");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_sipid(), target);
  }

  // int32 port = 6;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_port(), target);
  }

  // int32 code = 7;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_code(), target);
  }

  // string msg = 8;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.ServiceStatusReply.msg");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.ServiceStatusReply)
  return target;
}

size_t ServiceStatusReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.ServiceStatusReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string SipId = 5;
  if (this->sipid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sipid());
  }

  // string msg = 8;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // uint64 diskTotalSize = 2;
  if (this->disktotalsize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_disktotalsize());
  }

  // uint64 diskUsedSize = 3;
  if (this->diskusedsize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_diskusedsize());
  }

  // uint64 diskAvilableSize = 4;
  if (this->diskavilablesize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_diskavilablesize());
  }

  // int32 port = 6;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 code = 7;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceStatusReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.ServiceStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceStatusReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServiceStatusReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.ServiceStatusReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.ServiceStatusReply)
    MergeFrom(*source);
  }
}

void ServiceStatusReply::MergeFrom(const ServiceStatusReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.ServiceStatusReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.sipid().size() > 0) {
    _internal_set_sipid(from._internal_sipid());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.disktotalsize() != 0) {
    _internal_set_disktotalsize(from._internal_disktotalsize());
  }
  if (from.diskusedsize() != 0) {
    _internal_set_diskusedsize(from._internal_diskusedsize());
  }
  if (from.diskavilablesize() != 0) {
    _internal_set_diskavilablesize(from._internal_diskavilablesize());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void ServiceStatusReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.ServiceStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceStatusReply::CopyFrom(const ServiceStatusReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.ServiceStatusReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceStatusReply::IsInitialized() const {
  return true;
}

void ServiceStatusReply::InternalSwap(ServiceStatusReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sipid_.Swap(&other->sipid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServiceStatusReply, code_)
      + sizeof(ServiceStatusReply::code_)
      - PROTOBUF_FIELD_OFFSET(ServiceStatusReply, disktotalsize_)>(
          reinterpret_cast<char*>(&disktotalsize_),
          reinterpret_cast<char*>(&other->disktotalsize_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceStatusReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifPtzMoveRequest::InitAsDefaultInstance() {
}
class OnvifPtzMoveRequest::_Internal {
 public:
};

OnvifPtzMoveRequest::OnvifPtzMoveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifPtzMoveRequest)
}
OnvifPtzMoveRequest::OnvifPtzMoveRequest(const OnvifPtzMoveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&port_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifPtzMoveRequest)
}

void OnvifPtzMoveRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifPtzMoveRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&port_)) + sizeof(speed_));
}

OnvifPtzMoveRequest::~OnvifPtzMoveRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifPtzMoveRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifPtzMoveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifPtzMoveRequest::ArenaDtor(void* object) {
  OnvifPtzMoveRequest* _this = reinterpret_cast< OnvifPtzMoveRequest* >(object);
  (void)_this;
}
void OnvifPtzMoveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifPtzMoveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifPtzMoveRequest& OnvifPtzMoveRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifPtzMoveRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifPtzMoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifPtzMoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&port_)) + sizeof(speed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifPtzMoveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtzMoveRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtzMoveRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtzMoveRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 directory = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          directory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float speed = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifPtzMoveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifPtzMoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtzMoveRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtzMoveRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtzMoveRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  // int32 directory = 6;
  if (this->directory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_directory(), target);
  }

  // float speed = 7;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifPtzMoveRequest)
  return target;
}

size_t OnvifPtzMoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifPtzMoveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  // int32 directory = 6;
  if (this->directory() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_directory());
  }

  // float speed = 7;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifPtzMoveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifPtzMoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifPtzMoveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifPtzMoveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifPtzMoveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifPtzMoveRequest)
    MergeFrom(*source);
  }
}

void OnvifPtzMoveRequest::MergeFrom(const OnvifPtzMoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifPtzMoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (from.directory() != 0) {
    _internal_set_directory(from._internal_directory());
  }
  if (!(from.speed() <= 0 && from.speed() >= 0)) {
    _internal_set_speed(from._internal_speed());
  }
}

void OnvifPtzMoveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifPtzMoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifPtzMoveRequest::CopyFrom(const OnvifPtzMoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifPtzMoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifPtzMoveRequest::IsInitialized() const {
  return true;
}

void OnvifPtzMoveRequest::InternalSwap(OnvifPtzMoveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifPtzMoveRequest, speed_)
      + sizeof(OnvifPtzMoveRequest::speed_)
      - PROTOBUF_FIELD_OFFSET(OnvifPtzMoveRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifPtzMoveRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifPtzMoveReply::InitAsDefaultInstance() {
}
class OnvifPtzMoveReply::_Internal {
 public:
};

OnvifPtzMoveReply::OnvifPtzMoveReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifPtzMoveReply)
}
OnvifPtzMoveReply::OnvifPtzMoveReply(const OnvifPtzMoveReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifPtzMoveReply)
}

void OnvifPtzMoveReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifPtzMoveReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifPtzMoveReply::~OnvifPtzMoveReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifPtzMoveReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifPtzMoveReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifPtzMoveReply::ArenaDtor(void* object) {
  OnvifPtzMoveReply* _this = reinterpret_cast< OnvifPtzMoveReply* >(object);
  (void)_this;
}
void OnvifPtzMoveReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifPtzMoveReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifPtzMoveReply& OnvifPtzMoveReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifPtzMoveReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifPtzMoveReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifPtzMoveReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifPtzMoveReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtzMoveReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifPtzMoveReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifPtzMoveReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtzMoveReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifPtzMoveReply)
  return target;
}

size_t OnvifPtzMoveReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifPtzMoveReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifPtzMoveReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifPtzMoveReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifPtzMoveReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifPtzMoveReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifPtzMoveReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifPtzMoveReply)
    MergeFrom(*source);
  }
}

void OnvifPtzMoveReply::MergeFrom(const OnvifPtzMoveReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifPtzMoveReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifPtzMoveReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifPtzMoveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifPtzMoveReply::CopyFrom(const OnvifPtzMoveReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifPtzMoveReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifPtzMoveReply::IsInitialized() const {
  return true;
}

void OnvifPtzMoveReply::InternalSwap(OnvifPtzMoveReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifPtzMoveReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifPtzStopRequest::InitAsDefaultInstance() {
}
class OnvifPtzStopRequest::_Internal {
 public:
};

OnvifPtzStopRequest::OnvifPtzStopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifPtzStopRequest)
}
OnvifPtzStopRequest::OnvifPtzStopRequest(const OnvifPtzStopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifPtzStopRequest)
}

void OnvifPtzStopRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifPtzStopRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
}

OnvifPtzStopRequest::~OnvifPtzStopRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifPtzStopRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifPtzStopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifPtzStopRequest::ArenaDtor(void* object) {
  OnvifPtzStopRequest* _this = reinterpret_cast< OnvifPtzStopRequest* >(object);
  (void)_this;
}
void OnvifPtzStopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifPtzStopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifPtzStopRequest& OnvifPtzStopRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifPtzStopRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifPtzStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifPtzStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifPtzStopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtzStopRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtzStopRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtzStopRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifPtzStopRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifPtzStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtzStopRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtzStopRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtzStopRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifPtzStopRequest)
  return target;
}

size_t OnvifPtzStopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifPtzStopRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifPtzStopRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifPtzStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifPtzStopRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifPtzStopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifPtzStopRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifPtzStopRequest)
    MergeFrom(*source);
  }
}

void OnvifPtzStopRequest::MergeFrom(const OnvifPtzStopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifPtzStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void OnvifPtzStopRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifPtzStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifPtzStopRequest::CopyFrom(const OnvifPtzStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifPtzStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifPtzStopRequest::IsInitialized() const {
  return true;
}

void OnvifPtzStopRequest::InternalSwap(OnvifPtzStopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifPtzStopRequest, channel_)
      + sizeof(OnvifPtzStopRequest::channel_)
      - PROTOBUF_FIELD_OFFSET(OnvifPtzStopRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifPtzStopRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifPtzStopReply::InitAsDefaultInstance() {
}
class OnvifPtzStopReply::_Internal {
 public:
};

OnvifPtzStopReply::OnvifPtzStopReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifPtzStopReply)
}
OnvifPtzStopReply::OnvifPtzStopReply(const OnvifPtzStopReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifPtzStopReply)
}

void OnvifPtzStopReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifPtzStopReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifPtzStopReply::~OnvifPtzStopReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifPtzStopReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifPtzStopReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifPtzStopReply::ArenaDtor(void* object) {
  OnvifPtzStopReply* _this = reinterpret_cast< OnvifPtzStopReply* >(object);
  (void)_this;
}
void OnvifPtzStopReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifPtzStopReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifPtzStopReply& OnvifPtzStopReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifPtzStopReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifPtzStopReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifPtzStopReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifPtzStopReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtzStopReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifPtzStopReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifPtzStopReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtzStopReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifPtzStopReply)
  return target;
}

size_t OnvifPtzStopReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifPtzStopReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifPtzStopReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifPtzStopReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifPtzStopReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifPtzStopReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifPtzStopReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifPtzStopReply)
    MergeFrom(*source);
  }
}

void OnvifPtzStopReply::MergeFrom(const OnvifPtzStopReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifPtzStopReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifPtzStopReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifPtzStopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifPtzStopReply::CopyFrom(const OnvifPtzStopReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifPtzStopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifPtzStopReply::IsInitialized() const {
  return true;
}

void OnvifPtzStopReply::InternalSwap(OnvifPtzStopReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifPtzStopReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifZoomInRequest::InitAsDefaultInstance() {
}
class OnvifZoomInRequest::_Internal {
 public:
};

OnvifZoomInRequest::OnvifZoomInRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifZoomInRequest)
}
OnvifZoomInRequest::OnvifZoomInRequest(const OnvifZoomInRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&port_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifZoomInRequest)
}

void OnvifZoomInRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifZoomInRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&port_)) + sizeof(speed_));
}

OnvifZoomInRequest::~OnvifZoomInRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifZoomInRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifZoomInRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifZoomInRequest::ArenaDtor(void* object) {
  OnvifZoomInRequest* _this = reinterpret_cast< OnvifZoomInRequest* >(object);
  (void)_this;
}
void OnvifZoomInRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifZoomInRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifZoomInRequest& OnvifZoomInRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifZoomInRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifZoomInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifZoomInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&port_)) + sizeof(speed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifZoomInRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomInRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomInRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomInRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float speed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifZoomInRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifZoomInRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomInRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomInRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomInRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  // float speed = 6;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifZoomInRequest)
  return target;
}

size_t OnvifZoomInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifZoomInRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  // float speed = 6;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifZoomInRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifZoomInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifZoomInRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifZoomInRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifZoomInRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifZoomInRequest)
    MergeFrom(*source);
  }
}

void OnvifZoomInRequest::MergeFrom(const OnvifZoomInRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifZoomInRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (!(from.speed() <= 0 && from.speed() >= 0)) {
    _internal_set_speed(from._internal_speed());
  }
}

void OnvifZoomInRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifZoomInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifZoomInRequest::CopyFrom(const OnvifZoomInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifZoomInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifZoomInRequest::IsInitialized() const {
  return true;
}

void OnvifZoomInRequest::InternalSwap(OnvifZoomInRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifZoomInRequest, speed_)
      + sizeof(OnvifZoomInRequest::speed_)
      - PROTOBUF_FIELD_OFFSET(OnvifZoomInRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifZoomInRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifZoomInReply::InitAsDefaultInstance() {
}
class OnvifZoomInReply::_Internal {
 public:
};

OnvifZoomInReply::OnvifZoomInReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifZoomInReply)
}
OnvifZoomInReply::OnvifZoomInReply(const OnvifZoomInReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifZoomInReply)
}

void OnvifZoomInReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifZoomInReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifZoomInReply::~OnvifZoomInReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifZoomInReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifZoomInReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifZoomInReply::ArenaDtor(void* object) {
  OnvifZoomInReply* _this = reinterpret_cast< OnvifZoomInReply* >(object);
  (void)_this;
}
void OnvifZoomInReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifZoomInReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifZoomInReply& OnvifZoomInReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifZoomInReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifZoomInReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifZoomInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifZoomInReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomInReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifZoomInReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifZoomInReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomInReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifZoomInReply)
  return target;
}

size_t OnvifZoomInReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifZoomInReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifZoomInReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifZoomInReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifZoomInReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifZoomInReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifZoomInReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifZoomInReply)
    MergeFrom(*source);
  }
}

void OnvifZoomInReply::MergeFrom(const OnvifZoomInReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifZoomInReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifZoomInReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifZoomInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifZoomInReply::CopyFrom(const OnvifZoomInReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifZoomInReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifZoomInReply::IsInitialized() const {
  return true;
}

void OnvifZoomInReply::InternalSwap(OnvifZoomInReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifZoomInReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifZoomOutRequest::InitAsDefaultInstance() {
}
class OnvifZoomOutRequest::_Internal {
 public:
};

OnvifZoomOutRequest::OnvifZoomOutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifZoomOutRequest)
}
OnvifZoomOutRequest::OnvifZoomOutRequest(const OnvifZoomOutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&port_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifZoomOutRequest)
}

void OnvifZoomOutRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifZoomOutRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&port_)) + sizeof(speed_));
}

OnvifZoomOutRequest::~OnvifZoomOutRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifZoomOutRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifZoomOutRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifZoomOutRequest::ArenaDtor(void* object) {
  OnvifZoomOutRequest* _this = reinterpret_cast< OnvifZoomOutRequest* >(object);
  (void)_this;
}
void OnvifZoomOutRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifZoomOutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifZoomOutRequest& OnvifZoomOutRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifZoomOutRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifZoomOutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifZoomOutRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&port_)) + sizeof(speed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifZoomOutRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomOutRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomOutRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomOutRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float speed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifZoomOutRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifZoomOutRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomOutRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomOutRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomOutRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  // float speed = 6;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifZoomOutRequest)
  return target;
}

size_t OnvifZoomOutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifZoomOutRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  // float speed = 6;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifZoomOutRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifZoomOutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifZoomOutRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifZoomOutRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifZoomOutRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifZoomOutRequest)
    MergeFrom(*source);
  }
}

void OnvifZoomOutRequest::MergeFrom(const OnvifZoomOutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifZoomOutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (!(from.speed() <= 0 && from.speed() >= 0)) {
    _internal_set_speed(from._internal_speed());
  }
}

void OnvifZoomOutRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifZoomOutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifZoomOutRequest::CopyFrom(const OnvifZoomOutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifZoomOutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifZoomOutRequest::IsInitialized() const {
  return true;
}

void OnvifZoomOutRequest::InternalSwap(OnvifZoomOutRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifZoomOutRequest, speed_)
      + sizeof(OnvifZoomOutRequest::speed_)
      - PROTOBUF_FIELD_OFFSET(OnvifZoomOutRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifZoomOutRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifZoomOutReply::InitAsDefaultInstance() {
}
class OnvifZoomOutReply::_Internal {
 public:
};

OnvifZoomOutReply::OnvifZoomOutReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifZoomOutReply)
}
OnvifZoomOutReply::OnvifZoomOutReply(const OnvifZoomOutReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifZoomOutReply)
}

void OnvifZoomOutReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifZoomOutReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifZoomOutReply::~OnvifZoomOutReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifZoomOutReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifZoomOutReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifZoomOutReply::ArenaDtor(void* object) {
  OnvifZoomOutReply* _this = reinterpret_cast< OnvifZoomOutReply* >(object);
  (void)_this;
}
void OnvifZoomOutReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifZoomOutReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifZoomOutReply& OnvifZoomOutReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifZoomOutReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifZoomOutReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifZoomOutReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifZoomOutReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomOutReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifZoomOutReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifZoomOutReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomOutReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifZoomOutReply)
  return target;
}

size_t OnvifZoomOutReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifZoomOutReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifZoomOutReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifZoomOutReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifZoomOutReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifZoomOutReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifZoomOutReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifZoomOutReply)
    MergeFrom(*source);
  }
}

void OnvifZoomOutReply::MergeFrom(const OnvifZoomOutReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifZoomOutReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifZoomOutReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifZoomOutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifZoomOutReply::CopyFrom(const OnvifZoomOutReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifZoomOutReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifZoomOutReply::IsInitialized() const {
  return true;
}

void OnvifZoomOutReply::InternalSwap(OnvifZoomOutReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifZoomOutReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifZoomStopRequest::InitAsDefaultInstance() {
}
class OnvifZoomStopRequest::_Internal {
 public:
};

OnvifZoomStopRequest::OnvifZoomStopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifZoomStopRequest)
}
OnvifZoomStopRequest::OnvifZoomStopRequest(const OnvifZoomStopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifZoomStopRequest)
}

void OnvifZoomStopRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifZoomStopRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
}

OnvifZoomStopRequest::~OnvifZoomStopRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifZoomStopRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifZoomStopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifZoomStopRequest::ArenaDtor(void* object) {
  OnvifZoomStopRequest* _this = reinterpret_cast< OnvifZoomStopRequest* >(object);
  (void)_this;
}
void OnvifZoomStopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifZoomStopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifZoomStopRequest& OnvifZoomStopRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifZoomStopRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifZoomStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifZoomStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifZoomStopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomStopRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomStopRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomStopRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifZoomStopRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifZoomStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomStopRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomStopRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomStopRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifZoomStopRequest)
  return target;
}

size_t OnvifZoomStopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifZoomStopRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifZoomStopRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifZoomStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifZoomStopRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifZoomStopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifZoomStopRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifZoomStopRequest)
    MergeFrom(*source);
  }
}

void OnvifZoomStopRequest::MergeFrom(const OnvifZoomStopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifZoomStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void OnvifZoomStopRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifZoomStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifZoomStopRequest::CopyFrom(const OnvifZoomStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifZoomStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifZoomStopRequest::IsInitialized() const {
  return true;
}

void OnvifZoomStopRequest::InternalSwap(OnvifZoomStopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifZoomStopRequest, channel_)
      + sizeof(OnvifZoomStopRequest::channel_)
      - PROTOBUF_FIELD_OFFSET(OnvifZoomStopRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifZoomStopRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifZoomStopReply::InitAsDefaultInstance() {
}
class OnvifZoomStopReply::_Internal {
 public:
};

OnvifZoomStopReply::OnvifZoomStopReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifZoomStopReply)
}
OnvifZoomStopReply::OnvifZoomStopReply(const OnvifZoomStopReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifZoomStopReply)
}

void OnvifZoomStopReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifZoomStopReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifZoomStopReply::~OnvifZoomStopReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifZoomStopReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifZoomStopReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifZoomStopReply::ArenaDtor(void* object) {
  OnvifZoomStopReply* _this = reinterpret_cast< OnvifZoomStopReply* >(object);
  (void)_this;
}
void OnvifZoomStopReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifZoomStopReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifZoomStopReply& OnvifZoomStopReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifZoomStopReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifZoomStopReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifZoomStopReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifZoomStopReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifZoomStopReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifZoomStopReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifZoomStopReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifZoomStopReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifZoomStopReply)
  return target;
}

size_t OnvifZoomStopReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifZoomStopReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifZoomStopReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifZoomStopReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifZoomStopReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifZoomStopReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifZoomStopReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifZoomStopReply)
    MergeFrom(*source);
  }
}

void OnvifZoomStopReply::MergeFrom(const OnvifZoomStopReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifZoomStopReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifZoomStopReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifZoomStopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifZoomStopReply::CopyFrom(const OnvifZoomStopReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifZoomStopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifZoomStopReply::IsInitialized() const {
  return true;
}

void OnvifZoomStopReply::InternalSwap(OnvifZoomStopReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifZoomStopReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifFocusNearRequest::InitAsDefaultInstance() {
}
class OnvifFocusNearRequest::_Internal {
 public:
};

OnvifFocusNearRequest::OnvifFocusNearRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifFocusNearRequest)
}
OnvifFocusNearRequest::OnvifFocusNearRequest(const OnvifFocusNearRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&port_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifFocusNearRequest)
}

void OnvifFocusNearRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifFocusNearRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&port_)) + sizeof(speed_));
}

OnvifFocusNearRequest::~OnvifFocusNearRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifFocusNearRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifFocusNearRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifFocusNearRequest::ArenaDtor(void* object) {
  OnvifFocusNearRequest* _this = reinterpret_cast< OnvifFocusNearRequest* >(object);
  (void)_this;
}
void OnvifFocusNearRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifFocusNearRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifFocusNearRequest& OnvifFocusNearRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifFocusNearRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifFocusNearRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifFocusNearRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&port_)) + sizeof(speed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifFocusNearRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusNearRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusNearRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusNearRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float speed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifFocusNearRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifFocusNearRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusNearRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusNearRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusNearRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  // float speed = 6;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifFocusNearRequest)
  return target;
}

size_t OnvifFocusNearRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifFocusNearRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  // float speed = 6;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifFocusNearRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifFocusNearRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifFocusNearRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifFocusNearRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifFocusNearRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifFocusNearRequest)
    MergeFrom(*source);
  }
}

void OnvifFocusNearRequest::MergeFrom(const OnvifFocusNearRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifFocusNearRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (!(from.speed() <= 0 && from.speed() >= 0)) {
    _internal_set_speed(from._internal_speed());
  }
}

void OnvifFocusNearRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifFocusNearRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifFocusNearRequest::CopyFrom(const OnvifFocusNearRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifFocusNearRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifFocusNearRequest::IsInitialized() const {
  return true;
}

void OnvifFocusNearRequest::InternalSwap(OnvifFocusNearRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifFocusNearRequest, speed_)
      + sizeof(OnvifFocusNearRequest::speed_)
      - PROTOBUF_FIELD_OFFSET(OnvifFocusNearRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifFocusNearRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifFocusNearReply::InitAsDefaultInstance() {
}
class OnvifFocusNearReply::_Internal {
 public:
};

OnvifFocusNearReply::OnvifFocusNearReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifFocusNearReply)
}
OnvifFocusNearReply::OnvifFocusNearReply(const OnvifFocusNearReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifFocusNearReply)
}

void OnvifFocusNearReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifFocusNearReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifFocusNearReply::~OnvifFocusNearReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifFocusNearReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifFocusNearReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifFocusNearReply::ArenaDtor(void* object) {
  OnvifFocusNearReply* _this = reinterpret_cast< OnvifFocusNearReply* >(object);
  (void)_this;
}
void OnvifFocusNearReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifFocusNearReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifFocusNearReply& OnvifFocusNearReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifFocusNearReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifFocusNearReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifFocusNearReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifFocusNearReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusNearReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifFocusNearReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifFocusNearReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusNearReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifFocusNearReply)
  return target;
}

size_t OnvifFocusNearReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifFocusNearReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifFocusNearReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifFocusNearReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifFocusNearReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifFocusNearReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifFocusNearReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifFocusNearReply)
    MergeFrom(*source);
  }
}

void OnvifFocusNearReply::MergeFrom(const OnvifFocusNearReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifFocusNearReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifFocusNearReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifFocusNearReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifFocusNearReply::CopyFrom(const OnvifFocusNearReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifFocusNearReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifFocusNearReply::IsInitialized() const {
  return true;
}

void OnvifFocusNearReply::InternalSwap(OnvifFocusNearReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifFocusNearReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifFocusFarRequest::InitAsDefaultInstance() {
}
class OnvifFocusFarRequest::_Internal {
 public:
};

OnvifFocusFarRequest::OnvifFocusFarRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifFocusFarRequest)
}
OnvifFocusFarRequest::OnvifFocusFarRequest(const OnvifFocusFarRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&port_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifFocusFarRequest)
}

void OnvifFocusFarRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifFocusFarRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&port_)) + sizeof(speed_));
}

OnvifFocusFarRequest::~OnvifFocusFarRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifFocusFarRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifFocusFarRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifFocusFarRequest::ArenaDtor(void* object) {
  OnvifFocusFarRequest* _this = reinterpret_cast< OnvifFocusFarRequest* >(object);
  (void)_this;
}
void OnvifFocusFarRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifFocusFarRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifFocusFarRequest& OnvifFocusFarRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifFocusFarRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifFocusFarRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifFocusFarRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&port_)) + sizeof(speed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifFocusFarRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusFarRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusFarRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusFarRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float speed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifFocusFarRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifFocusFarRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusFarRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusFarRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusFarRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  // float speed = 6;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifFocusFarRequest)
  return target;
}

size_t OnvifFocusFarRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifFocusFarRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  // float speed = 6;
  if (!(this->speed() <= 0 && this->speed() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifFocusFarRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifFocusFarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifFocusFarRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifFocusFarRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifFocusFarRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifFocusFarRequest)
    MergeFrom(*source);
  }
}

void OnvifFocusFarRequest::MergeFrom(const OnvifFocusFarRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifFocusFarRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (!(from.speed() <= 0 && from.speed() >= 0)) {
    _internal_set_speed(from._internal_speed());
  }
}

void OnvifFocusFarRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifFocusFarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifFocusFarRequest::CopyFrom(const OnvifFocusFarRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifFocusFarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifFocusFarRequest::IsInitialized() const {
  return true;
}

void OnvifFocusFarRequest::InternalSwap(OnvifFocusFarRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifFocusFarRequest, speed_)
      + sizeof(OnvifFocusFarRequest::speed_)
      - PROTOBUF_FIELD_OFFSET(OnvifFocusFarRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifFocusFarRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifFocusFarReply::InitAsDefaultInstance() {
}
class OnvifFocusFarReply::_Internal {
 public:
};

OnvifFocusFarReply::OnvifFocusFarReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifFocusFarReply)
}
OnvifFocusFarReply::OnvifFocusFarReply(const OnvifFocusFarReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifFocusFarReply)
}

void OnvifFocusFarReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifFocusFarReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifFocusFarReply::~OnvifFocusFarReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifFocusFarReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifFocusFarReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifFocusFarReply::ArenaDtor(void* object) {
  OnvifFocusFarReply* _this = reinterpret_cast< OnvifFocusFarReply* >(object);
  (void)_this;
}
void OnvifFocusFarReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifFocusFarReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifFocusFarReply& OnvifFocusFarReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifFocusFarReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifFocusFarReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifFocusFarReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifFocusFarReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusFarReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifFocusFarReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifFocusFarReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusFarReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifFocusFarReply)
  return target;
}

size_t OnvifFocusFarReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifFocusFarReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifFocusFarReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifFocusFarReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifFocusFarReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifFocusFarReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifFocusFarReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifFocusFarReply)
    MergeFrom(*source);
  }
}

void OnvifFocusFarReply::MergeFrom(const OnvifFocusFarReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifFocusFarReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifFocusFarReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifFocusFarReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifFocusFarReply::CopyFrom(const OnvifFocusFarReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifFocusFarReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifFocusFarReply::IsInitialized() const {
  return true;
}

void OnvifFocusFarReply::InternalSwap(OnvifFocusFarReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifFocusFarReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifFocusStopRequest::InitAsDefaultInstance() {
}
class OnvifFocusStopRequest::_Internal {
 public:
};

OnvifFocusStopRequest::OnvifFocusStopRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifFocusStopRequest)
}
OnvifFocusStopRequest::OnvifFocusStopRequest(const OnvifFocusStopRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifFocusStopRequest)
}

void OnvifFocusStopRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifFocusStopRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
}

OnvifFocusStopRequest::~OnvifFocusStopRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifFocusStopRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifFocusStopRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifFocusStopRequest::ArenaDtor(void* object) {
  OnvifFocusStopRequest* _this = reinterpret_cast< OnvifFocusStopRequest* >(object);
  (void)_this;
}
void OnvifFocusStopRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifFocusStopRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifFocusStopRequest& OnvifFocusStopRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifFocusStopRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifFocusStopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifFocusStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifFocusStopRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusStopRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusStopRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusStopRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifFocusStopRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifFocusStopRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusStopRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusStopRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusStopRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifFocusStopRequest)
  return target;
}

size_t OnvifFocusStopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifFocusStopRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifFocusStopRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifFocusStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifFocusStopRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifFocusStopRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifFocusStopRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifFocusStopRequest)
    MergeFrom(*source);
  }
}

void OnvifFocusStopRequest::MergeFrom(const OnvifFocusStopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifFocusStopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void OnvifFocusStopRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifFocusStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifFocusStopRequest::CopyFrom(const OnvifFocusStopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifFocusStopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifFocusStopRequest::IsInitialized() const {
  return true;
}

void OnvifFocusStopRequest::InternalSwap(OnvifFocusStopRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifFocusStopRequest, channel_)
      + sizeof(OnvifFocusStopRequest::channel_)
      - PROTOBUF_FIELD_OFFSET(OnvifFocusStopRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifFocusStopRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifFocusStopReply::InitAsDefaultInstance() {
}
class OnvifFocusStopReply::_Internal {
 public:
};

OnvifFocusStopReply::OnvifFocusStopReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifFocusStopReply)
}
OnvifFocusStopReply::OnvifFocusStopReply(const OnvifFocusStopReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifFocusStopReply)
}

void OnvifFocusStopReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifFocusStopReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifFocusStopReply::~OnvifFocusStopReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifFocusStopReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifFocusStopReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifFocusStopReply::ArenaDtor(void* object) {
  OnvifFocusStopReply* _this = reinterpret_cast< OnvifFocusStopReply* >(object);
  (void)_this;
}
void OnvifFocusStopReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifFocusStopReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifFocusStopReply& OnvifFocusStopReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifFocusStopReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifFocusStopReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifFocusStopReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifFocusStopReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifFocusStopReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifFocusStopReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifFocusStopReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifFocusStopReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifFocusStopReply)
  return target;
}

size_t OnvifFocusStopReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifFocusStopReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifFocusStopReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifFocusStopReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifFocusStopReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifFocusStopReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifFocusStopReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifFocusStopReply)
    MergeFrom(*source);
  }
}

void OnvifFocusStopReply::MergeFrom(const OnvifFocusStopReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifFocusStopReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifFocusStopReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifFocusStopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifFocusStopReply::CopyFrom(const OnvifFocusStopReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifFocusStopReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifFocusStopReply::IsInitialized() const {
  return true;
}

void OnvifFocusStopReply::InternalSwap(OnvifFocusStopReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifFocusStopReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifPtz3DRequest::InitAsDefaultInstance() {
}
class OnvifPtz3DRequest::_Internal {
 public:
};

OnvifPtz3DRequest::OnvifPtz3DRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifPtz3DRequest)
}
OnvifPtz3DRequest::OnvifPtz3DRequest(const OnvifPtz3DRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&port_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifPtz3DRequest)
}

void OnvifPtz3DRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifPtz3DRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&port_)) + sizeof(height_));
}

OnvifPtz3DRequest::~OnvifPtz3DRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifPtz3DRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifPtz3DRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifPtz3DRequest::ArenaDtor(void* object) {
  OnvifPtz3DRequest* _this = reinterpret_cast< OnvifPtz3DRequest* >(object);
  (void)_this;
}
void OnvifPtz3DRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifPtz3DRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifPtz3DRequest& OnvifPtz3DRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifPtz3DRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifPtz3DRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifPtz3DRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&port_)) + sizeof(height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifPtz3DRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtz3DRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtz3DRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtz3DRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 x1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          x1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 y1 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          y1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 x2 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          x2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 y2 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          y2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 width = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 height = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifPtz3DRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifPtz3DRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtz3DRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtz3DRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtz3DRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  // int32 x1 = 6;
  if (this->x1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_x1(), target);
  }

  // int32 y1 = 7;
  if (this->y1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_y1(), target);
  }

  // int32 x2 = 8;
  if (this->x2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_x2(), target);
  }

  // int32 y2 = 9;
  if (this->y2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_y2(), target);
  }

  // int32 width = 10;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_width(), target);
  }

  // int32 height = 11;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifPtz3DRequest)
  return target;
}

size_t OnvifPtz3DRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifPtz3DRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  // int32 x1 = 6;
  if (this->x1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_x1());
  }

  // int32 y1 = 7;
  if (this->y1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_y1());
  }

  // int32 x2 = 8;
  if (this->x2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_x2());
  }

  // int32 y2 = 9;
  if (this->y2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_y2());
  }

  // int32 width = 10;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_width());
  }

  // int32 height = 11;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifPtz3DRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifPtz3DRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifPtz3DRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifPtz3DRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifPtz3DRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifPtz3DRequest)
    MergeFrom(*source);
  }
}

void OnvifPtz3DRequest::MergeFrom(const OnvifPtz3DRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifPtz3DRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (from.x1() != 0) {
    _internal_set_x1(from._internal_x1());
  }
  if (from.y1() != 0) {
    _internal_set_y1(from._internal_y1());
  }
  if (from.x2() != 0) {
    _internal_set_x2(from._internal_x2());
  }
  if (from.y2() != 0) {
    _internal_set_y2(from._internal_y2());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
}

void OnvifPtz3DRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifPtz3DRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifPtz3DRequest::CopyFrom(const OnvifPtz3DRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifPtz3DRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifPtz3DRequest::IsInitialized() const {
  return true;
}

void OnvifPtz3DRequest::InternalSwap(OnvifPtz3DRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifPtz3DRequest, height_)
      + sizeof(OnvifPtz3DRequest::height_)
      - PROTOBUF_FIELD_OFFSET(OnvifPtz3DRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifPtz3DRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifPtz3DReply::InitAsDefaultInstance() {
}
class OnvifPtz3DReply::_Internal {
 public:
};

OnvifPtz3DReply::OnvifPtz3DReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifPtz3DReply)
}
OnvifPtz3DReply::OnvifPtz3DReply(const OnvifPtz3DReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifPtz3DReply)
}

void OnvifPtz3DReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifPtz3DReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifPtz3DReply::~OnvifPtz3DReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifPtz3DReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifPtz3DReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifPtz3DReply::ArenaDtor(void* object) {
  OnvifPtz3DReply* _this = reinterpret_cast< OnvifPtz3DReply* >(object);
  (void)_this;
}
void OnvifPtz3DReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifPtz3DReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifPtz3DReply& OnvifPtz3DReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifPtz3DReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifPtz3DReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifPtz3DReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifPtz3DReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifPtz3DReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifPtz3DReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifPtz3DReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifPtz3DReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifPtz3DReply)
  return target;
}

size_t OnvifPtz3DReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifPtz3DReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifPtz3DReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifPtz3DReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifPtz3DReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifPtz3DReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifPtz3DReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifPtz3DReply)
    MergeFrom(*source);
  }
}

void OnvifPtz3DReply::MergeFrom(const OnvifPtz3DReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifPtz3DReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifPtz3DReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifPtz3DReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifPtz3DReply::CopyFrom(const OnvifPtz3DReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifPtz3DReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifPtz3DReply::IsInitialized() const {
  return true;
}

void OnvifPtz3DReply::InternalSwap(OnvifPtz3DReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifPtz3DReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifPresetInfo::InitAsDefaultInstance() {
}
class OnvifPresetInfo::_Internal {
 public:
};

OnvifPresetInfo::OnvifPresetInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifPresetInfo)
}
OnvifPresetInfo::OnvifPresetInfo(const OnvifPresetInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pretoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pretoken().empty()) {
    pretoken_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pretoken(),
      GetArena());
  }
  prename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prename().empty()) {
    prename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_prename(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifPresetInfo)
}

void OnvifPresetInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifPresetInfo_gb28181_2eproto.base);
  pretoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

OnvifPresetInfo::~OnvifPresetInfo() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifPresetInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifPresetInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pretoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifPresetInfo::ArenaDtor(void* object) {
  OnvifPresetInfo* _this = reinterpret_cast< OnvifPresetInfo* >(object);
  (void)_this;
}
void OnvifPresetInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifPresetInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifPresetInfo& OnvifPresetInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifPresetInfo_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifPresetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifPresetInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pretoken_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifPresetInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes preToken = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pretoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes preName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_prename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifPresetInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifPresetInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes preToken = 1;
  if (this->pretoken().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pretoken(), target);
  }

  // bytes preName = 2;
  if (this->prename().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_prename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifPresetInfo)
  return target;
}

size_t OnvifPresetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifPresetInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes preToken = 1;
  if (this->pretoken().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pretoken());
  }

  // bytes preName = 2;
  if (this->prename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_prename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifPresetInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifPresetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifPresetInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifPresetInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifPresetInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifPresetInfo)
    MergeFrom(*source);
  }
}

void OnvifPresetInfo::MergeFrom(const OnvifPresetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifPresetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pretoken().size() > 0) {
    _internal_set_pretoken(from._internal_pretoken());
  }
  if (from.prename().size() > 0) {
    _internal_set_prename(from._internal_prename());
  }
}

void OnvifPresetInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifPresetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifPresetInfo::CopyFrom(const OnvifPresetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifPresetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifPresetInfo::IsInitialized() const {
  return true;
}

void OnvifPresetInfo::InternalSwap(OnvifPresetInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  pretoken_.Swap(&other->pretoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prename_.Swap(&other->prename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifPresetInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifGetPresetRequest::InitAsDefaultInstance() {
}
class OnvifGetPresetRequest::_Internal {
 public:
};

OnvifGetPresetRequest::OnvifGetPresetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifGetPresetRequest)
}
OnvifGetPresetRequest::OnvifGetPresetRequest(const OnvifGetPresetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifGetPresetRequest)
}

void OnvifGetPresetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifGetPresetRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
}

OnvifGetPresetRequest::~OnvifGetPresetRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifGetPresetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifGetPresetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifGetPresetRequest::ArenaDtor(void* object) {
  OnvifGetPresetRequest* _this = reinterpret_cast< OnvifGetPresetRequest* >(object);
  (void)_this;
}
void OnvifGetPresetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifGetPresetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifGetPresetRequest& OnvifGetPresetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifGetPresetRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifGetPresetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifGetPresetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifGetPresetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetPresetRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetPresetRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetPresetRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifGetPresetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifGetPresetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetPresetRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetPresetRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetPresetRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifGetPresetRequest)
  return target;
}

size_t OnvifGetPresetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifGetPresetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifGetPresetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifGetPresetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifGetPresetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifGetPresetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifGetPresetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifGetPresetRequest)
    MergeFrom(*source);
  }
}

void OnvifGetPresetRequest::MergeFrom(const OnvifGetPresetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifGetPresetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void OnvifGetPresetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifGetPresetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifGetPresetRequest::CopyFrom(const OnvifGetPresetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifGetPresetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifGetPresetRequest::IsInitialized() const {
  return true;
}

void OnvifGetPresetRequest::InternalSwap(OnvifGetPresetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifGetPresetRequest, channel_)
      + sizeof(OnvifGetPresetRequest::channel_)
      - PROTOBUF_FIELD_OFFSET(OnvifGetPresetRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifGetPresetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifGetPresetReply::InitAsDefaultInstance() {
}
class OnvifGetPresetReply::_Internal {
 public:
};

OnvifGetPresetReply::OnvifGetPresetReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  presetlist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifGetPresetReply)
}
OnvifGetPresetReply::OnvifGetPresetReply(const OnvifGetPresetReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      presetlist_(from.presetlist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifGetPresetReply)
}

void OnvifGetPresetReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifGetPresetReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifGetPresetReply::~OnvifGetPresetReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifGetPresetReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifGetPresetReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifGetPresetReply::ArenaDtor(void* object) {
  OnvifGetPresetReply* _this = reinterpret_cast< OnvifGetPresetReply* >(object);
  (void)_this;
}
void OnvifGetPresetReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifGetPresetReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifGetPresetReply& OnvifGetPresetReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifGetPresetReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifGetPresetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifGetPresetReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  presetlist_.Clear();
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifGetPresetReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .GB28181.OnvifPresetInfo presetList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_presetlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetPresetReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifGetPresetReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifGetPresetReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GB28181.OnvifPresetInfo presetList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_presetlist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_presetlist(i), target, stream);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetPresetReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifGetPresetReply)
  return target;
}

size_t OnvifGetPresetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifGetPresetReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .GB28181.OnvifPresetInfo presetList = 1;
  total_size += 1UL * this->_internal_presetlist_size();
  for (const auto& msg : this->presetlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifGetPresetReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifGetPresetReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifGetPresetReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifGetPresetReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifGetPresetReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifGetPresetReply)
    MergeFrom(*source);
  }
}

void OnvifGetPresetReply::MergeFrom(const OnvifGetPresetReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifGetPresetReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  presetlist_.MergeFrom(from.presetlist_);
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifGetPresetReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifGetPresetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifGetPresetReply::CopyFrom(const OnvifGetPresetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifGetPresetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifGetPresetReply::IsInitialized() const {
  return true;
}

void OnvifGetPresetReply::InternalSwap(OnvifGetPresetReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  presetlist_.InternalSwap(&other->presetlist_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifGetPresetReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifGotoPresetRequest::InitAsDefaultInstance() {
}
class OnvifGotoPresetRequest::_Internal {
 public:
};

OnvifGotoPresetRequest::OnvifGotoPresetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifGotoPresetRequest)
}
OnvifGotoPresetRequest::OnvifGotoPresetRequest(const OnvifGotoPresetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  pretoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pretoken().empty()) {
    pretoken_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pretoken(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifGotoPresetRequest)
}

void OnvifGotoPresetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifGotoPresetRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pretoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
}

OnvifGotoPresetRequest::~OnvifGotoPresetRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifGotoPresetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifGotoPresetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pretoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifGotoPresetRequest::ArenaDtor(void* object) {
  OnvifGotoPresetRequest* _this = reinterpret_cast< OnvifGotoPresetRequest* >(object);
  (void)_this;
}
void OnvifGotoPresetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifGotoPresetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifGotoPresetRequest& OnvifGotoPresetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifGotoPresetRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifGotoPresetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifGotoPresetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pretoken_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifGotoPresetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGotoPresetRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGotoPresetRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGotoPresetRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes preToken = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_pretoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifGotoPresetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifGotoPresetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGotoPresetRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGotoPresetRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGotoPresetRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  // bytes preToken = 6;
  if (this->pretoken().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_pretoken(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifGotoPresetRequest)
  return target;
}

size_t OnvifGotoPresetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifGotoPresetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // bytes preToken = 6;
  if (this->pretoken().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pretoken());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifGotoPresetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifGotoPresetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifGotoPresetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifGotoPresetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifGotoPresetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifGotoPresetRequest)
    MergeFrom(*source);
  }
}

void OnvifGotoPresetRequest::MergeFrom(const OnvifGotoPresetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifGotoPresetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.pretoken().size() > 0) {
    _internal_set_pretoken(from._internal_pretoken());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void OnvifGotoPresetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifGotoPresetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifGotoPresetRequest::CopyFrom(const OnvifGotoPresetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifGotoPresetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifGotoPresetRequest::IsInitialized() const {
  return true;
}

void OnvifGotoPresetRequest::InternalSwap(OnvifGotoPresetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pretoken_.Swap(&other->pretoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifGotoPresetRequest, channel_)
      + sizeof(OnvifGotoPresetRequest::channel_)
      - PROTOBUF_FIELD_OFFSET(OnvifGotoPresetRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifGotoPresetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifGotoPresetReply::InitAsDefaultInstance() {
}
class OnvifGotoPresetReply::_Internal {
 public:
};

OnvifGotoPresetReply::OnvifGotoPresetReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifGotoPresetReply)
}
OnvifGotoPresetReply::OnvifGotoPresetReply(const OnvifGotoPresetReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifGotoPresetReply)
}

void OnvifGotoPresetReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifGotoPresetReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifGotoPresetReply::~OnvifGotoPresetReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifGotoPresetReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifGotoPresetReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifGotoPresetReply::ArenaDtor(void* object) {
  OnvifGotoPresetReply* _this = reinterpret_cast< OnvifGotoPresetReply* >(object);
  (void)_this;
}
void OnvifGotoPresetReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifGotoPresetReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifGotoPresetReply& OnvifGotoPresetReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifGotoPresetReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifGotoPresetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifGotoPresetReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifGotoPresetReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGotoPresetReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifGotoPresetReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifGotoPresetReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGotoPresetReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifGotoPresetReply)
  return target;
}

size_t OnvifGotoPresetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifGotoPresetReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifGotoPresetReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifGotoPresetReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifGotoPresetReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifGotoPresetReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifGotoPresetReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifGotoPresetReply)
    MergeFrom(*source);
  }
}

void OnvifGotoPresetReply::MergeFrom(const OnvifGotoPresetReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifGotoPresetReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifGotoPresetReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifGotoPresetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifGotoPresetReply::CopyFrom(const OnvifGotoPresetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifGotoPresetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifGotoPresetReply::IsInitialized() const {
  return true;
}

void OnvifGotoPresetReply::InternalSwap(OnvifGotoPresetReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifGotoPresetReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifSetPresetRequest::InitAsDefaultInstance() {
}
class OnvifSetPresetRequest::_Internal {
 public:
};

OnvifSetPresetRequest::OnvifSetPresetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifSetPresetRequest)
}
OnvifSetPresetRequest::OnvifSetPresetRequest(const OnvifSetPresetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  pretoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pretoken().empty()) {
    pretoken_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pretoken(),
      GetArena());
  }
  prename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prename().empty()) {
    prename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_prename(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifSetPresetRequest)
}

void OnvifSetPresetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifSetPresetRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pretoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
}

OnvifSetPresetRequest::~OnvifSetPresetRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifSetPresetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifSetPresetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pretoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifSetPresetRequest::ArenaDtor(void* object) {
  OnvifSetPresetRequest* _this = reinterpret_cast< OnvifSetPresetRequest* >(object);
  (void)_this;
}
void OnvifSetPresetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifSetPresetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifSetPresetRequest& OnvifSetPresetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifSetPresetRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifSetPresetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifSetPresetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pretoken_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifSetPresetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifSetPresetRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifSetPresetRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifSetPresetRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes preToken = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_pretoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes preName = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_prename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifSetPresetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifSetPresetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifSetPresetRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifSetPresetRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifSetPresetRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  // bytes preToken = 6;
  if (this->pretoken().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_pretoken(), target);
  }

  // bytes preName = 7;
  if (this->prename().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_prename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifSetPresetRequest)
  return target;
}

size_t OnvifSetPresetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifSetPresetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // bytes preToken = 6;
  if (this->pretoken().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pretoken());
  }

  // bytes preName = 7;
  if (this->prename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_prename());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifSetPresetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifSetPresetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifSetPresetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifSetPresetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifSetPresetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifSetPresetRequest)
    MergeFrom(*source);
  }
}

void OnvifSetPresetRequest::MergeFrom(const OnvifSetPresetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifSetPresetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.pretoken().size() > 0) {
    _internal_set_pretoken(from._internal_pretoken());
  }
  if (from.prename().size() > 0) {
    _internal_set_prename(from._internal_prename());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void OnvifSetPresetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifSetPresetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifSetPresetRequest::CopyFrom(const OnvifSetPresetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifSetPresetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifSetPresetRequest::IsInitialized() const {
  return true;
}

void OnvifSetPresetRequest::InternalSwap(OnvifSetPresetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  pretoken_.Swap(&other->pretoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prename_.Swap(&other->prename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifSetPresetRequest, channel_)
      + sizeof(OnvifSetPresetRequest::channel_)
      - PROTOBUF_FIELD_OFFSET(OnvifSetPresetRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifSetPresetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifSetPresetReply::InitAsDefaultInstance() {
}
class OnvifSetPresetReply::_Internal {
 public:
};

OnvifSetPresetReply::OnvifSetPresetReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifSetPresetReply)
}
OnvifSetPresetReply::OnvifSetPresetReply(const OnvifSetPresetReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifSetPresetReply)
}

void OnvifSetPresetReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifSetPresetReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifSetPresetReply::~OnvifSetPresetReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifSetPresetReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifSetPresetReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifSetPresetReply::ArenaDtor(void* object) {
  OnvifSetPresetReply* _this = reinterpret_cast< OnvifSetPresetReply* >(object);
  (void)_this;
}
void OnvifSetPresetReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifSetPresetReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifSetPresetReply& OnvifSetPresetReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifSetPresetReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifSetPresetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifSetPresetReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifSetPresetReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifSetPresetReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifSetPresetReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifSetPresetReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifSetPresetReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifSetPresetReply)
  return target;
}

size_t OnvifSetPresetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifSetPresetReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifSetPresetReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifSetPresetReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifSetPresetReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifSetPresetReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifSetPresetReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifSetPresetReply)
    MergeFrom(*source);
  }
}

void OnvifSetPresetReply::MergeFrom(const OnvifSetPresetReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifSetPresetReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifSetPresetReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifSetPresetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifSetPresetReply::CopyFrom(const OnvifSetPresetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifSetPresetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifSetPresetReply::IsInitialized() const {
  return true;
}

void OnvifSetPresetReply::InternalSwap(OnvifSetPresetReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifSetPresetReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifDeviceRebootRequest::InitAsDefaultInstance() {
}
class OnvifDeviceRebootRequest::_Internal {
 public:
};

OnvifDeviceRebootRequest::OnvifDeviceRebootRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifDeviceRebootRequest)
}
OnvifDeviceRebootRequest::OnvifDeviceRebootRequest(const OnvifDeviceRebootRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifDeviceRebootRequest)
}

void OnvifDeviceRebootRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifDeviceRebootRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
}

OnvifDeviceRebootRequest::~OnvifDeviceRebootRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifDeviceRebootRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifDeviceRebootRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifDeviceRebootRequest::ArenaDtor(void* object) {
  OnvifDeviceRebootRequest* _this = reinterpret_cast< OnvifDeviceRebootRequest* >(object);
  (void)_this;
}
void OnvifDeviceRebootRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifDeviceRebootRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifDeviceRebootRequest& OnvifDeviceRebootRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifDeviceRebootRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifDeviceRebootRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifDeviceRebootRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifDeviceRebootRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifDeviceRebootRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifDeviceRebootRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifDeviceRebootRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifDeviceRebootRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifDeviceRebootRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifDeviceRebootRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifDeviceRebootRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifDeviceRebootRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifDeviceRebootRequest)
  return target;
}

size_t OnvifDeviceRebootRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifDeviceRebootRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifDeviceRebootRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifDeviceRebootRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifDeviceRebootRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifDeviceRebootRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifDeviceRebootRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifDeviceRebootRequest)
    MergeFrom(*source);
  }
}

void OnvifDeviceRebootRequest::MergeFrom(const OnvifDeviceRebootRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifDeviceRebootRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void OnvifDeviceRebootRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifDeviceRebootRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifDeviceRebootRequest::CopyFrom(const OnvifDeviceRebootRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifDeviceRebootRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifDeviceRebootRequest::IsInitialized() const {
  return true;
}

void OnvifDeviceRebootRequest::InternalSwap(OnvifDeviceRebootRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifDeviceRebootRequest, channel_)
      + sizeof(OnvifDeviceRebootRequest::channel_)
      - PROTOBUF_FIELD_OFFSET(OnvifDeviceRebootRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifDeviceRebootRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifDeviceRebootReply::InitAsDefaultInstance() {
}
class OnvifDeviceRebootReply::_Internal {
 public:
};

OnvifDeviceRebootReply::OnvifDeviceRebootReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifDeviceRebootReply)
}
OnvifDeviceRebootReply::OnvifDeviceRebootReply(const OnvifDeviceRebootReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifDeviceRebootReply)
}

void OnvifDeviceRebootReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifDeviceRebootReply_gb28181_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifDeviceRebootReply::~OnvifDeviceRebootReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifDeviceRebootReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifDeviceRebootReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifDeviceRebootReply::ArenaDtor(void* object) {
  OnvifDeviceRebootReply* _this = reinterpret_cast< OnvifDeviceRebootReply* >(object);
  (void)_this;
}
void OnvifDeviceRebootReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifDeviceRebootReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifDeviceRebootReply& OnvifDeviceRebootReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifDeviceRebootReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifDeviceRebootReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifDeviceRebootReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifDeviceRebootReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifDeviceRebootReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifDeviceRebootReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifDeviceRebootReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifDeviceRebootReply.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifDeviceRebootReply)
  return target;
}

size_t OnvifDeviceRebootReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifDeviceRebootReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifDeviceRebootReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifDeviceRebootReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifDeviceRebootReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifDeviceRebootReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifDeviceRebootReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifDeviceRebootReply)
    MergeFrom(*source);
  }
}

void OnvifDeviceRebootReply::MergeFrom(const OnvifDeviceRebootReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifDeviceRebootReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifDeviceRebootReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifDeviceRebootReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifDeviceRebootReply::CopyFrom(const OnvifDeviceRebootReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifDeviceRebootReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifDeviceRebootReply::IsInitialized() const {
  return true;
}

void OnvifDeviceRebootReply::InternalSwap(OnvifDeviceRebootReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifDeviceRebootReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifGetMainUrlRequest::InitAsDefaultInstance() {
}
class OnvifGetMainUrlRequest::_Internal {
 public:
};

OnvifGetMainUrlRequest::OnvifGetMainUrlRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifGetMainUrlRequest)
}
OnvifGetMainUrlRequest::OnvifGetMainUrlRequest(const OnvifGetMainUrlRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifGetMainUrlRequest)
}

void OnvifGetMainUrlRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifGetMainUrlRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
}

OnvifGetMainUrlRequest::~OnvifGetMainUrlRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifGetMainUrlRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifGetMainUrlRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifGetMainUrlRequest::ArenaDtor(void* object) {
  OnvifGetMainUrlRequest* _this = reinterpret_cast< OnvifGetMainUrlRequest* >(object);
  (void)_this;
}
void OnvifGetMainUrlRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifGetMainUrlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifGetMainUrlRequest& OnvifGetMainUrlRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifGetMainUrlRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifGetMainUrlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifGetMainUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifGetMainUrlRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetMainUrlRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetMainUrlRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetMainUrlRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifGetMainUrlRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifGetMainUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetMainUrlRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetMainUrlRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetMainUrlRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifGetMainUrlRequest)
  return target;
}

size_t OnvifGetMainUrlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifGetMainUrlRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifGetMainUrlRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifGetMainUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifGetMainUrlRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifGetMainUrlRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifGetMainUrlRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifGetMainUrlRequest)
    MergeFrom(*source);
  }
}

void OnvifGetMainUrlRequest::MergeFrom(const OnvifGetMainUrlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifGetMainUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void OnvifGetMainUrlRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifGetMainUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifGetMainUrlRequest::CopyFrom(const OnvifGetMainUrlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifGetMainUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifGetMainUrlRequest::IsInitialized() const {
  return true;
}

void OnvifGetMainUrlRequest::InternalSwap(OnvifGetMainUrlRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifGetMainUrlRequest, channel_)
      + sizeof(OnvifGetMainUrlRequest::channel_)
      - PROTOBUF_FIELD_OFFSET(OnvifGetMainUrlRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifGetMainUrlRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifGetMainUrlReply::InitAsDefaultInstance() {
}
class OnvifGetMainUrlReply::_Internal {
 public:
};

OnvifGetMainUrlReply::OnvifGetMainUrlReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifGetMainUrlReply)
}
OnvifGetMainUrlReply::OnvifGetMainUrlReply(const OnvifGetMainUrlReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifGetMainUrlReply)
}

void OnvifGetMainUrlReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifGetMainUrlReply_gb28181_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifGetMainUrlReply::~OnvifGetMainUrlReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifGetMainUrlReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifGetMainUrlReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifGetMainUrlReply::ArenaDtor(void* object) {
  OnvifGetMainUrlReply* _this = reinterpret_cast< OnvifGetMainUrlReply* >(object);
  (void)_this;
}
void OnvifGetMainUrlReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifGetMainUrlReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifGetMainUrlReply& OnvifGetMainUrlReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifGetMainUrlReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifGetMainUrlReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifGetMainUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifGetMainUrlReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetMainUrlReply.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetMainUrlReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifGetMainUrlReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifGetMainUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetMainUrlReply.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetMainUrlReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifGetMainUrlReply)
  return target;
}

size_t OnvifGetMainUrlReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifGetMainUrlReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifGetMainUrlReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifGetMainUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifGetMainUrlReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifGetMainUrlReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifGetMainUrlReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifGetMainUrlReply)
    MergeFrom(*source);
  }
}

void OnvifGetMainUrlReply::MergeFrom(const OnvifGetMainUrlReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifGetMainUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifGetMainUrlReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifGetMainUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifGetMainUrlReply::CopyFrom(const OnvifGetMainUrlReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifGetMainUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifGetMainUrlReply::IsInitialized() const {
  return true;
}

void OnvifGetMainUrlReply::InternalSwap(OnvifGetMainUrlReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifGetMainUrlReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifGetSubUrlRequest::InitAsDefaultInstance() {
}
class OnvifGetSubUrlRequest::_Internal {
 public:
};

OnvifGetSubUrlRequest::OnvifGetSubUrlRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifGetSubUrlRequest)
}
OnvifGetSubUrlRequest::OnvifGetSubUrlRequest(const OnvifGetSubUrlRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ip(),
      GetArena());
  }
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user().empty()) {
    user_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&channel_) -
    reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifGetSubUrlRequest)
}

void OnvifGetSubUrlRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifGetSubUrlRequest_gb28181_2eproto.base);
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
}

OnvifGetSubUrlRequest::~OnvifGetSubUrlRequest() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifGetSubUrlRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifGetSubUrlRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifGetSubUrlRequest::ArenaDtor(void* object) {
  OnvifGetSubUrlRequest* _this = reinterpret_cast< OnvifGetSubUrlRequest* >(object);
  (void)_this;
}
void OnvifGetSubUrlRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifGetSubUrlRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifGetSubUrlRequest& OnvifGetSubUrlRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifGetSubUrlRequest_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifGetSubUrlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifGetSubUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_) -
      reinterpret_cast<char*>(&port_)) + sizeof(channel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifGetSubUrlRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetSubUrlRequest.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_user();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetSubUrlRequest.user"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetSubUrlRequest.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifGetSubUrlRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifGetSubUrlRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetSubUrlRequest.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // int32 port = 2;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_port(), target);
  }

  // string user = 3;
  if (this->user().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user().data(), static_cast<int>(this->_internal_user().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetSubUrlRequest.user");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_user(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetSubUrlRequest.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_channel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifGetSubUrlRequest)
  return target;
}

size_t OnvifGetSubUrlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifGetSubUrlRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // string user = 3;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // int32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_port());
  }

  // int32 channel = 5;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channel());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifGetSubUrlRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifGetSubUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifGetSubUrlRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifGetSubUrlRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifGetSubUrlRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifGetSubUrlRequest)
    MergeFrom(*source);
  }
}

void OnvifGetSubUrlRequest::MergeFrom(const OnvifGetSubUrlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifGetSubUrlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {
    _internal_set_ip(from._internal_ip());
  }
  if (from.user().size() > 0) {
    _internal_set_user(from._internal_user());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
}

void OnvifGetSubUrlRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifGetSubUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifGetSubUrlRequest::CopyFrom(const OnvifGetSubUrlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifGetSubUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifGetSubUrlRequest::IsInitialized() const {
  return true;
}

void OnvifGetSubUrlRequest::InternalSwap(OnvifGetSubUrlRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  user_.Swap(&other->user_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OnvifGetSubUrlRequest, channel_)
      + sizeof(OnvifGetSubUrlRequest::channel_)
      - PROTOBUF_FIELD_OFFSET(OnvifGetSubUrlRequest, port_)>(
          reinterpret_cast<char*>(&port_),
          reinterpret_cast<char*>(&other->port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifGetSubUrlRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OnvifGetSubUrlReply::InitAsDefaultInstance() {
}
class OnvifGetSubUrlReply::_Internal {
 public:
};

OnvifGetSubUrlReply::OnvifGetSubUrlReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:GB28181.OnvifGetSubUrlReply)
}
OnvifGetSubUrlReply::OnvifGetSubUrlReply(const OnvifGetSubUrlReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_url().empty()) {
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_url(),
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:GB28181.OnvifGetSubUrlReply)
}

void OnvifGetSubUrlReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OnvifGetSubUrlReply_gb28181_2eproto.base);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

OnvifGetSubUrlReply::~OnvifGetSubUrlReply() {
  // @@protoc_insertion_point(destructor:GB28181.OnvifGetSubUrlReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OnvifGetSubUrlReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OnvifGetSubUrlReply::ArenaDtor(void* object) {
  OnvifGetSubUrlReply* _this = reinterpret_cast< OnvifGetSubUrlReply* >(object);
  (void)_this;
}
void OnvifGetSubUrlReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OnvifGetSubUrlReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnvifGetSubUrlReply& OnvifGetSubUrlReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OnvifGetSubUrlReply_gb28181_2eproto.base);
  return *internal_default_instance();
}


void OnvifGetSubUrlReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GB28181.OnvifGetSubUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OnvifGetSubUrlReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetSubUrlReply.url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "GB28181.OnvifGetSubUrlReply.msg"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OnvifGetSubUrlReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GB28181.OnvifGetSubUrlReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetSubUrlReply.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  // int32 code = 2;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_code(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GB28181.OnvifGetSubUrlReply.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GB28181.OnvifGetSubUrlReply)
  return target;
}

size_t OnvifGetSubUrlReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GB28181.OnvifGetSubUrlReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 code = 2;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnvifGetSubUrlReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GB28181.OnvifGetSubUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  const OnvifGetSubUrlReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OnvifGetSubUrlReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GB28181.OnvifGetSubUrlReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GB28181.OnvifGetSubUrlReply)
    MergeFrom(*source);
  }
}

void OnvifGetSubUrlReply::MergeFrom(const OnvifGetSubUrlReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GB28181.OnvifGetSubUrlReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {
    _internal_set_url(from._internal_url());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void OnvifGetSubUrlReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GB28181.OnvifGetSubUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnvifGetSubUrlReply::CopyFrom(const OnvifGetSubUrlReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GB28181.OnvifGetSubUrlReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnvifGetSubUrlReply::IsInitialized() const {
  return true;
}

void OnvifGetSubUrlReply::InternalSwap(OnvifGetSubUrlReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OnvifGetSubUrlReply::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace GB28181
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::GB28181::PtzCommandRequest* Arena::CreateMaybeMessage< ::GB28181::PtzCommandRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzCommandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::ControlReply* Arena::CreateMaybeMessage< ::GB28181::ControlReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::ControlReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzZoomInRequest* Arena::CreateMaybeMessage< ::GB28181::PtzZoomInRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzZoomInRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzZoomInReply* Arena::CreateMaybeMessage< ::GB28181::PtzZoomInReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzZoomInReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzZoomOutRequest* Arena::CreateMaybeMessage< ::GB28181::PtzZoomOutRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzZoomOutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzZoomOutReply* Arena::CreateMaybeMessage< ::GB28181::PtzZoomOutReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzZoomOutReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzStopRequest* Arena::CreateMaybeMessage< ::GB28181::PtzStopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzStopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzStopReply* Arena::CreateMaybeMessage< ::GB28181::PtzStopReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzStopReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzIrisBigRequest* Arena::CreateMaybeMessage< ::GB28181::PtzIrisBigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzIrisBigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzIrisBigReply* Arena::CreateMaybeMessage< ::GB28181::PtzIrisBigReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzIrisBigReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzIrisSmallRequest* Arena::CreateMaybeMessage< ::GB28181::PtzIrisSmallRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzIrisSmallRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzIrisSmallReply* Arena::CreateMaybeMessage< ::GB28181::PtzIrisSmallReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzIrisSmallReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzFocusOutRequest* Arena::CreateMaybeMessage< ::GB28181::PtzFocusOutRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzFocusOutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzFocusOutReply* Arena::CreateMaybeMessage< ::GB28181::PtzFocusOutReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzFocusOutReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzFocusInRequest* Arena::CreateMaybeMessage< ::GB28181::PtzFocusInRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzFocusInRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzFocusInReply* Arena::CreateMaybeMessage< ::GB28181::PtzFocusInReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzFocusInReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzIFStopRequest* Arena::CreateMaybeMessage< ::GB28181::PtzIFStopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzIFStopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PtzIFStopReply* Arena::CreateMaybeMessage< ::GB28181::PtzIFStopReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PtzIFStopReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::RealPlayUrlRequest* Arena::CreateMaybeMessage< ::GB28181::RealPlayUrlRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::RealPlayUrlRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::RealPlayUrlReply* Arena::CreateMaybeMessage< ::GB28181::RealPlayUrlReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::RealPlayUrlReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::RealPlayUrlInRequest* Arena::CreateMaybeMessage< ::GB28181::RealPlayUrlInRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::RealPlayUrlInRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::RealPlayUrlInReply* Arena::CreateMaybeMessage< ::GB28181::RealPlayUrlInReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::RealPlayUrlInReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetRTMPUrlRequest* Arena::CreateMaybeMessage< ::GB28181::GetRTMPUrlRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetRTMPUrlRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetRTMPUrlReply* Arena::CreateMaybeMessage< ::GB28181::GetRTMPUrlReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetRTMPUrlReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetRTMPUrlInRequest* Arena::CreateMaybeMessage< ::GB28181::GetRTMPUrlInRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetRTMPUrlInRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetRTMPUrlInReply* Arena::CreateMaybeMessage< ::GB28181::GetRTMPUrlInReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetRTMPUrlInReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetHLSUrlRequest* Arena::CreateMaybeMessage< ::GB28181::GetHLSUrlRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetHLSUrlRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetHLSUrlReply* Arena::CreateMaybeMessage< ::GB28181::GetHLSUrlReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetHLSUrlReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetHLSUrlInRequest* Arena::CreateMaybeMessage< ::GB28181::GetHLSUrlInRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetHLSUrlInRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetHLSUrlInReply* Arena::CreateMaybeMessage< ::GB28181::GetHLSUrlInReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetHLSUrlInReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StopVideoByIdRequest* Arena::CreateMaybeMessage< ::GB28181::StopVideoByIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StopVideoByIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StopVideoByIdReply* Arena::CreateMaybeMessage< ::GB28181::StopVideoByIdReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StopVideoByIdReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StopVideoBySsrcRequest* Arena::CreateMaybeMessage< ::GB28181::StopVideoBySsrcRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StopVideoBySsrcRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StopVideoBySsrcReply* Arena::CreateMaybeMessage< ::GB28181::StopVideoBySsrcReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StopVideoBySsrcReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PlayBackUrlRequest* Arena::CreateMaybeMessage< ::GB28181::PlayBackUrlRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PlayBackUrlRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PlayBackUrlReply* Arena::CreateMaybeMessage< ::GB28181::PlayBackUrlReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PlayBackUrlReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PresetGoRequest* Arena::CreateMaybeMessage< ::GB28181::PresetGoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PresetGoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PresetSetRequest* Arena::CreateMaybeMessage< ::GB28181::PresetSetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PresetSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PresetDelRequest* Arena::CreateMaybeMessage< ::GB28181::PresetDelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PresetDelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PresetQueryRequest* Arena::CreateMaybeMessage< ::GB28181::PresetQueryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PresetQueryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PresetQueryReply* Arena::CreateMaybeMessage< ::GB28181::PresetQueryReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PresetQueryReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetPresetRequest* Arena::CreateMaybeMessage< ::GB28181::GetPresetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetPresetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PresetInfo* Arena::CreateMaybeMessage< ::GB28181::PresetInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PresetInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetPresetReply* Arena::CreateMaybeMessage< ::GB28181::GetPresetReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetPresetReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::QueryRecordRequest* Arena::CreateMaybeMessage< ::GB28181::QueryRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::QueryRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::QueryRecordReply* Arena::CreateMaybeMessage< ::GB28181::QueryRecordReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::QueryRecordReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetRecordRequest* Arena::CreateMaybeMessage< ::GB28181::GetRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::RecordInfo* Arena::CreateMaybeMessage< ::GB28181::RecordInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::RecordInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetRecordReply* Arena::CreateMaybeMessage< ::GB28181::GetRecordReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetRecordReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PlayFastRequest* Arena::CreateMaybeMessage< ::GB28181::PlayFastRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PlayFastRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PlayFastReply* Arena::CreateMaybeMessage< ::GB28181::PlayFastReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PlayFastReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PlaySlowRequest* Arena::CreateMaybeMessage< ::GB28181::PlaySlowRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PlaySlowRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PlaySlowReply* Arena::CreateMaybeMessage< ::GB28181::PlaySlowReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PlaySlowReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PauseRequest* Arena::CreateMaybeMessage< ::GB28181::PauseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PauseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PauseReply* Arena::CreateMaybeMessage< ::GB28181::PauseReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PauseReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PlayRequest* Arena::CreateMaybeMessage< ::GB28181::PlayRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PlayRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::PlayReply* Arena::CreateMaybeMessage< ::GB28181::PlayReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::PlayReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::SeekRequest* Arena::CreateMaybeMessage< ::GB28181::SeekRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::SeekRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::SeekReply* Arena::CreateMaybeMessage< ::GB28181::SeekReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::SeekReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GoForwardRequest* Arena::CreateMaybeMessage< ::GB28181::GoForwardRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GoForwardRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GoForwardReply* Arena::CreateMaybeMessage< ::GB28181::GoForwardReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GoForwardReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GoBackRequest* Arena::CreateMaybeMessage< ::GB28181::GoBackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GoBackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GoBackReply* Arena::CreateMaybeMessage< ::GB28181::GoBackReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GoBackReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StopPlayRecordRequest* Arena::CreateMaybeMessage< ::GB28181::StopPlayRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StopPlayRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StopPlayRecordReply* Arena::CreateMaybeMessage< ::GB28181::StopPlayRecordReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StopPlayRecordReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::RecordDownloadRequest* Arena::CreateMaybeMessage< ::GB28181::RecordDownloadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::RecordDownloadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::RecordDownloadReply* Arena::CreateMaybeMessage< ::GB28181::RecordDownloadReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::RecordDownloadReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetDeviceStatusRequest* Arena::CreateMaybeMessage< ::GB28181::GetDeviceStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetDeviceStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetDeviceStatusReply* Arena::CreateMaybeMessage< ::GB28181::GetDeviceStatusReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetDeviceStatusReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetAllDeviceStatusRequest* Arena::CreateMaybeMessage< ::GB28181::GetAllDeviceStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetAllDeviceStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StatusInfo* Arena::CreateMaybeMessage< ::GB28181::StatusInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StatusInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetAllDeviceStatusReply* Arena::CreateMaybeMessage< ::GB28181::GetAllDeviceStatusReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetAllDeviceStatusReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetDeviceListRequest* Arena::CreateMaybeMessage< ::GB28181::GetDeviceListRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetDeviceListRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::DeviceList* Arena::CreateMaybeMessage< ::GB28181::DeviceList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::DeviceList >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::GetDeviceListReply* Arena::CreateMaybeMessage< ::GB28181::GetDeviceListReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::GetDeviceListReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::DeviceRebootRequest* Arena::CreateMaybeMessage< ::GB28181::DeviceRebootRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::DeviceRebootRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::DeviceRebootReply* Arena::CreateMaybeMessage< ::GB28181::DeviceRebootReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::DeviceRebootReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StartBroadcastRequest* Arena::CreateMaybeMessage< ::GB28181::StartBroadcastRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StartBroadcastRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StartBroadcastReply* Arena::CreateMaybeMessage< ::GB28181::StartBroadcastReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StartBroadcastReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StopBroadcastRequest* Arena::CreateMaybeMessage< ::GB28181::StopBroadcastRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StopBroadcastRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StopBroadcastReply* Arena::CreateMaybeMessage< ::GB28181::StopBroadcastReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StopBroadcastReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StartTalkRequest* Arena::CreateMaybeMessage< ::GB28181::StartTalkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StartTalkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StartTalkReply* Arena::CreateMaybeMessage< ::GB28181::StartTalkReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StartTalkReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StopTalkRequest* Arena::CreateMaybeMessage< ::GB28181::StopTalkRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StopTalkRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::StopTalkReply* Arena::CreateMaybeMessage< ::GB28181::StopTalkReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::StopTalkReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::ServiceStatusRequest* Arena::CreateMaybeMessage< ::GB28181::ServiceStatusRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::ServiceStatusRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::ServiceStatusReply* Arena::CreateMaybeMessage< ::GB28181::ServiceStatusReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::ServiceStatusReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifPtzMoveRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifPtzMoveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifPtzMoveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifPtzMoveReply* Arena::CreateMaybeMessage< ::GB28181::OnvifPtzMoveReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifPtzMoveReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifPtzStopRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifPtzStopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifPtzStopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifPtzStopReply* Arena::CreateMaybeMessage< ::GB28181::OnvifPtzStopReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifPtzStopReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifZoomInRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifZoomInRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifZoomInRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifZoomInReply* Arena::CreateMaybeMessage< ::GB28181::OnvifZoomInReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifZoomInReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifZoomOutRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifZoomOutRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifZoomOutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifZoomOutReply* Arena::CreateMaybeMessage< ::GB28181::OnvifZoomOutReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifZoomOutReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifZoomStopRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifZoomStopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifZoomStopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifZoomStopReply* Arena::CreateMaybeMessage< ::GB28181::OnvifZoomStopReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifZoomStopReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifFocusNearRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifFocusNearRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifFocusNearRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifFocusNearReply* Arena::CreateMaybeMessage< ::GB28181::OnvifFocusNearReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifFocusNearReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifFocusFarRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifFocusFarRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifFocusFarRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifFocusFarReply* Arena::CreateMaybeMessage< ::GB28181::OnvifFocusFarReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifFocusFarReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifFocusStopRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifFocusStopRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifFocusStopRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifFocusStopReply* Arena::CreateMaybeMessage< ::GB28181::OnvifFocusStopReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifFocusStopReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifPtz3DRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifPtz3DRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifPtz3DRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifPtz3DReply* Arena::CreateMaybeMessage< ::GB28181::OnvifPtz3DReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifPtz3DReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifPresetInfo* Arena::CreateMaybeMessage< ::GB28181::OnvifPresetInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifPresetInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifGetPresetRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifGetPresetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifGetPresetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifGetPresetReply* Arena::CreateMaybeMessage< ::GB28181::OnvifGetPresetReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifGetPresetReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifGotoPresetRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifGotoPresetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifGotoPresetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifGotoPresetReply* Arena::CreateMaybeMessage< ::GB28181::OnvifGotoPresetReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifGotoPresetReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifSetPresetRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifSetPresetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifSetPresetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifSetPresetReply* Arena::CreateMaybeMessage< ::GB28181::OnvifSetPresetReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifSetPresetReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifDeviceRebootRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifDeviceRebootRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifDeviceRebootRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifDeviceRebootReply* Arena::CreateMaybeMessage< ::GB28181::OnvifDeviceRebootReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifDeviceRebootReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifGetMainUrlRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifGetMainUrlRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifGetMainUrlRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifGetMainUrlReply* Arena::CreateMaybeMessage< ::GB28181::OnvifGetMainUrlReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifGetMainUrlReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifGetSubUrlRequest* Arena::CreateMaybeMessage< ::GB28181::OnvifGetSubUrlRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifGetSubUrlRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GB28181::OnvifGetSubUrlReply* Arena::CreateMaybeMessage< ::GB28181::OnvifGetSubUrlReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GB28181::OnvifGetSubUrlReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
