// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: gb28181.proto
#ifndef GRPC_gb28181_2eproto__INCLUDED
#define GRPC_gb28181_2eproto__INCLUDED

#include "gb28181.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace GB28181 {

class Greeter final {
 public:
  static constexpr char const* service_full_name() {
    return "GB28181.Greeter";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 云台控制
    virtual ::grpc::Status PtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest& request, ::GB28181::ControlReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>> AsyncPtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>>(AsyncPtzCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>> PrepareAsyncPtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>>(PrepareAsyncPtzCommandRaw(context, request, cq));
    }
    // 摄像机拉近
    virtual ::grpc::Status PtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest& request, ::GB28181::PtzZoomInReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomInReply>> AsyncPtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomInReply>>(AsyncPtzZoomInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomInReply>> PrepareAsyncPtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomInReply>>(PrepareAsyncPtzZoomInRaw(context, request, cq));
    }
    // 摄像机拉远
    virtual ::grpc::Status PtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest& request, ::GB28181::PtzZoomOutReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomOutReply>> AsyncPtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomOutReply>>(AsyncPtzZoomOutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomOutReply>> PrepareAsyncPtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomOutReply>>(PrepareAsyncPtzZoomOutRaw(context, request, cq));
    }
    // 光圈变大
    virtual ::grpc::Status PtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest& request, ::GB28181::PtzIrisBigReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisBigReply>> AsyncPtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisBigReply>>(AsyncPtzIrisBigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisBigReply>> PrepareAsyncPtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisBigReply>>(PrepareAsyncPtzIrisBigRaw(context, request, cq));
    }
    // 光圈变小
    virtual ::grpc::Status PtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest& request, ::GB28181::PtzIrisSmallReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisSmallReply>> AsyncPtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisSmallReply>>(AsyncPtzIrisSmallRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisSmallReply>> PrepareAsyncPtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisSmallReply>>(PrepareAsyncPtzIrisSmallRaw(context, request, cq));
    }
    // 聚焦拉远
    virtual ::grpc::Status PtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest& request, ::GB28181::PtzFocusOutReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusOutReply>> AsyncPtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusOutReply>>(AsyncPtzFocusOutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusOutReply>> PrepareAsyncPtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusOutReply>>(PrepareAsyncPtzFocusOutRaw(context, request, cq));
    }
    // 聚焦拉近
    virtual ::grpc::Status PtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest& request, ::GB28181::PtzFocusInReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusInReply>> AsyncPtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusInReply>>(AsyncPtzFocusInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusInReply>> PrepareAsyncPtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusInReply>>(PrepareAsyncPtzFocusInRaw(context, request, cq));
    }
    // 聚焦光圈停止
    virtual ::grpc::Status PtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest& request, ::GB28181::PtzIFStopReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIFStopReply>> AsyncPtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIFStopReply>>(AsyncPtzIFStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIFStopReply>> PrepareAsyncPtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIFStopReply>>(PrepareAsyncPtzIFStopRaw(context, request, cq));
    }
    // 云台控制停止（拉近拉远也用这个停止）
    virtual ::grpc::Status PtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest& request, ::GB28181::PtzStopReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzStopReply>> AsyncPtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzStopReply>>(AsyncPtzStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzStopReply>> PrepareAsyncPtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzStopReply>>(PrepareAsyncPtzStopRaw(context, request, cq));
    }
    // 获取实时视频播放rtsp url
    virtual ::grpc::Status GetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest& request, ::GB28181::RealPlayUrlReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlReply>> AsyncGetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlReply>>(AsyncGetRealPlayUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlReply>> PrepareAsyncGetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlReply>>(PrepareAsyncGetRealPlayUrlRaw(context, request, cq));
    }
    // 获取实时视频播放RTMP url（超过60秒没有客户端连接服务器会停止取流）
    virtual ::grpc::Status GetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest& request, ::GB28181::GetRTMPUrlReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlReply>> AsyncGetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlReply>>(AsyncGetRTMPUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlReply>> PrepareAsyncGetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlReply>>(PrepareAsyncGetRTMPUrlRaw(context, request, cq));
    }
    // 获取HLS播放url
    virtual ::grpc::Status GetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest& request, ::GB28181::GetHLSUrlReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlReply>> AsyncGetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlReply>>(AsyncGetHLSUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlReply>> PrepareAsyncGetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlReply>>(PrepareAsyncGetHLSUrlRaw(context, request, cq));
    }
    // 获取实时视频播放rtsp url 内网ip
    virtual ::grpc::Status GetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest& request, ::GB28181::RealPlayUrlInReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlInReply>> AsyncGetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlInReply>>(AsyncGetRealPlayUrlInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlInReply>> PrepareAsyncGetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlInReply>>(PrepareAsyncGetRealPlayUrlInRaw(context, request, cq));
    }
    // 获取实时视频播放RTMP url（超过60秒没有客户端连接服务器会停止取流）内网ip
    virtual ::grpc::Status GetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest& request, ::GB28181::GetRTMPUrlInReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlInReply>> AsyncGetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlInReply>>(AsyncGetRTMPUrlInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlInReply>> PrepareAsyncGetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlInReply>>(PrepareAsyncGetRTMPUrlInRaw(context, request, cq));
    }
    // 获取HLS播放url 内网ip
    virtual ::grpc::Status GetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest& request, ::GB28181::GetHLSUrlInReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlInReply>> AsyncGetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlInReply>>(AsyncGetHLSUrlInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlInReply>> PrepareAsyncGetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlInReply>>(PrepareAsyncGetHLSUrlInRaw(context, request, cq));
    }
    // 通过主id和子id停止视频播放
    virtual ::grpc::Status StopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest& request, ::GB28181::StopVideoByIdReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoByIdReply>> AsyncStopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoByIdReply>>(AsyncStopVideoByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoByIdReply>> PrepareAsyncStopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoByIdReply>>(PrepareAsyncStopVideoByIdRaw(context, request, cq));
    }
    // 通过ssrc停止视频播放
    virtual ::grpc::Status StopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest& request, ::GB28181::StopVideoBySsrcReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoBySsrcReply>> AsyncStopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoBySsrcReply>>(AsyncStopVideoBySsrcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoBySsrcReply>> PrepareAsyncStopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoBySsrcReply>>(PrepareAsyncStopVideoBySsrcRaw(context, request, cq));
    }
    // 获取录像回放的url
    virtual ::grpc::Status GetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest& request, ::GB28181::PlayBackUrlReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayBackUrlReply>> AsyncGetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayBackUrlReply>>(AsyncGetPlayBackUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayBackUrlReply>> PrepareAsyncGetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayBackUrlReply>>(PrepareAsyncGetPlayBackUrlRaw(context, request, cq));
    }
    // 转到相应预置位
    virtual ::grpc::Status PresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest& request, ::GB28181::ControlReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>> AsyncPresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>>(AsyncPresetGoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>> PrepareAsyncPresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>>(PrepareAsyncPresetGoRaw(context, request, cq));
    }
    // 设置相应预置位
    virtual ::grpc::Status PresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest& request, ::GB28181::ControlReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>> AsyncPresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>>(AsyncPresetSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>> PrepareAsyncPresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>>(PrepareAsyncPresetSetRaw(context, request, cq));
    }
    // 删除相应预置位
    virtual ::grpc::Status PresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest& request, ::GB28181::ControlReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>> AsyncPresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>>(AsyncPresetDelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>> PrepareAsyncPresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>>(PrepareAsyncPresetDelRaw(context, request, cq));
    }
    // 查询预置位
    virtual ::grpc::Status PresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest& request, ::GB28181::PresetQueryReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PresetQueryReply>> AsyncPresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PresetQueryReply>>(AsyncPresetQueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PresetQueryReply>> PrepareAsyncPresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PresetQueryReply>>(PrepareAsyncPresetQueryRaw(context, request, cq));
    }
    // 获取预置位
    virtual ::grpc::Status GetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest& request, ::GB28181::GetPresetReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetPresetReply>> AsyncGetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetPresetReply>>(AsyncGetPresetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetPresetReply>> PrepareAsyncGetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetPresetReply>>(PrepareAsyncGetPresetRaw(context, request, cq));
    }
    // 录像查询
    virtual ::grpc::Status QueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest& request, ::GB28181::QueryRecordReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::QueryRecordReply>> AsyncQueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::QueryRecordReply>>(AsyncQueryRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::QueryRecordReply>> PrepareAsyncQueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::QueryRecordReply>>(PrepareAsyncQueryRecordRaw(context, request, cq));
    }
    // 获取录像列表
    virtual ::grpc::Status GetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest& request, ::GB28181::GetRecordReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRecordReply>> AsyncGetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRecordReply>>(AsyncGetRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRecordReply>> PrepareAsyncGetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRecordReply>>(PrepareAsyncGetRecordRaw(context, request, cq));
    }
    // 快放
    virtual ::grpc::Status PlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest& request, ::GB28181::PlayFastReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayFastReply>> AsyncPlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayFastReply>>(AsyncPlayFastRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayFastReply>> PrepareAsyncPlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayFastReply>>(PrepareAsyncPlayFastRaw(context, request, cq));
    }
    // 慢放
    virtual ::grpc::Status PlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest& request, ::GB28181::PlaySlowReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlaySlowReply>> AsyncPlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlaySlowReply>>(AsyncPlaySlowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlaySlowReply>> PrepareAsyncPlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlaySlowReply>>(PrepareAsyncPlaySlowRaw(context, request, cq));
    }
    // 暂停
    virtual ::grpc::Status Pause(::grpc::ClientContext* context, const ::GB28181::PauseRequest& request, ::GB28181::PauseReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PauseReply>> AsyncPause(::grpc::ClientContext* context, const ::GB28181::PauseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PauseReply>>(AsyncPauseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PauseReply>> PrepareAsyncPause(::grpc::ClientContext* context, const ::GB28181::PauseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PauseReply>>(PrepareAsyncPauseRaw(context, request, cq));
    }
    // 开始播放
    virtual ::grpc::Status Play(::grpc::ClientContext* context, const ::GB28181::PlayRequest& request, ::GB28181::PlayReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayReply>> AsyncPlay(::grpc::ClientContext* context, const ::GB28181::PlayRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayReply>>(AsyncPlayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayReply>> PrepareAsyncPlay(::grpc::ClientContext* context, const ::GB28181::PlayRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayReply>>(PrepareAsyncPlayRaw(context, request, cq));
    }
    // 设置当前播放时间点
    virtual ::grpc::Status Seek(::grpc::ClientContext* context, const ::GB28181::SeekRequest& request, ::GB28181::SeekReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::SeekReply>> AsyncSeek(::grpc::ClientContext* context, const ::GB28181::SeekRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::SeekReply>>(AsyncSeekRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::SeekReply>> PrepareAsyncSeek(::grpc::ClientContext* context, const ::GB28181::SeekRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::SeekReply>>(PrepareAsyncSeekRaw(context, request, cq));
    }
    // 快进
    virtual ::grpc::Status GoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest& request, ::GB28181::GoForwardReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoForwardReply>> AsyncGoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoForwardReply>>(AsyncGoForwardRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoForwardReply>> PrepareAsyncGoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoForwardReply>>(PrepareAsyncGoForwardRaw(context, request, cq));
    }
    // 快退
    // 停止录像播放
    virtual ::grpc::Status StopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest& request, ::GB28181::StopPlayRecordReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopPlayRecordReply>> AsyncStopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopPlayRecordReply>>(AsyncStopPlayRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopPlayRecordReply>> PrepareAsyncStopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopPlayRecordReply>>(PrepareAsyncStopPlayRecordRaw(context, request, cq));
    }
    virtual ::grpc::Status GoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest& request, ::GB28181::GoBackReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoBackReply>> AsyncGoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoBackReply>>(AsyncGoBackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoBackReply>> PrepareAsyncGoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoBackReply>>(PrepareAsyncGoBackRaw(context, request, cq));
    }
    // 录像下载
    virtual ::grpc::Status RecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest& request, ::GB28181::RecordDownloadReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RecordDownloadReply>> AsyncRecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RecordDownloadReply>>(AsyncRecordDownloadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RecordDownloadReply>> PrepareAsyncRecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RecordDownloadReply>>(PrepareAsyncRecordDownloadRaw(context, request, cq));
    }
    // 根据设备id获取设备状态
    virtual ::grpc::Status GetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest& request, ::GB28181::GetDeviceStatusReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceStatusReply>> AsyncGetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceStatusReply>>(AsyncGetDeviceStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceStatusReply>> PrepareAsyncGetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceStatusReply>>(PrepareAsyncGetDeviceStatusRaw(context, request, cq));
    }
    // 获取所有设备状态
    virtual ::grpc::Status GetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest& request, ::GB28181::GetAllDeviceStatusReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetAllDeviceStatusReply>> AsyncGetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetAllDeviceStatusReply>>(AsyncGetAllDeviceStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetAllDeviceStatusReply>> PrepareAsyncGetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetAllDeviceStatusReply>>(PrepareAsyncGetAllDeviceStatusRaw(context, request, cq));
    }
    // 获取设备列表
    virtual ::grpc::Status GetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest& request, ::GB28181::GetDeviceListReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceListReply>> AsyncGetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceListReply>>(AsyncGetDeviceListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceListReply>> PrepareAsyncGetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceListReply>>(PrepareAsyncGetDeviceListRaw(context, request, cq));
    }
    // 设备重启	
    virtual ::grpc::Status DeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest& request, ::GB28181::DeviceRebootReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::DeviceRebootReply>> AsyncDeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::DeviceRebootReply>>(AsyncDeviceRebootRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::DeviceRebootReply>> PrepareAsyncDeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::DeviceRebootReply>>(PrepareAsyncDeviceRebootRaw(context, request, cq));
    }
    // 开始语音广播
    virtual ::grpc::Status StartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest& request, ::GB28181::StartBroadcastReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartBroadcastReply>> AsyncStartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartBroadcastReply>>(AsyncStartBroadcastRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartBroadcastReply>> PrepareAsyncStartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartBroadcastReply>>(PrepareAsyncStartBroadcastRaw(context, request, cq));
    }
    // 停止语音广播
    virtual ::grpc::Status StopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest& request, ::GB28181::StopBroadcastReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopBroadcastReply>> AsyncStopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopBroadcastReply>>(AsyncStopBroadcastRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopBroadcastReply>> PrepareAsyncStopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopBroadcastReply>>(PrepareAsyncStopBroadcastRaw(context, request, cq));
    }
    // 开始语音对讲
    virtual ::grpc::Status StartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest& request, ::GB28181::StartTalkReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartTalkReply>> AsyncStartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartTalkReply>>(AsyncStartTalkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartTalkReply>> PrepareAsyncStartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartTalkReply>>(PrepareAsyncStartTalkRaw(context, request, cq));
    }
    // 停止语音对讲
    virtual ::grpc::Status StopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest& request, ::GB28181::StopTalkReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopTalkReply>> AsyncStopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopTalkReply>>(AsyncStopTalkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopTalkReply>> PrepareAsyncStopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopTalkReply>>(PrepareAsyncStopTalkRaw(context, request, cq));
    }
    // 获取节点状态
    virtual ::grpc::Status ServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest& request, ::GB28181::ServiceStatusReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ServiceStatusReply>> AsyncServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ServiceStatusReply>>(AsyncServiceStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ServiceStatusReply>> PrepareAsyncServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ServiceStatusReply>>(PrepareAsyncServiceStatusRaw(context, request, cq));
    }
    // Onvif云台转动
    virtual ::grpc::Status OnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest& request, ::GB28181::OnvifPtzMoveReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzMoveReply>> AsyncOnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzMoveReply>>(AsyncOnvifPtzMoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzMoveReply>> PrepareAsyncOnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzMoveReply>>(PrepareAsyncOnvifPtzMoveRaw(context, request, cq));
    }
    // Onvif停止云台转动
    virtual ::grpc::Status OnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest& request, ::GB28181::OnvifPtzStopReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzStopReply>> AsyncOnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzStopReply>>(AsyncOnvifPtzStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzStopReply>> PrepareAsyncOnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzStopReply>>(PrepareAsyncOnvifPtzStopRaw(context, request, cq));
    }
    // Onvif变倍拉近
    virtual ::grpc::Status OnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest& request, ::GB28181::OnvifZoomInReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomInReply>> AsyncOnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomInReply>>(AsyncOnvifZoomInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomInReply>> PrepareAsyncOnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomInReply>>(PrepareAsyncOnvifZoomInRaw(context, request, cq));
    }
    // Onvif变倍拉远
    virtual ::grpc::Status OnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest& request, ::GB28181::OnvifZoomOutReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomOutReply>> AsyncOnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomOutReply>>(AsyncOnvifZoomOutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomOutReply>> PrepareAsyncOnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomOutReply>>(PrepareAsyncOnvifZoomOutRaw(context, request, cq));
    }
    // Onvif停止变倍
    virtual ::grpc::Status OnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest& request, ::GB28181::OnvifZoomStopReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomStopReply>> AsyncOnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomStopReply>>(AsyncOnvifZoomStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomStopReply>> PrepareAsyncOnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomStopReply>>(PrepareAsyncOnvifZoomStopRaw(context, request, cq));
    }
    // Onvif聚焦+
    virtual ::grpc::Status OnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest& request, ::GB28181::OnvifFocusNearReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusNearReply>> AsyncOnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusNearReply>>(AsyncOnvifFocusNearRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusNearReply>> PrepareAsyncOnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusNearReply>>(PrepareAsyncOnvifFocusNearRaw(context, request, cq));
    }
    // Onvif聚焦-
    virtual ::grpc::Status OnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest& request, ::GB28181::OnvifFocusFarReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusFarReply>> AsyncOnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusFarReply>>(AsyncOnvifFocusFarRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusFarReply>> PrepareAsyncOnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusFarReply>>(PrepareAsyncOnvifFocusFarRaw(context, request, cq));
    }
    // Onvif停止聚焦
    virtual ::grpc::Status OnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest& request, ::GB28181::OnvifFocusStopReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusStopReply>> AsyncOnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusStopReply>>(AsyncOnvifFocusStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusStopReply>> PrepareAsyncOnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusStopReply>>(PrepareAsyncOnvifFocusStopRaw(context, request, cq));
    }
    // Onvif云台3D控制
    virtual ::grpc::Status OnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest& request, ::GB28181::OnvifPtz3DReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtz3DReply>> AsyncOnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtz3DReply>>(AsyncOnvifPtz3DRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtz3DReply>> PrepareAsyncOnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtz3DReply>>(PrepareAsyncOnvifPtz3DRaw(context, request, cq));
    }
    // Onvif获取预置位
    virtual ::grpc::Status OnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest& request, ::GB28181::OnvifGetPresetReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetPresetReply>> AsyncOnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetPresetReply>>(AsyncOnvifGetPresetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetPresetReply>> PrepareAsyncOnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetPresetReply>>(PrepareAsyncOnvifGetPresetRaw(context, request, cq));
    }
    // Onvif转到预置位
    virtual ::grpc::Status OnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest& request, ::GB28181::OnvifGotoPresetReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGotoPresetReply>> AsyncOnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGotoPresetReply>>(AsyncOnvifGotoPresetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGotoPresetReply>> PrepareAsyncOnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGotoPresetReply>>(PrepareAsyncOnvifGotoPresetRaw(context, request, cq));
    }
    // Onvif设置预置位
    virtual ::grpc::Status OnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest& request, ::GB28181::OnvifSetPresetReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifSetPresetReply>> AsyncOnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifSetPresetReply>>(AsyncOnvifSetPresetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifSetPresetReply>> PrepareAsyncOnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifSetPresetReply>>(PrepareAsyncOnvifSetPresetRaw(context, request, cq));
    }
    // Onvif设备重启
    virtual ::grpc::Status OnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest& request, ::GB28181::OnvifDeviceRebootReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifDeviceRebootReply>> AsyncOnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifDeviceRebootReply>>(AsyncOnvifDeviceRebootRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifDeviceRebootReply>> PrepareAsyncOnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifDeviceRebootReply>>(PrepareAsyncOnvifDeviceRebootRaw(context, request, cq));
    }
    // onvif获取主码流播放url
    virtual ::grpc::Status OnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest& request, ::GB28181::OnvifGetMainUrlReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetMainUrlReply>> AsyncOnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetMainUrlReply>>(AsyncOnvifGetMainUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetMainUrlReply>> PrepareAsyncOnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetMainUrlReply>>(PrepareAsyncOnvifGetMainUrlRaw(context, request, cq));
    }
    // onvif获取子码流播放url
    virtual ::grpc::Status OnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest& request, ::GB28181::OnvifGetSubUrlReply* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetSubUrlReply>> AsyncOnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetSubUrlReply>>(AsyncOnvifGetSubUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetSubUrlReply>> PrepareAsyncOnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetSubUrlReply>>(PrepareAsyncOnvifGetSubUrlRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // 云台控制
      virtual void PtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PtzCommand(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzCommand(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzCommand(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 摄像机拉近
      virtual void PtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest* request, ::GB28181::PtzZoomInReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PtzZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomInReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest* request, ::GB28181::PtzZoomInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest* request, ::GB28181::PtzZoomInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 摄像机拉远
      virtual void PtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest* request, ::GB28181::PtzZoomOutReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PtzZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomOutReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest* request, ::GB28181::PtzZoomOutReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest* request, ::GB28181::PtzZoomOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomOutReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 光圈变大
      virtual void PtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest* request, ::GB28181::PtzIrisBigReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PtzIrisBig(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisBigReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest* request, ::GB28181::PtzIrisBigReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest* request, ::GB28181::PtzIrisBigReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzIrisBig(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisBigReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzIrisBig(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisBigReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 光圈变小
      virtual void PtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest* request, ::GB28181::PtzIrisSmallReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PtzIrisSmall(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisSmallReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest* request, ::GB28181::PtzIrisSmallReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest* request, ::GB28181::PtzIrisSmallReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzIrisSmall(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisSmallReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzIrisSmall(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisSmallReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 聚焦拉远
      virtual void PtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest* request, ::GB28181::PtzFocusOutReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PtzFocusOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusOutReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest* request, ::GB28181::PtzFocusOutReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest* request, ::GB28181::PtzFocusOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzFocusOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusOutReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzFocusOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 聚焦拉近
      virtual void PtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest* request, ::GB28181::PtzFocusInReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PtzFocusIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusInReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest* request, ::GB28181::PtzFocusInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest* request, ::GB28181::PtzFocusInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzFocusIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzFocusIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 聚焦光圈停止
      virtual void PtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest* request, ::GB28181::PtzIFStopReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PtzIFStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIFStopReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest* request, ::GB28181::PtzIFStopReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest* request, ::GB28181::PtzIFStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzIFStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIFStopReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzIFStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIFStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 云台控制停止（拉近拉远也用这个停止）
      virtual void PtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest* request, ::GB28181::PtzStopReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzStopReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest* request, ::GB28181::PtzStopReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest* request, ::GB28181::PtzStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzStopReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取实时视频播放rtsp url
      virtual void GetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest* request, ::GB28181::RealPlayUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRealPlayUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest* request, ::GB28181::RealPlayUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest* request, ::GB28181::RealPlayUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRealPlayUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRealPlayUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取实时视频播放RTMP url（超过60秒没有客户端连接服务器会停止取流）
      virtual void GetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest* request, ::GB28181::GetRTMPUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRTMPUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest* request, ::GB28181::GetRTMPUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest* request, ::GB28181::GetRTMPUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRTMPUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRTMPUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取HLS播放url
      virtual void GetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest* request, ::GB28181::GetHLSUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetHLSUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest* request, ::GB28181::GetHLSUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest* request, ::GB28181::GetHLSUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetHLSUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetHLSUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取实时视频播放rtsp url 内网ip
      virtual void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest* request, ::GB28181::RealPlayUrlInReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlInReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest* request, ::GB28181::RealPlayUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest* request, ::GB28181::RealPlayUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取实时视频播放RTMP url（超过60秒没有客户端连接服务器会停止取流）内网ip
      virtual void GetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest* request, ::GB28181::GetRTMPUrlInReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRTMPUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlInReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest* request, ::GB28181::GetRTMPUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest* request, ::GB28181::GetRTMPUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRTMPUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRTMPUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取HLS播放url 内网ip
      virtual void GetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest* request, ::GB28181::GetHLSUrlInReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetHLSUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlInReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest* request, ::GB28181::GetHLSUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest* request, ::GB28181::GetHLSUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetHLSUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetHLSUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 通过主id和子id停止视频播放
      virtual void StopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest* request, ::GB28181::StopVideoByIdReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopVideoById(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoByIdReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest* request, ::GB28181::StopVideoByIdReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest* request, ::GB28181::StopVideoByIdReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopVideoById(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoByIdReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopVideoById(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoByIdReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 通过ssrc停止视频播放
      virtual void StopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest* request, ::GB28181::StopVideoBySsrcReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopVideoBySsrc(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoBySsrcReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest* request, ::GB28181::StopVideoBySsrcReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest* request, ::GB28181::StopVideoBySsrcReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopVideoBySsrc(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoBySsrcReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopVideoBySsrc(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoBySsrcReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取录像回放的url
      virtual void GetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest* request, ::GB28181::PlayBackUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPlayBackUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayBackUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest* request, ::GB28181::PlayBackUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest* request, ::GB28181::PlayBackUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetPlayBackUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayBackUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetPlayBackUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayBackUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 转到相应预置位
      virtual void PresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PresetGo(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PresetGo(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PresetGo(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 设置相应预置位
      virtual void PresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PresetSet(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PresetSet(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PresetSet(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 删除相应预置位
      virtual void PresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PresetDel(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PresetDel(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PresetDel(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 查询预置位
      virtual void PresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest* request, ::GB28181::PresetQueryReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PresetQuery(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PresetQueryReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest* request, ::GB28181::PresetQueryReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest* request, ::GB28181::PresetQueryReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PresetQuery(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PresetQueryReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PresetQuery(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PresetQueryReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取预置位
      virtual void GetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest* request, ::GB28181::GetPresetReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetPresetReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest* request, ::GB28181::GetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest* request, ::GB28181::GetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 录像查询
      virtual void QueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest* request, ::GB28181::QueryRecordReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void QueryRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::QueryRecordReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void QueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest* request, ::GB28181::QueryRecordReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void QueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest* request, ::GB28181::QueryRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void QueryRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::QueryRecordReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void QueryRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::QueryRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取录像列表
      virtual void GetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest* request, ::GB28181::GetRecordReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRecordReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest* request, ::GB28181::GetRecordReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest* request, ::GB28181::GetRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRecordReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 快放
      virtual void PlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest* request, ::GB28181::PlayFastReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PlayFast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayFastReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest* request, ::GB28181::PlayFastReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest* request, ::GB28181::PlayFastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PlayFast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayFastReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PlayFast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayFastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 慢放
      virtual void PlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest* request, ::GB28181::PlaySlowReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PlaySlow(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlaySlowReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest* request, ::GB28181::PlaySlowReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest* request, ::GB28181::PlaySlowReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PlaySlow(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlaySlowReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PlaySlow(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlaySlowReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 暂停
      virtual void Pause(::grpc::ClientContext* context, const ::GB28181::PauseRequest* request, ::GB28181::PauseReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Pause(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PauseReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Pause(::grpc::ClientContext* context, const ::GB28181::PauseRequest* request, ::GB28181::PauseReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Pause(::grpc::ClientContext* context, const ::GB28181::PauseRequest* request, ::GB28181::PauseReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Pause(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PauseReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Pause(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PauseReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 开始播放
      virtual void Play(::grpc::ClientContext* context, const ::GB28181::PlayRequest* request, ::GB28181::PlayReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Play(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Play(::grpc::ClientContext* context, const ::GB28181::PlayRequest* request, ::GB28181::PlayReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Play(::grpc::ClientContext* context, const ::GB28181::PlayRequest* request, ::GB28181::PlayReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Play(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Play(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 设置当前播放时间点
      virtual void Seek(::grpc::ClientContext* context, const ::GB28181::SeekRequest* request, ::GB28181::SeekReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Seek(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::SeekReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Seek(::grpc::ClientContext* context, const ::GB28181::SeekRequest* request, ::GB28181::SeekReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Seek(::grpc::ClientContext* context, const ::GB28181::SeekRequest* request, ::GB28181::SeekReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void Seek(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::SeekReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void Seek(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::SeekReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 快进
      virtual void GoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest* request, ::GB28181::GoForwardReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GoForward(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoForwardReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest* request, ::GB28181::GoForwardReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest* request, ::GB28181::GoForwardReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GoForward(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoForwardReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GoForward(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoForwardReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 快退
      // 停止录像播放
      virtual void StopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest* request, ::GB28181::StopPlayRecordReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopPlayRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopPlayRecordReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest* request, ::GB28181::StopPlayRecordReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest* request, ::GB28181::StopPlayRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopPlayRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopPlayRecordReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopPlayRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopPlayRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      virtual void GoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest* request, ::GB28181::GoBackReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GoBack(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoBackReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest* request, ::GB28181::GoBackReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest* request, ::GB28181::GoBackReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GoBack(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoBackReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GoBack(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoBackReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 录像下载
      virtual void RecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest* request, ::GB28181::RecordDownloadReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RecordDownload(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RecordDownloadReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest* request, ::GB28181::RecordDownloadReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest* request, ::GB28181::RecordDownloadReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void RecordDownload(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RecordDownloadReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void RecordDownload(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RecordDownloadReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 根据设备id获取设备状态
      virtual void GetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest* request, ::GB28181::GetDeviceStatusReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceStatusReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest* request, ::GB28181::GetDeviceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest* request, ::GB28181::GetDeviceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取所有设备状态
      virtual void GetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest* request, ::GB28181::GetAllDeviceStatusReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetAllDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetAllDeviceStatusReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest* request, ::GB28181::GetAllDeviceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest* request, ::GB28181::GetAllDeviceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetAllDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetAllDeviceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetAllDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetAllDeviceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取设备列表
      virtual void GetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest* request, ::GB28181::GetDeviceListReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDeviceList(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceListReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest* request, ::GB28181::GetDeviceListReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest* request, ::GB28181::GetDeviceListReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDeviceList(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceListReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetDeviceList(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceListReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 设备重启	
      virtual void DeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest* request, ::GB28181::DeviceRebootReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::DeviceRebootReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest* request, ::GB28181::DeviceRebootReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest* request, ::GB28181::DeviceRebootReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::DeviceRebootReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::DeviceRebootReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 开始语音广播
      virtual void StartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest* request, ::GB28181::StartBroadcastReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartBroadcastReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest* request, ::GB28181::StartBroadcastReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest* request, ::GB28181::StartBroadcastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartBroadcastReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartBroadcastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 停止语音广播
      virtual void StopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest* request, ::GB28181::StopBroadcastReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopBroadcastReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest* request, ::GB28181::StopBroadcastReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest* request, ::GB28181::StopBroadcastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopBroadcastReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopBroadcastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 开始语音对讲
      virtual void StartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest* request, ::GB28181::StartTalkReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartTalkReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest* request, ::GB28181::StartTalkReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest* request, ::GB28181::StartTalkReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StartTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartTalkReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StartTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartTalkReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 停止语音对讲
      virtual void StopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest* request, ::GB28181::StopTalkReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopTalkReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest* request, ::GB28181::StopTalkReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest* request, ::GB28181::StopTalkReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void StopTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopTalkReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void StopTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopTalkReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // 获取节点状态
      virtual void ServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest* request, ::GB28181::ServiceStatusReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ServiceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ServiceStatusReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest* request, ::GB28181::ServiceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest* request, ::GB28181::ServiceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ServiceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ServiceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ServiceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ServiceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif云台转动
      virtual void OnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest* request, ::GB28181::OnvifPtzMoveReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifPtzMove(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzMoveReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest* request, ::GB28181::OnvifPtzMoveReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest* request, ::GB28181::OnvifPtzMoveReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifPtzMove(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzMoveReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifPtzMove(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzMoveReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif停止云台转动
      virtual void OnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest* request, ::GB28181::OnvifPtzStopReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifPtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzStopReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest* request, ::GB28181::OnvifPtzStopReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest* request, ::GB28181::OnvifPtzStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifPtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzStopReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifPtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif变倍拉近
      virtual void OnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest* request, ::GB28181::OnvifZoomInReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomInReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest* request, ::GB28181::OnvifZoomInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest* request, ::GB28181::OnvifZoomInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomInReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif变倍拉远
      virtual void OnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest* request, ::GB28181::OnvifZoomOutReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomOutReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest* request, ::GB28181::OnvifZoomOutReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest* request, ::GB28181::OnvifZoomOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomOutReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif停止变倍
      virtual void OnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest* request, ::GB28181::OnvifZoomStopReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifZoomStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomStopReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest* request, ::GB28181::OnvifZoomStopReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest* request, ::GB28181::OnvifZoomStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifZoomStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomStopReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifZoomStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif聚焦+
      virtual void OnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest* request, ::GB28181::OnvifFocusNearReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifFocusNear(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusNearReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest* request, ::GB28181::OnvifFocusNearReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest* request, ::GB28181::OnvifFocusNearReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifFocusNear(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusNearReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifFocusNear(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusNearReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif聚焦-
      virtual void OnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest* request, ::GB28181::OnvifFocusFarReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifFocusFar(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusFarReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest* request, ::GB28181::OnvifFocusFarReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest* request, ::GB28181::OnvifFocusFarReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifFocusFar(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusFarReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifFocusFar(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusFarReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif停止聚焦
      virtual void OnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest* request, ::GB28181::OnvifFocusStopReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifFocusStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusStopReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest* request, ::GB28181::OnvifFocusStopReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest* request, ::GB28181::OnvifFocusStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifFocusStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusStopReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifFocusStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif云台3D控制
      virtual void OnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest* request, ::GB28181::OnvifPtz3DReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifPtz3D(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtz3DReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest* request, ::GB28181::OnvifPtz3DReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest* request, ::GB28181::OnvifPtz3DReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifPtz3D(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtz3DReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifPtz3D(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtz3DReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif获取预置位
      virtual void OnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest* request, ::GB28181::OnvifGetPresetReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifGetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetPresetReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest* request, ::GB28181::OnvifGetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest* request, ::GB28181::OnvifGetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifGetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifGetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif转到预置位
      virtual void OnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest* request, ::GB28181::OnvifGotoPresetReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifGotoPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGotoPresetReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest* request, ::GB28181::OnvifGotoPresetReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest* request, ::GB28181::OnvifGotoPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifGotoPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGotoPresetReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifGotoPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGotoPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif设置预置位
      virtual void OnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest* request, ::GB28181::OnvifSetPresetReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifSetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifSetPresetReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest* request, ::GB28181::OnvifSetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest* request, ::GB28181::OnvifSetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifSetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifSetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifSetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifSetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Onvif设备重启
      virtual void OnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest* request, ::GB28181::OnvifDeviceRebootReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifDeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifDeviceRebootReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest* request, ::GB28181::OnvifDeviceRebootReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest* request, ::GB28181::OnvifDeviceRebootReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifDeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifDeviceRebootReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifDeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifDeviceRebootReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // onvif获取主码流播放url
      virtual void OnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest* request, ::GB28181::OnvifGetMainUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifGetMainUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetMainUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest* request, ::GB28181::OnvifGetMainUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest* request, ::GB28181::OnvifGetMainUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifGetMainUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetMainUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifGetMainUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetMainUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // onvif获取子码流播放url
      virtual void OnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest* request, ::GB28181::OnvifGetSubUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      virtual void OnvifGetSubUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetSubUrlReply* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest* request, ::GB28181::OnvifGetSubUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest* request, ::GB28181::OnvifGetSubUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void OnvifGetSubUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetSubUrlReply* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void OnvifGetSubUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetSubUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>* AsyncPtzCommandRaw(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>* PrepareAsyncPtzCommandRaw(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomInReply>* AsyncPtzZoomInRaw(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomInReply>* PrepareAsyncPtzZoomInRaw(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomOutReply>* AsyncPtzZoomOutRaw(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzZoomOutReply>* PrepareAsyncPtzZoomOutRaw(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisBigReply>* AsyncPtzIrisBigRaw(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisBigReply>* PrepareAsyncPtzIrisBigRaw(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisSmallReply>* AsyncPtzIrisSmallRaw(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIrisSmallReply>* PrepareAsyncPtzIrisSmallRaw(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusOutReply>* AsyncPtzFocusOutRaw(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusOutReply>* PrepareAsyncPtzFocusOutRaw(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusInReply>* AsyncPtzFocusInRaw(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzFocusInReply>* PrepareAsyncPtzFocusInRaw(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIFStopReply>* AsyncPtzIFStopRaw(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzIFStopReply>* PrepareAsyncPtzIFStopRaw(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzStopReply>* AsyncPtzStopRaw(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PtzStopReply>* PrepareAsyncPtzStopRaw(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlReply>* AsyncGetRealPlayUrlRaw(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlReply>* PrepareAsyncGetRealPlayUrlRaw(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlReply>* AsyncGetRTMPUrlRaw(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlReply>* PrepareAsyncGetRTMPUrlRaw(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlReply>* AsyncGetHLSUrlRaw(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlReply>* PrepareAsyncGetHLSUrlRaw(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlInReply>* AsyncGetRealPlayUrlInRaw(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RealPlayUrlInReply>* PrepareAsyncGetRealPlayUrlInRaw(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlInReply>* AsyncGetRTMPUrlInRaw(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRTMPUrlInReply>* PrepareAsyncGetRTMPUrlInRaw(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlInReply>* AsyncGetHLSUrlInRaw(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetHLSUrlInReply>* PrepareAsyncGetHLSUrlInRaw(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoByIdReply>* AsyncStopVideoByIdRaw(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoByIdReply>* PrepareAsyncStopVideoByIdRaw(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoBySsrcReply>* AsyncStopVideoBySsrcRaw(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopVideoBySsrcReply>* PrepareAsyncStopVideoBySsrcRaw(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayBackUrlReply>* AsyncGetPlayBackUrlRaw(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayBackUrlReply>* PrepareAsyncGetPlayBackUrlRaw(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>* AsyncPresetGoRaw(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>* PrepareAsyncPresetGoRaw(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>* AsyncPresetSetRaw(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>* PrepareAsyncPresetSetRaw(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>* AsyncPresetDelRaw(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ControlReply>* PrepareAsyncPresetDelRaw(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PresetQueryReply>* AsyncPresetQueryRaw(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PresetQueryReply>* PrepareAsyncPresetQueryRaw(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetPresetReply>* AsyncGetPresetRaw(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetPresetReply>* PrepareAsyncGetPresetRaw(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::QueryRecordReply>* AsyncQueryRecordRaw(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::QueryRecordReply>* PrepareAsyncQueryRecordRaw(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRecordReply>* AsyncGetRecordRaw(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetRecordReply>* PrepareAsyncGetRecordRaw(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayFastReply>* AsyncPlayFastRaw(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayFastReply>* PrepareAsyncPlayFastRaw(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlaySlowReply>* AsyncPlaySlowRaw(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlaySlowReply>* PrepareAsyncPlaySlowRaw(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PauseReply>* AsyncPauseRaw(::grpc::ClientContext* context, const ::GB28181::PauseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PauseReply>* PrepareAsyncPauseRaw(::grpc::ClientContext* context, const ::GB28181::PauseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayReply>* AsyncPlayRaw(::grpc::ClientContext* context, const ::GB28181::PlayRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::PlayReply>* PrepareAsyncPlayRaw(::grpc::ClientContext* context, const ::GB28181::PlayRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::SeekReply>* AsyncSeekRaw(::grpc::ClientContext* context, const ::GB28181::SeekRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::SeekReply>* PrepareAsyncSeekRaw(::grpc::ClientContext* context, const ::GB28181::SeekRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoForwardReply>* AsyncGoForwardRaw(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoForwardReply>* PrepareAsyncGoForwardRaw(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopPlayRecordReply>* AsyncStopPlayRecordRaw(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopPlayRecordReply>* PrepareAsyncStopPlayRecordRaw(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoBackReply>* AsyncGoBackRaw(::grpc::ClientContext* context, const ::GB28181::GoBackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GoBackReply>* PrepareAsyncGoBackRaw(::grpc::ClientContext* context, const ::GB28181::GoBackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RecordDownloadReply>* AsyncRecordDownloadRaw(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::RecordDownloadReply>* PrepareAsyncRecordDownloadRaw(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceStatusReply>* AsyncGetDeviceStatusRaw(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceStatusReply>* PrepareAsyncGetDeviceStatusRaw(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetAllDeviceStatusReply>* AsyncGetAllDeviceStatusRaw(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetAllDeviceStatusReply>* PrepareAsyncGetAllDeviceStatusRaw(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceListReply>* AsyncGetDeviceListRaw(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::GetDeviceListReply>* PrepareAsyncGetDeviceListRaw(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::DeviceRebootReply>* AsyncDeviceRebootRaw(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::DeviceRebootReply>* PrepareAsyncDeviceRebootRaw(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartBroadcastReply>* AsyncStartBroadcastRaw(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartBroadcastReply>* PrepareAsyncStartBroadcastRaw(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopBroadcastReply>* AsyncStopBroadcastRaw(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopBroadcastReply>* PrepareAsyncStopBroadcastRaw(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartTalkReply>* AsyncStartTalkRaw(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StartTalkReply>* PrepareAsyncStartTalkRaw(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopTalkReply>* AsyncStopTalkRaw(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::StopTalkReply>* PrepareAsyncStopTalkRaw(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ServiceStatusReply>* AsyncServiceStatusRaw(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::ServiceStatusReply>* PrepareAsyncServiceStatusRaw(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzMoveReply>* AsyncOnvifPtzMoveRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzMoveReply>* PrepareAsyncOnvifPtzMoveRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzStopReply>* AsyncOnvifPtzStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtzStopReply>* PrepareAsyncOnvifPtzStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomInReply>* AsyncOnvifZoomInRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomInReply>* PrepareAsyncOnvifZoomInRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomOutReply>* AsyncOnvifZoomOutRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomOutReply>* PrepareAsyncOnvifZoomOutRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomStopReply>* AsyncOnvifZoomStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifZoomStopReply>* PrepareAsyncOnvifZoomStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusNearReply>* AsyncOnvifFocusNearRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusNearReply>* PrepareAsyncOnvifFocusNearRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusFarReply>* AsyncOnvifFocusFarRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusFarReply>* PrepareAsyncOnvifFocusFarRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusStopReply>* AsyncOnvifFocusStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifFocusStopReply>* PrepareAsyncOnvifFocusStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtz3DReply>* AsyncOnvifPtz3DRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifPtz3DReply>* PrepareAsyncOnvifPtz3DRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetPresetReply>* AsyncOnvifGetPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetPresetReply>* PrepareAsyncOnvifGetPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGotoPresetReply>* AsyncOnvifGotoPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGotoPresetReply>* PrepareAsyncOnvifGotoPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifSetPresetReply>* AsyncOnvifSetPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifSetPresetReply>* PrepareAsyncOnvifSetPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifDeviceRebootReply>* AsyncOnvifDeviceRebootRaw(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifDeviceRebootReply>* PrepareAsyncOnvifDeviceRebootRaw(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetMainUrlReply>* AsyncOnvifGetMainUrlRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetMainUrlReply>* PrepareAsyncOnvifGetMainUrlRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetSubUrlReply>* AsyncOnvifGetSubUrlRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::GB28181::OnvifGetSubUrlReply>* PrepareAsyncOnvifGetSubUrlRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status PtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest& request, ::GB28181::ControlReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>> AsyncPtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>>(AsyncPtzCommandRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>> PrepareAsyncPtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>>(PrepareAsyncPtzCommandRaw(context, request, cq));
    }
    ::grpc::Status PtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest& request, ::GB28181::PtzZoomInReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomInReply>> AsyncPtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomInReply>>(AsyncPtzZoomInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomInReply>> PrepareAsyncPtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomInReply>>(PrepareAsyncPtzZoomInRaw(context, request, cq));
    }
    ::grpc::Status PtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest& request, ::GB28181::PtzZoomOutReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomOutReply>> AsyncPtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomOutReply>>(AsyncPtzZoomOutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomOutReply>> PrepareAsyncPtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomOutReply>>(PrepareAsyncPtzZoomOutRaw(context, request, cq));
    }
    ::grpc::Status PtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest& request, ::GB28181::PtzIrisBigReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisBigReply>> AsyncPtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisBigReply>>(AsyncPtzIrisBigRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisBigReply>> PrepareAsyncPtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisBigReply>>(PrepareAsyncPtzIrisBigRaw(context, request, cq));
    }
    ::grpc::Status PtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest& request, ::GB28181::PtzIrisSmallReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisSmallReply>> AsyncPtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisSmallReply>>(AsyncPtzIrisSmallRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisSmallReply>> PrepareAsyncPtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisSmallReply>>(PrepareAsyncPtzIrisSmallRaw(context, request, cq));
    }
    ::grpc::Status PtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest& request, ::GB28181::PtzFocusOutReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusOutReply>> AsyncPtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusOutReply>>(AsyncPtzFocusOutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusOutReply>> PrepareAsyncPtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusOutReply>>(PrepareAsyncPtzFocusOutRaw(context, request, cq));
    }
    ::grpc::Status PtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest& request, ::GB28181::PtzFocusInReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusInReply>> AsyncPtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusInReply>>(AsyncPtzFocusInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusInReply>> PrepareAsyncPtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusInReply>>(PrepareAsyncPtzFocusInRaw(context, request, cq));
    }
    ::grpc::Status PtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest& request, ::GB28181::PtzIFStopReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIFStopReply>> AsyncPtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIFStopReply>>(AsyncPtzIFStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIFStopReply>> PrepareAsyncPtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIFStopReply>>(PrepareAsyncPtzIFStopRaw(context, request, cq));
    }
    ::grpc::Status PtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest& request, ::GB28181::PtzStopReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzStopReply>> AsyncPtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzStopReply>>(AsyncPtzStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzStopReply>> PrepareAsyncPtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PtzStopReply>>(PrepareAsyncPtzStopRaw(context, request, cq));
    }
    ::grpc::Status GetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest& request, ::GB28181::RealPlayUrlReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlReply>> AsyncGetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlReply>>(AsyncGetRealPlayUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlReply>> PrepareAsyncGetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlReply>>(PrepareAsyncGetRealPlayUrlRaw(context, request, cq));
    }
    ::grpc::Status GetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest& request, ::GB28181::GetRTMPUrlReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlReply>> AsyncGetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlReply>>(AsyncGetRTMPUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlReply>> PrepareAsyncGetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlReply>>(PrepareAsyncGetRTMPUrlRaw(context, request, cq));
    }
    ::grpc::Status GetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest& request, ::GB28181::GetHLSUrlReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlReply>> AsyncGetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlReply>>(AsyncGetHLSUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlReply>> PrepareAsyncGetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlReply>>(PrepareAsyncGetHLSUrlRaw(context, request, cq));
    }
    ::grpc::Status GetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest& request, ::GB28181::RealPlayUrlInReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlInReply>> AsyncGetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlInReply>>(AsyncGetRealPlayUrlInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlInReply>> PrepareAsyncGetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlInReply>>(PrepareAsyncGetRealPlayUrlInRaw(context, request, cq));
    }
    ::grpc::Status GetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest& request, ::GB28181::GetRTMPUrlInReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlInReply>> AsyncGetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlInReply>>(AsyncGetRTMPUrlInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlInReply>> PrepareAsyncGetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlInReply>>(PrepareAsyncGetRTMPUrlInRaw(context, request, cq));
    }
    ::grpc::Status GetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest& request, ::GB28181::GetHLSUrlInReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlInReply>> AsyncGetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlInReply>>(AsyncGetHLSUrlInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlInReply>> PrepareAsyncGetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlInReply>>(PrepareAsyncGetHLSUrlInRaw(context, request, cq));
    }
    ::grpc::Status StopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest& request, ::GB28181::StopVideoByIdReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoByIdReply>> AsyncStopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoByIdReply>>(AsyncStopVideoByIdRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoByIdReply>> PrepareAsyncStopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoByIdReply>>(PrepareAsyncStopVideoByIdRaw(context, request, cq));
    }
    ::grpc::Status StopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest& request, ::GB28181::StopVideoBySsrcReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoBySsrcReply>> AsyncStopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoBySsrcReply>>(AsyncStopVideoBySsrcRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoBySsrcReply>> PrepareAsyncStopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoBySsrcReply>>(PrepareAsyncStopVideoBySsrcRaw(context, request, cq));
    }
    ::grpc::Status GetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest& request, ::GB28181::PlayBackUrlReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayBackUrlReply>> AsyncGetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayBackUrlReply>>(AsyncGetPlayBackUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayBackUrlReply>> PrepareAsyncGetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayBackUrlReply>>(PrepareAsyncGetPlayBackUrlRaw(context, request, cq));
    }
    ::grpc::Status PresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest& request, ::GB28181::ControlReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>> AsyncPresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>>(AsyncPresetGoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>> PrepareAsyncPresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>>(PrepareAsyncPresetGoRaw(context, request, cq));
    }
    ::grpc::Status PresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest& request, ::GB28181::ControlReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>> AsyncPresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>>(AsyncPresetSetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>> PrepareAsyncPresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>>(PrepareAsyncPresetSetRaw(context, request, cq));
    }
    ::grpc::Status PresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest& request, ::GB28181::ControlReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>> AsyncPresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>>(AsyncPresetDelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>> PrepareAsyncPresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>>(PrepareAsyncPresetDelRaw(context, request, cq));
    }
    ::grpc::Status PresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest& request, ::GB28181::PresetQueryReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PresetQueryReply>> AsyncPresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PresetQueryReply>>(AsyncPresetQueryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PresetQueryReply>> PrepareAsyncPresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PresetQueryReply>>(PrepareAsyncPresetQueryRaw(context, request, cq));
    }
    ::grpc::Status GetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest& request, ::GB28181::GetPresetReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetPresetReply>> AsyncGetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetPresetReply>>(AsyncGetPresetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetPresetReply>> PrepareAsyncGetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetPresetReply>>(PrepareAsyncGetPresetRaw(context, request, cq));
    }
    ::grpc::Status QueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest& request, ::GB28181::QueryRecordReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::QueryRecordReply>> AsyncQueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::QueryRecordReply>>(AsyncQueryRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::QueryRecordReply>> PrepareAsyncQueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::QueryRecordReply>>(PrepareAsyncQueryRecordRaw(context, request, cq));
    }
    ::grpc::Status GetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest& request, ::GB28181::GetRecordReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRecordReply>> AsyncGetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRecordReply>>(AsyncGetRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRecordReply>> PrepareAsyncGetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetRecordReply>>(PrepareAsyncGetRecordRaw(context, request, cq));
    }
    ::grpc::Status PlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest& request, ::GB28181::PlayFastReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayFastReply>> AsyncPlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayFastReply>>(AsyncPlayFastRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayFastReply>> PrepareAsyncPlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayFastReply>>(PrepareAsyncPlayFastRaw(context, request, cq));
    }
    ::grpc::Status PlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest& request, ::GB28181::PlaySlowReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlaySlowReply>> AsyncPlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlaySlowReply>>(AsyncPlaySlowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlaySlowReply>> PrepareAsyncPlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlaySlowReply>>(PrepareAsyncPlaySlowRaw(context, request, cq));
    }
    ::grpc::Status Pause(::grpc::ClientContext* context, const ::GB28181::PauseRequest& request, ::GB28181::PauseReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PauseReply>> AsyncPause(::grpc::ClientContext* context, const ::GB28181::PauseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PauseReply>>(AsyncPauseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PauseReply>> PrepareAsyncPause(::grpc::ClientContext* context, const ::GB28181::PauseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PauseReply>>(PrepareAsyncPauseRaw(context, request, cq));
    }
    ::grpc::Status Play(::grpc::ClientContext* context, const ::GB28181::PlayRequest& request, ::GB28181::PlayReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayReply>> AsyncPlay(::grpc::ClientContext* context, const ::GB28181::PlayRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayReply>>(AsyncPlayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayReply>> PrepareAsyncPlay(::grpc::ClientContext* context, const ::GB28181::PlayRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::PlayReply>>(PrepareAsyncPlayRaw(context, request, cq));
    }
    ::grpc::Status Seek(::grpc::ClientContext* context, const ::GB28181::SeekRequest& request, ::GB28181::SeekReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::SeekReply>> AsyncSeek(::grpc::ClientContext* context, const ::GB28181::SeekRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::SeekReply>>(AsyncSeekRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::SeekReply>> PrepareAsyncSeek(::grpc::ClientContext* context, const ::GB28181::SeekRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::SeekReply>>(PrepareAsyncSeekRaw(context, request, cq));
    }
    ::grpc::Status GoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest& request, ::GB28181::GoForwardReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GoForwardReply>> AsyncGoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GoForwardReply>>(AsyncGoForwardRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GoForwardReply>> PrepareAsyncGoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GoForwardReply>>(PrepareAsyncGoForwardRaw(context, request, cq));
    }
    ::grpc::Status StopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest& request, ::GB28181::StopPlayRecordReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopPlayRecordReply>> AsyncStopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopPlayRecordReply>>(AsyncStopPlayRecordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopPlayRecordReply>> PrepareAsyncStopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopPlayRecordReply>>(PrepareAsyncStopPlayRecordRaw(context, request, cq));
    }
    ::grpc::Status GoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest& request, ::GB28181::GoBackReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GoBackReply>> AsyncGoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GoBackReply>>(AsyncGoBackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GoBackReply>> PrepareAsyncGoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GoBackReply>>(PrepareAsyncGoBackRaw(context, request, cq));
    }
    ::grpc::Status RecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest& request, ::GB28181::RecordDownloadReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RecordDownloadReply>> AsyncRecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RecordDownloadReply>>(AsyncRecordDownloadRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RecordDownloadReply>> PrepareAsyncRecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::RecordDownloadReply>>(PrepareAsyncRecordDownloadRaw(context, request, cq));
    }
    ::grpc::Status GetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest& request, ::GB28181::GetDeviceStatusReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceStatusReply>> AsyncGetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceStatusReply>>(AsyncGetDeviceStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceStatusReply>> PrepareAsyncGetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceStatusReply>>(PrepareAsyncGetDeviceStatusRaw(context, request, cq));
    }
    ::grpc::Status GetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest& request, ::GB28181::GetAllDeviceStatusReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetAllDeviceStatusReply>> AsyncGetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetAllDeviceStatusReply>>(AsyncGetAllDeviceStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetAllDeviceStatusReply>> PrepareAsyncGetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetAllDeviceStatusReply>>(PrepareAsyncGetAllDeviceStatusRaw(context, request, cq));
    }
    ::grpc::Status GetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest& request, ::GB28181::GetDeviceListReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceListReply>> AsyncGetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceListReply>>(AsyncGetDeviceListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceListReply>> PrepareAsyncGetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceListReply>>(PrepareAsyncGetDeviceListRaw(context, request, cq));
    }
    ::grpc::Status DeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest& request, ::GB28181::DeviceRebootReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::DeviceRebootReply>> AsyncDeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::DeviceRebootReply>>(AsyncDeviceRebootRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::DeviceRebootReply>> PrepareAsyncDeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::DeviceRebootReply>>(PrepareAsyncDeviceRebootRaw(context, request, cq));
    }
    ::grpc::Status StartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest& request, ::GB28181::StartBroadcastReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StartBroadcastReply>> AsyncStartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StartBroadcastReply>>(AsyncStartBroadcastRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StartBroadcastReply>> PrepareAsyncStartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StartBroadcastReply>>(PrepareAsyncStartBroadcastRaw(context, request, cq));
    }
    ::grpc::Status StopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest& request, ::GB28181::StopBroadcastReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopBroadcastReply>> AsyncStopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopBroadcastReply>>(AsyncStopBroadcastRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopBroadcastReply>> PrepareAsyncStopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopBroadcastReply>>(PrepareAsyncStopBroadcastRaw(context, request, cq));
    }
    ::grpc::Status StartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest& request, ::GB28181::StartTalkReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StartTalkReply>> AsyncStartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StartTalkReply>>(AsyncStartTalkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StartTalkReply>> PrepareAsyncStartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StartTalkReply>>(PrepareAsyncStartTalkRaw(context, request, cq));
    }
    ::grpc::Status StopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest& request, ::GB28181::StopTalkReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopTalkReply>> AsyncStopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopTalkReply>>(AsyncStopTalkRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopTalkReply>> PrepareAsyncStopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::StopTalkReply>>(PrepareAsyncStopTalkRaw(context, request, cq));
    }
    ::grpc::Status ServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest& request, ::GB28181::ServiceStatusReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ServiceStatusReply>> AsyncServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ServiceStatusReply>>(AsyncServiceStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ServiceStatusReply>> PrepareAsyncServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::ServiceStatusReply>>(PrepareAsyncServiceStatusRaw(context, request, cq));
    }
    ::grpc::Status OnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest& request, ::GB28181::OnvifPtzMoveReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzMoveReply>> AsyncOnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzMoveReply>>(AsyncOnvifPtzMoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzMoveReply>> PrepareAsyncOnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzMoveReply>>(PrepareAsyncOnvifPtzMoveRaw(context, request, cq));
    }
    ::grpc::Status OnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest& request, ::GB28181::OnvifPtzStopReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzStopReply>> AsyncOnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzStopReply>>(AsyncOnvifPtzStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzStopReply>> PrepareAsyncOnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzStopReply>>(PrepareAsyncOnvifPtzStopRaw(context, request, cq));
    }
    ::grpc::Status OnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest& request, ::GB28181::OnvifZoomInReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomInReply>> AsyncOnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomInReply>>(AsyncOnvifZoomInRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomInReply>> PrepareAsyncOnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomInReply>>(PrepareAsyncOnvifZoomInRaw(context, request, cq));
    }
    ::grpc::Status OnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest& request, ::GB28181::OnvifZoomOutReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomOutReply>> AsyncOnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomOutReply>>(AsyncOnvifZoomOutRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomOutReply>> PrepareAsyncOnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomOutReply>>(PrepareAsyncOnvifZoomOutRaw(context, request, cq));
    }
    ::grpc::Status OnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest& request, ::GB28181::OnvifZoomStopReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomStopReply>> AsyncOnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomStopReply>>(AsyncOnvifZoomStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomStopReply>> PrepareAsyncOnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomStopReply>>(PrepareAsyncOnvifZoomStopRaw(context, request, cq));
    }
    ::grpc::Status OnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest& request, ::GB28181::OnvifFocusNearReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusNearReply>> AsyncOnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusNearReply>>(AsyncOnvifFocusNearRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusNearReply>> PrepareAsyncOnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusNearReply>>(PrepareAsyncOnvifFocusNearRaw(context, request, cq));
    }
    ::grpc::Status OnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest& request, ::GB28181::OnvifFocusFarReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusFarReply>> AsyncOnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusFarReply>>(AsyncOnvifFocusFarRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusFarReply>> PrepareAsyncOnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusFarReply>>(PrepareAsyncOnvifFocusFarRaw(context, request, cq));
    }
    ::grpc::Status OnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest& request, ::GB28181::OnvifFocusStopReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusStopReply>> AsyncOnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusStopReply>>(AsyncOnvifFocusStopRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusStopReply>> PrepareAsyncOnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusStopReply>>(PrepareAsyncOnvifFocusStopRaw(context, request, cq));
    }
    ::grpc::Status OnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest& request, ::GB28181::OnvifPtz3DReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtz3DReply>> AsyncOnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtz3DReply>>(AsyncOnvifPtz3DRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtz3DReply>> PrepareAsyncOnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtz3DReply>>(PrepareAsyncOnvifPtz3DRaw(context, request, cq));
    }
    ::grpc::Status OnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest& request, ::GB28181::OnvifGetPresetReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetPresetReply>> AsyncOnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetPresetReply>>(AsyncOnvifGetPresetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetPresetReply>> PrepareAsyncOnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetPresetReply>>(PrepareAsyncOnvifGetPresetRaw(context, request, cq));
    }
    ::grpc::Status OnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest& request, ::GB28181::OnvifGotoPresetReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGotoPresetReply>> AsyncOnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGotoPresetReply>>(AsyncOnvifGotoPresetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGotoPresetReply>> PrepareAsyncOnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGotoPresetReply>>(PrepareAsyncOnvifGotoPresetRaw(context, request, cq));
    }
    ::grpc::Status OnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest& request, ::GB28181::OnvifSetPresetReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifSetPresetReply>> AsyncOnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifSetPresetReply>>(AsyncOnvifSetPresetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifSetPresetReply>> PrepareAsyncOnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifSetPresetReply>>(PrepareAsyncOnvifSetPresetRaw(context, request, cq));
    }
    ::grpc::Status OnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest& request, ::GB28181::OnvifDeviceRebootReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifDeviceRebootReply>> AsyncOnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifDeviceRebootReply>>(AsyncOnvifDeviceRebootRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifDeviceRebootReply>> PrepareAsyncOnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifDeviceRebootReply>>(PrepareAsyncOnvifDeviceRebootRaw(context, request, cq));
    }
    ::grpc::Status OnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest& request, ::GB28181::OnvifGetMainUrlReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetMainUrlReply>> AsyncOnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetMainUrlReply>>(AsyncOnvifGetMainUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetMainUrlReply>> PrepareAsyncOnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetMainUrlReply>>(PrepareAsyncOnvifGetMainUrlRaw(context, request, cq));
    }
    ::grpc::Status OnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest& request, ::GB28181::OnvifGetSubUrlReply* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetSubUrlReply>> AsyncOnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetSubUrlReply>>(AsyncOnvifGetSubUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetSubUrlReply>> PrepareAsyncOnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetSubUrlReply>>(PrepareAsyncOnvifGetSubUrlRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void PtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) override;
      void PtzCommand(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzCommand(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzCommand(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzCommand(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest* request, ::GB28181::PtzZoomInReply* response, std::function<void(::grpc::Status)>) override;
      void PtzZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomInReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest* request, ::GB28181::PtzZoomInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzZoomIn(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest* request, ::GB28181::PtzZoomInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest* request, ::GB28181::PtzZoomOutReply* response, std::function<void(::grpc::Status)>) override;
      void PtzZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomOutReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest* request, ::GB28181::PtzZoomOutReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzZoomOut(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest* request, ::GB28181::PtzZoomOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomOutReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzZoomOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest* request, ::GB28181::PtzIrisBigReply* response, std::function<void(::grpc::Status)>) override;
      void PtzIrisBig(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisBigReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest* request, ::GB28181::PtzIrisBigReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzIrisBig(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest* request, ::GB28181::PtzIrisBigReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzIrisBig(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisBigReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzIrisBig(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisBigReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest* request, ::GB28181::PtzIrisSmallReply* response, std::function<void(::grpc::Status)>) override;
      void PtzIrisSmall(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisSmallReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest* request, ::GB28181::PtzIrisSmallReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzIrisSmall(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest* request, ::GB28181::PtzIrisSmallReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzIrisSmall(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisSmallReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzIrisSmall(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIrisSmallReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest* request, ::GB28181::PtzFocusOutReply* response, std::function<void(::grpc::Status)>) override;
      void PtzFocusOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusOutReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest* request, ::GB28181::PtzFocusOutReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzFocusOut(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest* request, ::GB28181::PtzFocusOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzFocusOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusOutReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzFocusOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest* request, ::GB28181::PtzFocusInReply* response, std::function<void(::grpc::Status)>) override;
      void PtzFocusIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusInReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest* request, ::GB28181::PtzFocusInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzFocusIn(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest* request, ::GB28181::PtzFocusInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzFocusIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzFocusIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzFocusInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest* request, ::GB28181::PtzIFStopReply* response, std::function<void(::grpc::Status)>) override;
      void PtzIFStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIFStopReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest* request, ::GB28181::PtzIFStopReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzIFStop(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest* request, ::GB28181::PtzIFStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzIFStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIFStopReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzIFStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzIFStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest* request, ::GB28181::PtzStopReply* response, std::function<void(::grpc::Status)>) override;
      void PtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzStopReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest* request, ::GB28181::PtzStopReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzStop(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest* request, ::GB28181::PtzStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzStopReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PtzStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest* request, ::GB28181::RealPlayUrlReply* response, std::function<void(::grpc::Status)>) override;
      void GetRealPlayUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest* request, ::GB28181::RealPlayUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRealPlayUrl(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest* request, ::GB28181::RealPlayUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRealPlayUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRealPlayUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest* request, ::GB28181::GetRTMPUrlReply* response, std::function<void(::grpc::Status)>) override;
      void GetRTMPUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest* request, ::GB28181::GetRTMPUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRTMPUrl(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest* request, ::GB28181::GetRTMPUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRTMPUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRTMPUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest* request, ::GB28181::GetHLSUrlReply* response, std::function<void(::grpc::Status)>) override;
      void GetHLSUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest* request, ::GB28181::GetHLSUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetHLSUrl(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest* request, ::GB28181::GetHLSUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetHLSUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetHLSUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest* request, ::GB28181::RealPlayUrlInReply* response, std::function<void(::grpc::Status)>) override;
      void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlInReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest* request, ::GB28181::RealPlayUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest* request, ::GB28181::RealPlayUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRealPlayUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RealPlayUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest* request, ::GB28181::GetRTMPUrlInReply* response, std::function<void(::grpc::Status)>) override;
      void GetRTMPUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlInReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest* request, ::GB28181::GetRTMPUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRTMPUrlIn(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest* request, ::GB28181::GetRTMPUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRTMPUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRTMPUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRTMPUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest* request, ::GB28181::GetHLSUrlInReply* response, std::function<void(::grpc::Status)>) override;
      void GetHLSUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlInReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest* request, ::GB28181::GetHLSUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetHLSUrlIn(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest* request, ::GB28181::GetHLSUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetHLSUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetHLSUrlIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetHLSUrlInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest* request, ::GB28181::StopVideoByIdReply* response, std::function<void(::grpc::Status)>) override;
      void StopVideoById(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoByIdReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest* request, ::GB28181::StopVideoByIdReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopVideoById(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest* request, ::GB28181::StopVideoByIdReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopVideoById(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoByIdReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopVideoById(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoByIdReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest* request, ::GB28181::StopVideoBySsrcReply* response, std::function<void(::grpc::Status)>) override;
      void StopVideoBySsrc(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoBySsrcReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest* request, ::GB28181::StopVideoBySsrcReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopVideoBySsrc(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest* request, ::GB28181::StopVideoBySsrcReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopVideoBySsrc(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoBySsrcReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopVideoBySsrc(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopVideoBySsrcReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest* request, ::GB28181::PlayBackUrlReply* response, std::function<void(::grpc::Status)>) override;
      void GetPlayBackUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayBackUrlReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest* request, ::GB28181::PlayBackUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetPlayBackUrl(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest* request, ::GB28181::PlayBackUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetPlayBackUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayBackUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetPlayBackUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayBackUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) override;
      void PresetGo(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PresetGo(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PresetGo(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PresetGo(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) override;
      void PresetSet(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PresetSet(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PresetSet(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PresetSet(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) override;
      void PresetDel(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PresetDel(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PresetDel(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PresetDel(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ControlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest* request, ::GB28181::PresetQueryReply* response, std::function<void(::grpc::Status)>) override;
      void PresetQuery(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PresetQueryReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest* request, ::GB28181::PresetQueryReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PresetQuery(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest* request, ::GB28181::PresetQueryReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PresetQuery(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PresetQueryReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PresetQuery(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PresetQueryReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest* request, ::GB28181::GetPresetReply* response, std::function<void(::grpc::Status)>) override;
      void GetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetPresetReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest* request, ::GB28181::GetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetPreset(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest* request, ::GB28181::GetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void QueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest* request, ::GB28181::QueryRecordReply* response, std::function<void(::grpc::Status)>) override;
      void QueryRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::QueryRecordReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void QueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest* request, ::GB28181::QueryRecordReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void QueryRecord(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest* request, ::GB28181::QueryRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void QueryRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::QueryRecordReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void QueryRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::QueryRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest* request, ::GB28181::GetRecordReply* response, std::function<void(::grpc::Status)>) override;
      void GetRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRecordReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest* request, ::GB28181::GetRecordReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRecord(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest* request, ::GB28181::GetRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRecordReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest* request, ::GB28181::PlayFastReply* response, std::function<void(::grpc::Status)>) override;
      void PlayFast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayFastReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest* request, ::GB28181::PlayFastReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PlayFast(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest* request, ::GB28181::PlayFastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PlayFast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayFastReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PlayFast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayFastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest* request, ::GB28181::PlaySlowReply* response, std::function<void(::grpc::Status)>) override;
      void PlaySlow(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlaySlowReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest* request, ::GB28181::PlaySlowReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PlaySlow(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest* request, ::GB28181::PlaySlowReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PlaySlow(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlaySlowReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PlaySlow(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlaySlowReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void Pause(::grpc::ClientContext* context, const ::GB28181::PauseRequest* request, ::GB28181::PauseReply* response, std::function<void(::grpc::Status)>) override;
      void Pause(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PauseReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Pause(::grpc::ClientContext* context, const ::GB28181::PauseRequest* request, ::GB28181::PauseReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Pause(::grpc::ClientContext* context, const ::GB28181::PauseRequest* request, ::GB28181::PauseReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Pause(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PauseReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Pause(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PauseReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void Play(::grpc::ClientContext* context, const ::GB28181::PlayRequest* request, ::GB28181::PlayReply* response, std::function<void(::grpc::Status)>) override;
      void Play(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Play(::grpc::ClientContext* context, const ::GB28181::PlayRequest* request, ::GB28181::PlayReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Play(::grpc::ClientContext* context, const ::GB28181::PlayRequest* request, ::GB28181::PlayReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Play(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Play(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::PlayReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void Seek(::grpc::ClientContext* context, const ::GB28181::SeekRequest* request, ::GB28181::SeekReply* response, std::function<void(::grpc::Status)>) override;
      void Seek(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::SeekReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Seek(::grpc::ClientContext* context, const ::GB28181::SeekRequest* request, ::GB28181::SeekReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Seek(::grpc::ClientContext* context, const ::GB28181::SeekRequest* request, ::GB28181::SeekReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void Seek(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::SeekReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void Seek(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::SeekReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest* request, ::GB28181::GoForwardReply* response, std::function<void(::grpc::Status)>) override;
      void GoForward(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoForwardReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest* request, ::GB28181::GoForwardReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GoForward(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest* request, ::GB28181::GoForwardReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GoForward(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoForwardReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GoForward(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoForwardReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest* request, ::GB28181::StopPlayRecordReply* response, std::function<void(::grpc::Status)>) override;
      void StopPlayRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopPlayRecordReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest* request, ::GB28181::StopPlayRecordReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopPlayRecord(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest* request, ::GB28181::StopPlayRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopPlayRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopPlayRecordReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopPlayRecord(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopPlayRecordReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest* request, ::GB28181::GoBackReply* response, std::function<void(::grpc::Status)>) override;
      void GoBack(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoBackReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest* request, ::GB28181::GoBackReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GoBack(::grpc::ClientContext* context, const ::GB28181::GoBackRequest* request, ::GB28181::GoBackReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GoBack(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoBackReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GoBack(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GoBackReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void RecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest* request, ::GB28181::RecordDownloadReply* response, std::function<void(::grpc::Status)>) override;
      void RecordDownload(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RecordDownloadReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest* request, ::GB28181::RecordDownloadReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RecordDownload(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest* request, ::GB28181::RecordDownloadReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void RecordDownload(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RecordDownloadReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void RecordDownload(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::RecordDownloadReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest* request, ::GB28181::GetDeviceStatusReply* response, std::function<void(::grpc::Status)>) override;
      void GetDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceStatusReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest* request, ::GB28181::GetDeviceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest* request, ::GB28181::GetDeviceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest* request, ::GB28181::GetAllDeviceStatusReply* response, std::function<void(::grpc::Status)>) override;
      void GetAllDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetAllDeviceStatusReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest* request, ::GB28181::GetAllDeviceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetAllDeviceStatus(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest* request, ::GB28181::GetAllDeviceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetAllDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetAllDeviceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetAllDeviceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetAllDeviceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest* request, ::GB28181::GetDeviceListReply* response, std::function<void(::grpc::Status)>) override;
      void GetDeviceList(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceListReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest* request, ::GB28181::GetDeviceListReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetDeviceList(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest* request, ::GB28181::GetDeviceListReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDeviceList(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceListReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetDeviceList(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::GetDeviceListReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest* request, ::GB28181::DeviceRebootReply* response, std::function<void(::grpc::Status)>) override;
      void DeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::DeviceRebootReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest* request, ::GB28181::DeviceRebootReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeviceReboot(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest* request, ::GB28181::DeviceRebootReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::DeviceRebootReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::DeviceRebootReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest* request, ::GB28181::StartBroadcastReply* response, std::function<void(::grpc::Status)>) override;
      void StartBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartBroadcastReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest* request, ::GB28181::StartBroadcastReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartBroadcast(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest* request, ::GB28181::StartBroadcastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartBroadcastReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartBroadcastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest* request, ::GB28181::StopBroadcastReply* response, std::function<void(::grpc::Status)>) override;
      void StopBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopBroadcastReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest* request, ::GB28181::StopBroadcastReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopBroadcast(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest* request, ::GB28181::StopBroadcastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopBroadcastReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopBroadcast(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopBroadcastReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest* request, ::GB28181::StartTalkReply* response, std::function<void(::grpc::Status)>) override;
      void StartTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartTalkReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest* request, ::GB28181::StartTalkReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartTalk(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest* request, ::GB28181::StartTalkReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StartTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartTalkReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StartTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StartTalkReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void StopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest* request, ::GB28181::StopTalkReply* response, std::function<void(::grpc::Status)>) override;
      void StopTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopTalkReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest* request, ::GB28181::StopTalkReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopTalk(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest* request, ::GB28181::StopTalkReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void StopTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopTalkReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void StopTalk(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::StopTalkReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest* request, ::GB28181::ServiceStatusReply* response, std::function<void(::grpc::Status)>) override;
      void ServiceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ServiceStatusReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest* request, ::GB28181::ServiceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ServiceStatus(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest* request, ::GB28181::ServiceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ServiceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ServiceStatusReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ServiceStatus(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::ServiceStatusReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest* request, ::GB28181::OnvifPtzMoveReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifPtzMove(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzMoveReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest* request, ::GB28181::OnvifPtzMoveReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifPtzMove(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest* request, ::GB28181::OnvifPtzMoveReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifPtzMove(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzMoveReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifPtzMove(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzMoveReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest* request, ::GB28181::OnvifPtzStopReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifPtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzStopReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest* request, ::GB28181::OnvifPtzStopReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifPtzStop(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest* request, ::GB28181::OnvifPtzStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifPtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzStopReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifPtzStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtzStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest* request, ::GB28181::OnvifZoomInReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomInReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest* request, ::GB28181::OnvifZoomInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifZoomIn(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest* request, ::GB28181::OnvifZoomInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomInReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifZoomIn(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomInReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest* request, ::GB28181::OnvifZoomOutReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomOutReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest* request, ::GB28181::OnvifZoomOutReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifZoomOut(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest* request, ::GB28181::OnvifZoomOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomOutReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifZoomOut(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomOutReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest* request, ::GB28181::OnvifZoomStopReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifZoomStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomStopReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest* request, ::GB28181::OnvifZoomStopReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifZoomStop(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest* request, ::GB28181::OnvifZoomStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifZoomStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomStopReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifZoomStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifZoomStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest* request, ::GB28181::OnvifFocusNearReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifFocusNear(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusNearReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest* request, ::GB28181::OnvifFocusNearReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifFocusNear(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest* request, ::GB28181::OnvifFocusNearReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifFocusNear(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusNearReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifFocusNear(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusNearReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest* request, ::GB28181::OnvifFocusFarReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifFocusFar(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusFarReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest* request, ::GB28181::OnvifFocusFarReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifFocusFar(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest* request, ::GB28181::OnvifFocusFarReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifFocusFar(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusFarReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifFocusFar(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusFarReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest* request, ::GB28181::OnvifFocusStopReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifFocusStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusStopReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest* request, ::GB28181::OnvifFocusStopReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifFocusStop(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest* request, ::GB28181::OnvifFocusStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifFocusStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusStopReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifFocusStop(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifFocusStopReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest* request, ::GB28181::OnvifPtz3DReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifPtz3D(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtz3DReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest* request, ::GB28181::OnvifPtz3DReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifPtz3D(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest* request, ::GB28181::OnvifPtz3DReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifPtz3D(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtz3DReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifPtz3D(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifPtz3DReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest* request, ::GB28181::OnvifGetPresetReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifGetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetPresetReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest* request, ::GB28181::OnvifGetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifGetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest* request, ::GB28181::OnvifGetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifGetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifGetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest* request, ::GB28181::OnvifGotoPresetReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifGotoPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGotoPresetReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest* request, ::GB28181::OnvifGotoPresetReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifGotoPreset(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest* request, ::GB28181::OnvifGotoPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifGotoPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGotoPresetReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifGotoPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGotoPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest* request, ::GB28181::OnvifSetPresetReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifSetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifSetPresetReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest* request, ::GB28181::OnvifSetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifSetPreset(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest* request, ::GB28181::OnvifSetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifSetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifSetPresetReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifSetPreset(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifSetPresetReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest* request, ::GB28181::OnvifDeviceRebootReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifDeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifDeviceRebootReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest* request, ::GB28181::OnvifDeviceRebootReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifDeviceReboot(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest* request, ::GB28181::OnvifDeviceRebootReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifDeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifDeviceRebootReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifDeviceReboot(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifDeviceRebootReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest* request, ::GB28181::OnvifGetMainUrlReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifGetMainUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetMainUrlReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest* request, ::GB28181::OnvifGetMainUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifGetMainUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest* request, ::GB28181::OnvifGetMainUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifGetMainUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetMainUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifGetMainUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetMainUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void OnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest* request, ::GB28181::OnvifGetSubUrlReply* response, std::function<void(::grpc::Status)>) override;
      void OnvifGetSubUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetSubUrlReply* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest* request, ::GB28181::OnvifGetSubUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifGetSubUrl(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest* request, ::GB28181::OnvifGetSubUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void OnvifGetSubUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetSubUrlReply* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void OnvifGetSubUrl(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::GB28181::OnvifGetSubUrlReply* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>* AsyncPtzCommandRaw(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>* PrepareAsyncPtzCommandRaw(::grpc::ClientContext* context, const ::GB28181::PtzCommandRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomInReply>* AsyncPtzZoomInRaw(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomInReply>* PrepareAsyncPtzZoomInRaw(::grpc::ClientContext* context, const ::GB28181::PtzZoomInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomOutReply>* AsyncPtzZoomOutRaw(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzZoomOutReply>* PrepareAsyncPtzZoomOutRaw(::grpc::ClientContext* context, const ::GB28181::PtzZoomOutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisBigReply>* AsyncPtzIrisBigRaw(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisBigReply>* PrepareAsyncPtzIrisBigRaw(::grpc::ClientContext* context, const ::GB28181::PtzIrisBigRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisSmallReply>* AsyncPtzIrisSmallRaw(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIrisSmallReply>* PrepareAsyncPtzIrisSmallRaw(::grpc::ClientContext* context, const ::GB28181::PtzIrisSmallRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusOutReply>* AsyncPtzFocusOutRaw(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusOutReply>* PrepareAsyncPtzFocusOutRaw(::grpc::ClientContext* context, const ::GB28181::PtzFocusOutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusInReply>* AsyncPtzFocusInRaw(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzFocusInReply>* PrepareAsyncPtzFocusInRaw(::grpc::ClientContext* context, const ::GB28181::PtzFocusInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIFStopReply>* AsyncPtzIFStopRaw(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzIFStopReply>* PrepareAsyncPtzIFStopRaw(::grpc::ClientContext* context, const ::GB28181::PtzIFStopRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzStopReply>* AsyncPtzStopRaw(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PtzStopReply>* PrepareAsyncPtzStopRaw(::grpc::ClientContext* context, const ::GB28181::PtzStopRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlReply>* AsyncGetRealPlayUrlRaw(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlReply>* PrepareAsyncGetRealPlayUrlRaw(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlReply>* AsyncGetRTMPUrlRaw(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlReply>* PrepareAsyncGetRTMPUrlRaw(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlReply>* AsyncGetHLSUrlRaw(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlReply>* PrepareAsyncGetHLSUrlRaw(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlInReply>* AsyncGetRealPlayUrlInRaw(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::RealPlayUrlInReply>* PrepareAsyncGetRealPlayUrlInRaw(::grpc::ClientContext* context, const ::GB28181::RealPlayUrlInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlInReply>* AsyncGetRTMPUrlInRaw(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetRTMPUrlInReply>* PrepareAsyncGetRTMPUrlInRaw(::grpc::ClientContext* context, const ::GB28181::GetRTMPUrlInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlInReply>* AsyncGetHLSUrlInRaw(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetHLSUrlInReply>* PrepareAsyncGetHLSUrlInRaw(::grpc::ClientContext* context, const ::GB28181::GetHLSUrlInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoByIdReply>* AsyncStopVideoByIdRaw(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoByIdReply>* PrepareAsyncStopVideoByIdRaw(::grpc::ClientContext* context, const ::GB28181::StopVideoByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoBySsrcReply>* AsyncStopVideoBySsrcRaw(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StopVideoBySsrcReply>* PrepareAsyncStopVideoBySsrcRaw(::grpc::ClientContext* context, const ::GB28181::StopVideoBySsrcRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PlayBackUrlReply>* AsyncGetPlayBackUrlRaw(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PlayBackUrlReply>* PrepareAsyncGetPlayBackUrlRaw(::grpc::ClientContext* context, const ::GB28181::PlayBackUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>* AsyncPresetGoRaw(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>* PrepareAsyncPresetGoRaw(::grpc::ClientContext* context, const ::GB28181::PresetGoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>* AsyncPresetSetRaw(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>* PrepareAsyncPresetSetRaw(::grpc::ClientContext* context, const ::GB28181::PresetSetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>* AsyncPresetDelRaw(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::ControlReply>* PrepareAsyncPresetDelRaw(::grpc::ClientContext* context, const ::GB28181::PresetDelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PresetQueryReply>* AsyncPresetQueryRaw(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PresetQueryReply>* PrepareAsyncPresetQueryRaw(::grpc::ClientContext* context, const ::GB28181::PresetQueryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetPresetReply>* AsyncGetPresetRaw(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetPresetReply>* PrepareAsyncGetPresetRaw(::grpc::ClientContext* context, const ::GB28181::GetPresetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::QueryRecordReply>* AsyncQueryRecordRaw(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::QueryRecordReply>* PrepareAsyncQueryRecordRaw(::grpc::ClientContext* context, const ::GB28181::QueryRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetRecordReply>* AsyncGetRecordRaw(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetRecordReply>* PrepareAsyncGetRecordRaw(::grpc::ClientContext* context, const ::GB28181::GetRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PlayFastReply>* AsyncPlayFastRaw(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PlayFastReply>* PrepareAsyncPlayFastRaw(::grpc::ClientContext* context, const ::GB28181::PlayFastRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PlaySlowReply>* AsyncPlaySlowRaw(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PlaySlowReply>* PrepareAsyncPlaySlowRaw(::grpc::ClientContext* context, const ::GB28181::PlaySlowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PauseReply>* AsyncPauseRaw(::grpc::ClientContext* context, const ::GB28181::PauseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PauseReply>* PrepareAsyncPauseRaw(::grpc::ClientContext* context, const ::GB28181::PauseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PlayReply>* AsyncPlayRaw(::grpc::ClientContext* context, const ::GB28181::PlayRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::PlayReply>* PrepareAsyncPlayRaw(::grpc::ClientContext* context, const ::GB28181::PlayRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::SeekReply>* AsyncSeekRaw(::grpc::ClientContext* context, const ::GB28181::SeekRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::SeekReply>* PrepareAsyncSeekRaw(::grpc::ClientContext* context, const ::GB28181::SeekRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GoForwardReply>* AsyncGoForwardRaw(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GoForwardReply>* PrepareAsyncGoForwardRaw(::grpc::ClientContext* context, const ::GB28181::GoForwardRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StopPlayRecordReply>* AsyncStopPlayRecordRaw(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StopPlayRecordReply>* PrepareAsyncStopPlayRecordRaw(::grpc::ClientContext* context, const ::GB28181::StopPlayRecordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GoBackReply>* AsyncGoBackRaw(::grpc::ClientContext* context, const ::GB28181::GoBackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GoBackReply>* PrepareAsyncGoBackRaw(::grpc::ClientContext* context, const ::GB28181::GoBackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::RecordDownloadReply>* AsyncRecordDownloadRaw(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::RecordDownloadReply>* PrepareAsyncRecordDownloadRaw(::grpc::ClientContext* context, const ::GB28181::RecordDownloadRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceStatusReply>* AsyncGetDeviceStatusRaw(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceStatusReply>* PrepareAsyncGetDeviceStatusRaw(::grpc::ClientContext* context, const ::GB28181::GetDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetAllDeviceStatusReply>* AsyncGetAllDeviceStatusRaw(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetAllDeviceStatusReply>* PrepareAsyncGetAllDeviceStatusRaw(::grpc::ClientContext* context, const ::GB28181::GetAllDeviceStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceListReply>* AsyncGetDeviceListRaw(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::GetDeviceListReply>* PrepareAsyncGetDeviceListRaw(::grpc::ClientContext* context, const ::GB28181::GetDeviceListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::DeviceRebootReply>* AsyncDeviceRebootRaw(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::DeviceRebootReply>* PrepareAsyncDeviceRebootRaw(::grpc::ClientContext* context, const ::GB28181::DeviceRebootRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StartBroadcastReply>* AsyncStartBroadcastRaw(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StartBroadcastReply>* PrepareAsyncStartBroadcastRaw(::grpc::ClientContext* context, const ::GB28181::StartBroadcastRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StopBroadcastReply>* AsyncStopBroadcastRaw(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StopBroadcastReply>* PrepareAsyncStopBroadcastRaw(::grpc::ClientContext* context, const ::GB28181::StopBroadcastRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StartTalkReply>* AsyncStartTalkRaw(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StartTalkReply>* PrepareAsyncStartTalkRaw(::grpc::ClientContext* context, const ::GB28181::StartTalkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StopTalkReply>* AsyncStopTalkRaw(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::StopTalkReply>* PrepareAsyncStopTalkRaw(::grpc::ClientContext* context, const ::GB28181::StopTalkRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::ServiceStatusReply>* AsyncServiceStatusRaw(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::ServiceStatusReply>* PrepareAsyncServiceStatusRaw(::grpc::ClientContext* context, const ::GB28181::ServiceStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzMoveReply>* AsyncOnvifPtzMoveRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzMoveReply>* PrepareAsyncOnvifPtzMoveRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtzMoveRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzStopReply>* AsyncOnvifPtzStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtzStopReply>* PrepareAsyncOnvifPtzStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtzStopRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomInReply>* AsyncOnvifZoomInRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomInReply>* PrepareAsyncOnvifZoomInRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomInRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomOutReply>* AsyncOnvifZoomOutRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomOutReply>* PrepareAsyncOnvifZoomOutRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomOutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomStopReply>* AsyncOnvifZoomStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifZoomStopReply>* PrepareAsyncOnvifZoomStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifZoomStopRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusNearReply>* AsyncOnvifFocusNearRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusNearReply>* PrepareAsyncOnvifFocusNearRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusNearRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusFarReply>* AsyncOnvifFocusFarRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusFarReply>* PrepareAsyncOnvifFocusFarRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusFarRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusStopReply>* AsyncOnvifFocusStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifFocusStopReply>* PrepareAsyncOnvifFocusStopRaw(::grpc::ClientContext* context, const ::GB28181::OnvifFocusStopRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtz3DReply>* AsyncOnvifPtz3DRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifPtz3DReply>* PrepareAsyncOnvifPtz3DRaw(::grpc::ClientContext* context, const ::GB28181::OnvifPtz3DRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetPresetReply>* AsyncOnvifGetPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetPresetReply>* PrepareAsyncOnvifGetPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetPresetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGotoPresetReply>* AsyncOnvifGotoPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGotoPresetReply>* PrepareAsyncOnvifGotoPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGotoPresetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifSetPresetReply>* AsyncOnvifSetPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifSetPresetReply>* PrepareAsyncOnvifSetPresetRaw(::grpc::ClientContext* context, const ::GB28181::OnvifSetPresetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifDeviceRebootReply>* AsyncOnvifDeviceRebootRaw(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifDeviceRebootReply>* PrepareAsyncOnvifDeviceRebootRaw(::grpc::ClientContext* context, const ::GB28181::OnvifDeviceRebootRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetMainUrlReply>* AsyncOnvifGetMainUrlRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetMainUrlReply>* PrepareAsyncOnvifGetMainUrlRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetMainUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetSubUrlReply>* AsyncOnvifGetSubUrlRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::GB28181::OnvifGetSubUrlReply>* PrepareAsyncOnvifGetSubUrlRaw(::grpc::ClientContext* context, const ::GB28181::OnvifGetSubUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_PtzCommand_;
    const ::grpc::internal::RpcMethod rpcmethod_PtzZoomIn_;
    const ::grpc::internal::RpcMethod rpcmethod_PtzZoomOut_;
    const ::grpc::internal::RpcMethod rpcmethod_PtzIrisBig_;
    const ::grpc::internal::RpcMethod rpcmethod_PtzIrisSmall_;
    const ::grpc::internal::RpcMethod rpcmethod_PtzFocusOut_;
    const ::grpc::internal::RpcMethod rpcmethod_PtzFocusIn_;
    const ::grpc::internal::RpcMethod rpcmethod_PtzIFStop_;
    const ::grpc::internal::RpcMethod rpcmethod_PtzStop_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRealPlayUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRTMPUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_GetHLSUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRealPlayUrlIn_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRTMPUrlIn_;
    const ::grpc::internal::RpcMethod rpcmethod_GetHLSUrlIn_;
    const ::grpc::internal::RpcMethod rpcmethod_StopVideoById_;
    const ::grpc::internal::RpcMethod rpcmethod_StopVideoBySsrc_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPlayBackUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_PresetGo_;
    const ::grpc::internal::RpcMethod rpcmethod_PresetSet_;
    const ::grpc::internal::RpcMethod rpcmethod_PresetDel_;
    const ::grpc::internal::RpcMethod rpcmethod_PresetQuery_;
    const ::grpc::internal::RpcMethod rpcmethod_GetPreset_;
    const ::grpc::internal::RpcMethod rpcmethod_QueryRecord_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRecord_;
    const ::grpc::internal::RpcMethod rpcmethod_PlayFast_;
    const ::grpc::internal::RpcMethod rpcmethod_PlaySlow_;
    const ::grpc::internal::RpcMethod rpcmethod_Pause_;
    const ::grpc::internal::RpcMethod rpcmethod_Play_;
    const ::grpc::internal::RpcMethod rpcmethod_Seek_;
    const ::grpc::internal::RpcMethod rpcmethod_GoForward_;
    const ::grpc::internal::RpcMethod rpcmethod_StopPlayRecord_;
    const ::grpc::internal::RpcMethod rpcmethod_GoBack_;
    const ::grpc::internal::RpcMethod rpcmethod_RecordDownload_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDeviceStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_GetAllDeviceStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDeviceList_;
    const ::grpc::internal::RpcMethod rpcmethod_DeviceReboot_;
    const ::grpc::internal::RpcMethod rpcmethod_StartBroadcast_;
    const ::grpc::internal::RpcMethod rpcmethod_StopBroadcast_;
    const ::grpc::internal::RpcMethod rpcmethod_StartTalk_;
    const ::grpc::internal::RpcMethod rpcmethod_StopTalk_;
    const ::grpc::internal::RpcMethod rpcmethod_ServiceStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifPtzMove_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifPtzStop_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifZoomIn_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifZoomOut_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifZoomStop_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifFocusNear_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifFocusFar_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifFocusStop_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifPtz3D_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifGetPreset_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifGotoPreset_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifSetPreset_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifDeviceReboot_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifGetMainUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_OnvifGetSubUrl_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 云台控制
    virtual ::grpc::Status PtzCommand(::grpc::ServerContext* context, const ::GB28181::PtzCommandRequest* request, ::GB28181::ControlReply* response);
    // 摄像机拉近
    virtual ::grpc::Status PtzZoomIn(::grpc::ServerContext* context, const ::GB28181::PtzZoomInRequest* request, ::GB28181::PtzZoomInReply* response);
    // 摄像机拉远
    virtual ::grpc::Status PtzZoomOut(::grpc::ServerContext* context, const ::GB28181::PtzZoomOutRequest* request, ::GB28181::PtzZoomOutReply* response);
    // 光圈变大
    virtual ::grpc::Status PtzIrisBig(::grpc::ServerContext* context, const ::GB28181::PtzIrisBigRequest* request, ::GB28181::PtzIrisBigReply* response);
    // 光圈变小
    virtual ::grpc::Status PtzIrisSmall(::grpc::ServerContext* context, const ::GB28181::PtzIrisSmallRequest* request, ::GB28181::PtzIrisSmallReply* response);
    // 聚焦拉远
    virtual ::grpc::Status PtzFocusOut(::grpc::ServerContext* context, const ::GB28181::PtzFocusOutRequest* request, ::GB28181::PtzFocusOutReply* response);
    // 聚焦拉近
    virtual ::grpc::Status PtzFocusIn(::grpc::ServerContext* context, const ::GB28181::PtzFocusInRequest* request, ::GB28181::PtzFocusInReply* response);
    // 聚焦光圈停止
    virtual ::grpc::Status PtzIFStop(::grpc::ServerContext* context, const ::GB28181::PtzIFStopRequest* request, ::GB28181::PtzIFStopReply* response);
    // 云台控制停止（拉近拉远也用这个停止）
    virtual ::grpc::Status PtzStop(::grpc::ServerContext* context, const ::GB28181::PtzStopRequest* request, ::GB28181::PtzStopReply* response);
    // 获取实时视频播放rtsp url
    virtual ::grpc::Status GetRealPlayUrl(::grpc::ServerContext* context, const ::GB28181::RealPlayUrlRequest* request, ::GB28181::RealPlayUrlReply* response);
    // 获取实时视频播放RTMP url（超过60秒没有客户端连接服务器会停止取流）
    virtual ::grpc::Status GetRTMPUrl(::grpc::ServerContext* context, const ::GB28181::GetRTMPUrlRequest* request, ::GB28181::GetRTMPUrlReply* response);
    // 获取HLS播放url
    virtual ::grpc::Status GetHLSUrl(::grpc::ServerContext* context, const ::GB28181::GetHLSUrlRequest* request, ::GB28181::GetHLSUrlReply* response);
    // 获取实时视频播放rtsp url 内网ip
    virtual ::grpc::Status GetRealPlayUrlIn(::grpc::ServerContext* context, const ::GB28181::RealPlayUrlInRequest* request, ::GB28181::RealPlayUrlInReply* response);
    // 获取实时视频播放RTMP url（超过60秒没有客户端连接服务器会停止取流）内网ip
    virtual ::grpc::Status GetRTMPUrlIn(::grpc::ServerContext* context, const ::GB28181::GetRTMPUrlInRequest* request, ::GB28181::GetRTMPUrlInReply* response);
    // 获取HLS播放url 内网ip
    virtual ::grpc::Status GetHLSUrlIn(::grpc::ServerContext* context, const ::GB28181::GetHLSUrlInRequest* request, ::GB28181::GetHLSUrlInReply* response);
    // 通过主id和子id停止视频播放
    virtual ::grpc::Status StopVideoById(::grpc::ServerContext* context, const ::GB28181::StopVideoByIdRequest* request, ::GB28181::StopVideoByIdReply* response);
    // 通过ssrc停止视频播放
    virtual ::grpc::Status StopVideoBySsrc(::grpc::ServerContext* context, const ::GB28181::StopVideoBySsrcRequest* request, ::GB28181::StopVideoBySsrcReply* response);
    // 获取录像回放的url
    virtual ::grpc::Status GetPlayBackUrl(::grpc::ServerContext* context, const ::GB28181::PlayBackUrlRequest* request, ::GB28181::PlayBackUrlReply* response);
    // 转到相应预置位
    virtual ::grpc::Status PresetGo(::grpc::ServerContext* context, const ::GB28181::PresetGoRequest* request, ::GB28181::ControlReply* response);
    // 设置相应预置位
    virtual ::grpc::Status PresetSet(::grpc::ServerContext* context, const ::GB28181::PresetSetRequest* request, ::GB28181::ControlReply* response);
    // 删除相应预置位
    virtual ::grpc::Status PresetDel(::grpc::ServerContext* context, const ::GB28181::PresetDelRequest* request, ::GB28181::ControlReply* response);
    // 查询预置位
    virtual ::grpc::Status PresetQuery(::grpc::ServerContext* context, const ::GB28181::PresetQueryRequest* request, ::GB28181::PresetQueryReply* response);
    // 获取预置位
    virtual ::grpc::Status GetPreset(::grpc::ServerContext* context, const ::GB28181::GetPresetRequest* request, ::GB28181::GetPresetReply* response);
    // 录像查询
    virtual ::grpc::Status QueryRecord(::grpc::ServerContext* context, const ::GB28181::QueryRecordRequest* request, ::GB28181::QueryRecordReply* response);
    // 获取录像列表
    virtual ::grpc::Status GetRecord(::grpc::ServerContext* context, const ::GB28181::GetRecordRequest* request, ::GB28181::GetRecordReply* response);
    // 快放
    virtual ::grpc::Status PlayFast(::grpc::ServerContext* context, const ::GB28181::PlayFastRequest* request, ::GB28181::PlayFastReply* response);
    // 慢放
    virtual ::grpc::Status PlaySlow(::grpc::ServerContext* context, const ::GB28181::PlaySlowRequest* request, ::GB28181::PlaySlowReply* response);
    // 暂停
    virtual ::grpc::Status Pause(::grpc::ServerContext* context, const ::GB28181::PauseRequest* request, ::GB28181::PauseReply* response);
    // 开始播放
    virtual ::grpc::Status Play(::grpc::ServerContext* context, const ::GB28181::PlayRequest* request, ::GB28181::PlayReply* response);
    // 设置当前播放时间点
    virtual ::grpc::Status Seek(::grpc::ServerContext* context, const ::GB28181::SeekRequest* request, ::GB28181::SeekReply* response);
    // 快进
    virtual ::grpc::Status GoForward(::grpc::ServerContext* context, const ::GB28181::GoForwardRequest* request, ::GB28181::GoForwardReply* response);
    // 快退
    // 停止录像播放
    virtual ::grpc::Status StopPlayRecord(::grpc::ServerContext* context, const ::GB28181::StopPlayRecordRequest* request, ::GB28181::StopPlayRecordReply* response);
    virtual ::grpc::Status GoBack(::grpc::ServerContext* context, const ::GB28181::GoBackRequest* request, ::GB28181::GoBackReply* response);
    // 录像下载
    virtual ::grpc::Status RecordDownload(::grpc::ServerContext* context, const ::GB28181::RecordDownloadRequest* request, ::GB28181::RecordDownloadReply* response);
    // 根据设备id获取设备状态
    virtual ::grpc::Status GetDeviceStatus(::grpc::ServerContext* context, const ::GB28181::GetDeviceStatusRequest* request, ::GB28181::GetDeviceStatusReply* response);
    // 获取所有设备状态
    virtual ::grpc::Status GetAllDeviceStatus(::grpc::ServerContext* context, const ::GB28181::GetAllDeviceStatusRequest* request, ::GB28181::GetAllDeviceStatusReply* response);
    // 获取设备列表
    virtual ::grpc::Status GetDeviceList(::grpc::ServerContext* context, const ::GB28181::GetDeviceListRequest* request, ::GB28181::GetDeviceListReply* response);
    // 设备重启	
    virtual ::grpc::Status DeviceReboot(::grpc::ServerContext* context, const ::GB28181::DeviceRebootRequest* request, ::GB28181::DeviceRebootReply* response);
    // 开始语音广播
    virtual ::grpc::Status StartBroadcast(::grpc::ServerContext* context, const ::GB28181::StartBroadcastRequest* request, ::GB28181::StartBroadcastReply* response);
    // 停止语音广播
    virtual ::grpc::Status StopBroadcast(::grpc::ServerContext* context, const ::GB28181::StopBroadcastRequest* request, ::GB28181::StopBroadcastReply* response);
    // 开始语音对讲
    virtual ::grpc::Status StartTalk(::grpc::ServerContext* context, const ::GB28181::StartTalkRequest* request, ::GB28181::StartTalkReply* response);
    // 停止语音对讲
    virtual ::grpc::Status StopTalk(::grpc::ServerContext* context, const ::GB28181::StopTalkRequest* request, ::GB28181::StopTalkReply* response);
    // 获取节点状态
    virtual ::grpc::Status ServiceStatus(::grpc::ServerContext* context, const ::GB28181::ServiceStatusRequest* request, ::GB28181::ServiceStatusReply* response);
    // Onvif云台转动
    virtual ::grpc::Status OnvifPtzMove(::grpc::ServerContext* context, const ::GB28181::OnvifPtzMoveRequest* request, ::GB28181::OnvifPtzMoveReply* response);
    // Onvif停止云台转动
    virtual ::grpc::Status OnvifPtzStop(::grpc::ServerContext* context, const ::GB28181::OnvifPtzStopRequest* request, ::GB28181::OnvifPtzStopReply* response);
    // Onvif变倍拉近
    virtual ::grpc::Status OnvifZoomIn(::grpc::ServerContext* context, const ::GB28181::OnvifZoomInRequest* request, ::GB28181::OnvifZoomInReply* response);
    // Onvif变倍拉远
    virtual ::grpc::Status OnvifZoomOut(::grpc::ServerContext* context, const ::GB28181::OnvifZoomOutRequest* request, ::GB28181::OnvifZoomOutReply* response);
    // Onvif停止变倍
    virtual ::grpc::Status OnvifZoomStop(::grpc::ServerContext* context, const ::GB28181::OnvifZoomStopRequest* request, ::GB28181::OnvifZoomStopReply* response);
    // Onvif聚焦+
    virtual ::grpc::Status OnvifFocusNear(::grpc::ServerContext* context, const ::GB28181::OnvifFocusNearRequest* request, ::GB28181::OnvifFocusNearReply* response);
    // Onvif聚焦-
    virtual ::grpc::Status OnvifFocusFar(::grpc::ServerContext* context, const ::GB28181::OnvifFocusFarRequest* request, ::GB28181::OnvifFocusFarReply* response);
    // Onvif停止聚焦
    virtual ::grpc::Status OnvifFocusStop(::grpc::ServerContext* context, const ::GB28181::OnvifFocusStopRequest* request, ::GB28181::OnvifFocusStopReply* response);
    // Onvif云台3D控制
    virtual ::grpc::Status OnvifPtz3D(::grpc::ServerContext* context, const ::GB28181::OnvifPtz3DRequest* request, ::GB28181::OnvifPtz3DReply* response);
    // Onvif获取预置位
    virtual ::grpc::Status OnvifGetPreset(::grpc::ServerContext* context, const ::GB28181::OnvifGetPresetRequest* request, ::GB28181::OnvifGetPresetReply* response);
    // Onvif转到预置位
    virtual ::grpc::Status OnvifGotoPreset(::grpc::ServerContext* context, const ::GB28181::OnvifGotoPresetRequest* request, ::GB28181::OnvifGotoPresetReply* response);
    // Onvif设置预置位
    virtual ::grpc::Status OnvifSetPreset(::grpc::ServerContext* context, const ::GB28181::OnvifSetPresetRequest* request, ::GB28181::OnvifSetPresetReply* response);
    // Onvif设备重启
    virtual ::grpc::Status OnvifDeviceReboot(::grpc::ServerContext* context, const ::GB28181::OnvifDeviceRebootRequest* request, ::GB28181::OnvifDeviceRebootReply* response);
    // onvif获取主码流播放url
    virtual ::grpc::Status OnvifGetMainUrl(::grpc::ServerContext* context, const ::GB28181::OnvifGetMainUrlRequest* request, ::GB28181::OnvifGetMainUrlReply* response);
    // onvif获取子码流播放url
    virtual ::grpc::Status OnvifGetSubUrl(::grpc::ServerContext* context, const ::GB28181::OnvifGetSubUrlRequest* request, ::GB28181::OnvifGetSubUrlReply* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_PtzCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PtzCommand() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_PtzCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzCommand(::grpc::ServerContext* /*context*/, const ::GB28181::PtzCommandRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzCommand(::grpc::ServerContext* context, ::GB28181::PtzCommandRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::ControlReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PtzZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PtzZoomIn() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_PtzZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomInRequest* /*request*/, ::GB28181::PtzZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzZoomIn(::grpc::ServerContext* context, ::GB28181::PtzZoomInRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PtzZoomInReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PtzZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PtzZoomOut() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_PtzZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomOutRequest* /*request*/, ::GB28181::PtzZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzZoomOut(::grpc::ServerContext* context, ::GB28181::PtzZoomOutRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PtzZoomOutReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PtzIrisBig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PtzIrisBig() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_PtzIrisBig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIrisBig(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisBigRequest* /*request*/, ::GB28181::PtzIrisBigReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzIrisBig(::grpc::ServerContext* context, ::GB28181::PtzIrisBigRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PtzIrisBigReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PtzIrisSmall : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PtzIrisSmall() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_PtzIrisSmall() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIrisSmall(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisSmallRequest* /*request*/, ::GB28181::PtzIrisSmallReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzIrisSmall(::grpc::ServerContext* context, ::GB28181::PtzIrisSmallRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PtzIrisSmallReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PtzFocusOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PtzFocusOut() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_PtzFocusOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzFocusOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusOutRequest* /*request*/, ::GB28181::PtzFocusOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzFocusOut(::grpc::ServerContext* context, ::GB28181::PtzFocusOutRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PtzFocusOutReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PtzFocusIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PtzFocusIn() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_PtzFocusIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzFocusIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusInRequest* /*request*/, ::GB28181::PtzFocusInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzFocusIn(::grpc::ServerContext* context, ::GB28181::PtzFocusInRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PtzFocusInReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PtzIFStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PtzIFStop() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_PtzIFStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIFStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIFStopRequest* /*request*/, ::GB28181::PtzIFStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzIFStop(::grpc::ServerContext* context, ::GB28181::PtzIFStopRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PtzIFStopReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PtzStop() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_PtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzStopRequest* /*request*/, ::GB28181::PtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzStop(::grpc::ServerContext* context, ::GB28181::PtzStopRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PtzStopReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRealPlayUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRealPlayUrl() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetRealPlayUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealPlayUrl(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlRequest* /*request*/, ::GB28181::RealPlayUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRealPlayUrl(::grpc::ServerContext* context, ::GB28181::RealPlayUrlRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::RealPlayUrlReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRTMPUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRTMPUrl() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetRTMPUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRTMPUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlRequest* /*request*/, ::GB28181::GetRTMPUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRTMPUrl(::grpc::ServerContext* context, ::GB28181::GetRTMPUrlRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GetRTMPUrlReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetHLSUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetHLSUrl() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetHLSUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHLSUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlRequest* /*request*/, ::GB28181::GetHLSUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHLSUrl(::grpc::ServerContext* context, ::GB28181::GetHLSUrlRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GetHLSUrlReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRealPlayUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRealPlayUrlIn() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetRealPlayUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealPlayUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlInRequest* /*request*/, ::GB28181::RealPlayUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRealPlayUrlIn(::grpc::ServerContext* context, ::GB28181::RealPlayUrlInRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::RealPlayUrlInReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRTMPUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRTMPUrlIn() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetRTMPUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRTMPUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlInRequest* /*request*/, ::GB28181::GetRTMPUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRTMPUrlIn(::grpc::ServerContext* context, ::GB28181::GetRTMPUrlInRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GetRTMPUrlInReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetHLSUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetHLSUrlIn() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetHLSUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHLSUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlInRequest* /*request*/, ::GB28181::GetHLSUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHLSUrlIn(::grpc::ServerContext* context, ::GB28181::GetHLSUrlInRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GetHLSUrlInReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopVideoById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopVideoById() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_StopVideoById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopVideoById(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoByIdRequest* /*request*/, ::GB28181::StopVideoByIdReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopVideoById(::grpc::ServerContext* context, ::GB28181::StopVideoByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::StopVideoByIdReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopVideoBySsrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopVideoBySsrc() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_StopVideoBySsrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopVideoBySsrc(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoBySsrcRequest* /*request*/, ::GB28181::StopVideoBySsrcReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopVideoBySsrc(::grpc::ServerContext* context, ::GB28181::StopVideoBySsrcRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::StopVideoBySsrcReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPlayBackUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPlayBackUrl() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetPlayBackUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPlayBackUrl(::grpc::ServerContext* /*context*/, const ::GB28181::PlayBackUrlRequest* /*request*/, ::GB28181::PlayBackUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPlayBackUrl(::grpc::ServerContext* context, ::GB28181::PlayBackUrlRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PlayBackUrlReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PresetGo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PresetGo() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_PresetGo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetGo(::grpc::ServerContext* /*context*/, const ::GB28181::PresetGoRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPresetGo(::grpc::ServerContext* context, ::GB28181::PresetGoRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::ControlReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PresetSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PresetSet() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_PresetSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetSet(::grpc::ServerContext* /*context*/, const ::GB28181::PresetSetRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPresetSet(::grpc::ServerContext* context, ::GB28181::PresetSetRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::ControlReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PresetDel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PresetDel() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_PresetDel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetDel(::grpc::ServerContext* /*context*/, const ::GB28181::PresetDelRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPresetDel(::grpc::ServerContext* context, ::GB28181::PresetDelRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::ControlReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PresetQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PresetQuery() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_PresetQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetQuery(::grpc::ServerContext* /*context*/, const ::GB28181::PresetQueryRequest* /*request*/, ::GB28181::PresetQueryReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPresetQuery(::grpc::ServerContext* context, ::GB28181::PresetQueryRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PresetQueryReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetPreset() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_GetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::GetPresetRequest* /*request*/, ::GB28181::GetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPreset(::grpc::ServerContext* context, ::GB28181::GetPresetRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GetPresetReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_QueryRecord() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_QueryRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryRecord(::grpc::ServerContext* /*context*/, const ::GB28181::QueryRecordRequest* /*request*/, ::GB28181::QueryRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryRecord(::grpc::ServerContext* context, ::GB28181::QueryRecordRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::QueryRecordReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRecord() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::GB28181::GetRecordRequest* /*request*/, ::GB28181::GetRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecord(::grpc::ServerContext* context, ::GB28181::GetRecordRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GetRecordReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PlayFast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PlayFast() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_PlayFast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlayFast(::grpc::ServerContext* /*context*/, const ::GB28181::PlayFastRequest* /*request*/, ::GB28181::PlayFastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlayFast(::grpc::ServerContext* context, ::GB28181::PlayFastRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PlayFastReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PlaySlow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PlaySlow() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_PlaySlow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaySlow(::grpc::ServerContext* /*context*/, const ::GB28181::PlaySlowRequest* /*request*/, ::GB28181::PlaySlowReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlaySlow(::grpc::ServerContext* context, ::GB28181::PlaySlowRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PlaySlowReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Pause : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Pause() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_Pause() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Pause(::grpc::ServerContext* /*context*/, const ::GB28181::PauseRequest* /*request*/, ::GB28181::PauseReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPause(::grpc::ServerContext* context, ::GB28181::PauseRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PauseReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Play : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Play() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_Play() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Play(::grpc::ServerContext* /*context*/, const ::GB28181::PlayRequest* /*request*/, ::GB28181::PlayReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlay(::grpc::ServerContext* context, ::GB28181::PlayRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::PlayReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Seek : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Seek() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_Seek() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Seek(::grpc::ServerContext* /*context*/, const ::GB28181::SeekRequest* /*request*/, ::GB28181::SeekReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSeek(::grpc::ServerContext* context, ::GB28181::SeekRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::SeekReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GoForward : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GoForward() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_GoForward() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GoForward(::grpc::ServerContext* /*context*/, const ::GB28181::GoForwardRequest* /*request*/, ::GB28181::GoForwardReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGoForward(::grpc::ServerContext* context, ::GB28181::GoForwardRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GoForwardReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopPlayRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopPlayRecord() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_StopPlayRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayRecord(::grpc::ServerContext* /*context*/, const ::GB28181::StopPlayRecordRequest* /*request*/, ::GB28181::StopPlayRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopPlayRecord(::grpc::ServerContext* context, ::GB28181::StopPlayRecordRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::StopPlayRecordReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GoBack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GoBack() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_GoBack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GoBack(::grpc::ServerContext* /*context*/, const ::GB28181::GoBackRequest* /*request*/, ::GB28181::GoBackReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGoBack(::grpc::ServerContext* context, ::GB28181::GoBackRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GoBackReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RecordDownload : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RecordDownload() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_RecordDownload() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RecordDownload(::grpc::ServerContext* /*context*/, const ::GB28181::RecordDownloadRequest* /*request*/, ::GB28181::RecordDownloadReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRecordDownload(::grpc::ServerContext* context, ::GB28181::RecordDownloadRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::RecordDownloadReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDeviceStatus() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceStatusRequest* /*request*/, ::GB28181::GetDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceStatus(::grpc::ServerContext* context, ::GB28181::GetDeviceStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GetDeviceStatusReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAllDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetAllDeviceStatus() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_GetAllDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetAllDeviceStatusRequest* /*request*/, ::GB28181::GetAllDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllDeviceStatus(::grpc::ServerContext* context, ::GB28181::GetAllDeviceStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GetAllDeviceStatusReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDeviceList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDeviceList() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_GetDeviceList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceList(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceListRequest* /*request*/, ::GB28181::GetDeviceListReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceList(::grpc::ServerContext* context, ::GB28181::GetDeviceListRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::GetDeviceListReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeviceReboot() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_DeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::DeviceRebootRequest* /*request*/, ::GB28181::DeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeviceReboot(::grpc::ServerContext* context, ::GB28181::DeviceRebootRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::DeviceRebootReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartBroadcast() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_StartBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StartBroadcastRequest* /*request*/, ::GB28181::StartBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartBroadcast(::grpc::ServerContext* context, ::GB28181::StartBroadcastRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::StartBroadcastReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopBroadcast() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_StopBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StopBroadcastRequest* /*request*/, ::GB28181::StopBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopBroadcast(::grpc::ServerContext* context, ::GB28181::StopBroadcastRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::StopBroadcastReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartTalk() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_StartTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StartTalkRequest* /*request*/, ::GB28181::StartTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartTalk(::grpc::ServerContext* context, ::GB28181::StartTalkRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::StartTalkReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopTalk() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_StopTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StopTalkRequest* /*request*/, ::GB28181::StopTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopTalk(::grpc::ServerContext* context, ::GB28181::StopTalkRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::StopTalkReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ServiceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ServiceStatus() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_ServiceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ServiceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::ServiceStatusRequest* /*request*/, ::GB28181::ServiceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestServiceStatus(::grpc::ServerContext* context, ::GB28181::ServiceStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::ServiceStatusReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifPtzMove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifPtzMove() {
      ::grpc::Service::MarkMethodAsync(43);
    }
    ~WithAsyncMethod_OnvifPtzMove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtzMove(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzMoveRequest* /*request*/, ::GB28181::OnvifPtzMoveReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifPtzMove(::grpc::ServerContext* context, ::GB28181::OnvifPtzMoveRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifPtzMoveReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifPtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifPtzStop() {
      ::grpc::Service::MarkMethodAsync(44);
    }
    ~WithAsyncMethod_OnvifPtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzStopRequest* /*request*/, ::GB28181::OnvifPtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifPtzStop(::grpc::ServerContext* context, ::GB28181::OnvifPtzStopRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifPtzStopReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifZoomIn() {
      ::grpc::Service::MarkMethodAsync(45);
    }
    ~WithAsyncMethod_OnvifZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomInRequest* /*request*/, ::GB28181::OnvifZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifZoomIn(::grpc::ServerContext* context, ::GB28181::OnvifZoomInRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifZoomInReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifZoomOut() {
      ::grpc::Service::MarkMethodAsync(46);
    }
    ~WithAsyncMethod_OnvifZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomOutRequest* /*request*/, ::GB28181::OnvifZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifZoomOut(::grpc::ServerContext* context, ::GB28181::OnvifZoomOutRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifZoomOutReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifZoomStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifZoomStop() {
      ::grpc::Service::MarkMethodAsync(47);
    }
    ~WithAsyncMethod_OnvifZoomStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomStopRequest* /*request*/, ::GB28181::OnvifZoomStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifZoomStop(::grpc::ServerContext* context, ::GB28181::OnvifZoomStopRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifZoomStopReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifFocusNear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifFocusNear() {
      ::grpc::Service::MarkMethodAsync(48);
    }
    ~WithAsyncMethod_OnvifFocusNear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusNear(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusNearRequest* /*request*/, ::GB28181::OnvifFocusNearReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifFocusNear(::grpc::ServerContext* context, ::GB28181::OnvifFocusNearRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifFocusNearReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifFocusFar : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifFocusFar() {
      ::grpc::Service::MarkMethodAsync(49);
    }
    ~WithAsyncMethod_OnvifFocusFar() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusFar(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusFarRequest* /*request*/, ::GB28181::OnvifFocusFarReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifFocusFar(::grpc::ServerContext* context, ::GB28181::OnvifFocusFarRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifFocusFarReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifFocusStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifFocusStop() {
      ::grpc::Service::MarkMethodAsync(50);
    }
    ~WithAsyncMethod_OnvifFocusStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusStopRequest* /*request*/, ::GB28181::OnvifFocusStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifFocusStop(::grpc::ServerContext* context, ::GB28181::OnvifFocusStopRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifFocusStopReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifPtz3D : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifPtz3D() {
      ::grpc::Service::MarkMethodAsync(51);
    }
    ~WithAsyncMethod_OnvifPtz3D() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtz3D(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtz3DRequest* /*request*/, ::GB28181::OnvifPtz3DReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifPtz3D(::grpc::ServerContext* context, ::GB28181::OnvifPtz3DRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifPtz3DReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifGetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifGetPreset() {
      ::grpc::Service::MarkMethodAsync(52);
    }
    ~WithAsyncMethod_OnvifGetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetPresetRequest* /*request*/, ::GB28181::OnvifGetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifGetPreset(::grpc::ServerContext* context, ::GB28181::OnvifGetPresetRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifGetPresetReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifGotoPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifGotoPreset() {
      ::grpc::Service::MarkMethodAsync(53);
    }
    ~WithAsyncMethod_OnvifGotoPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGotoPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGotoPresetRequest* /*request*/, ::GB28181::OnvifGotoPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifGotoPreset(::grpc::ServerContext* context, ::GB28181::OnvifGotoPresetRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifGotoPresetReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifSetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifSetPreset() {
      ::grpc::Service::MarkMethodAsync(54);
    }
    ~WithAsyncMethod_OnvifSetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifSetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifSetPresetRequest* /*request*/, ::GB28181::OnvifSetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifSetPreset(::grpc::ServerContext* context, ::GB28181::OnvifSetPresetRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifSetPresetReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifDeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifDeviceReboot() {
      ::grpc::Service::MarkMethodAsync(55);
    }
    ~WithAsyncMethod_OnvifDeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifDeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifDeviceRebootRequest* /*request*/, ::GB28181::OnvifDeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifDeviceReboot(::grpc::ServerContext* context, ::GB28181::OnvifDeviceRebootRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifDeviceRebootReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifGetMainUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifGetMainUrl() {
      ::grpc::Service::MarkMethodAsync(56);
    }
    ~WithAsyncMethod_OnvifGetMainUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetMainUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetMainUrlRequest* /*request*/, ::GB28181::OnvifGetMainUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifGetMainUrl(::grpc::ServerContext* context, ::GB28181::OnvifGetMainUrlRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifGetMainUrlReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_OnvifGetSubUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_OnvifGetSubUrl() {
      ::grpc::Service::MarkMethodAsync(57);
    }
    ~WithAsyncMethod_OnvifGetSubUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetSubUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetSubUrlRequest* /*request*/, ::GB28181::OnvifGetSubUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifGetSubUrl(::grpc::ServerContext* context, ::GB28181::OnvifGetSubUrlRequest* request, ::grpc::ServerAsyncResponseWriter< ::GB28181::OnvifGetSubUrlReply>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_PtzCommand<WithAsyncMethod_PtzZoomIn<WithAsyncMethod_PtzZoomOut<WithAsyncMethod_PtzIrisBig<WithAsyncMethod_PtzIrisSmall<WithAsyncMethod_PtzFocusOut<WithAsyncMethod_PtzFocusIn<WithAsyncMethod_PtzIFStop<WithAsyncMethod_PtzStop<WithAsyncMethod_GetRealPlayUrl<WithAsyncMethod_GetRTMPUrl<WithAsyncMethod_GetHLSUrl<WithAsyncMethod_GetRealPlayUrlIn<WithAsyncMethod_GetRTMPUrlIn<WithAsyncMethod_GetHLSUrlIn<WithAsyncMethod_StopVideoById<WithAsyncMethod_StopVideoBySsrc<WithAsyncMethod_GetPlayBackUrl<WithAsyncMethod_PresetGo<WithAsyncMethod_PresetSet<WithAsyncMethod_PresetDel<WithAsyncMethod_PresetQuery<WithAsyncMethod_GetPreset<WithAsyncMethod_QueryRecord<WithAsyncMethod_GetRecord<WithAsyncMethod_PlayFast<WithAsyncMethod_PlaySlow<WithAsyncMethod_Pause<WithAsyncMethod_Play<WithAsyncMethod_Seek<WithAsyncMethod_GoForward<WithAsyncMethod_StopPlayRecord<WithAsyncMethod_GoBack<WithAsyncMethod_RecordDownload<WithAsyncMethod_GetDeviceStatus<WithAsyncMethod_GetAllDeviceStatus<WithAsyncMethod_GetDeviceList<WithAsyncMethod_DeviceReboot<WithAsyncMethod_StartBroadcast<WithAsyncMethod_StopBroadcast<WithAsyncMethod_StartTalk<WithAsyncMethod_StopTalk<WithAsyncMethod_ServiceStatus<WithAsyncMethod_OnvifPtzMove<WithAsyncMethod_OnvifPtzStop<WithAsyncMethod_OnvifZoomIn<WithAsyncMethod_OnvifZoomOut<WithAsyncMethod_OnvifZoomStop<WithAsyncMethod_OnvifFocusNear<WithAsyncMethod_OnvifFocusFar<WithAsyncMethod_OnvifFocusStop<WithAsyncMethod_OnvifPtz3D<WithAsyncMethod_OnvifGetPreset<WithAsyncMethod_OnvifGotoPreset<WithAsyncMethod_OnvifSetPreset<WithAsyncMethod_OnvifDeviceReboot<WithAsyncMethod_OnvifGetMainUrl<WithAsyncMethod_OnvifGetSubUrl<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PtzCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PtzCommand() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzCommandRequest, ::GB28181::ControlReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PtzCommandRequest* request, ::GB28181::ControlReply* response) { return this->PtzCommand(context, request, response); }));}
    void SetMessageAllocatorFor_PtzCommand(
        ::grpc::experimental::MessageAllocator< ::GB28181::PtzCommandRequest, ::GB28181::ControlReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzCommandRequest, ::GB28181::ControlReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PtzCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzCommand(::grpc::ServerContext* /*context*/, const ::GB28181::PtzCommandRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PtzCommandRequest* /*request*/, ::GB28181::ControlReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzCommand(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PtzCommandRequest* /*request*/, ::GB28181::ControlReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PtzZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PtzZoomIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzZoomInRequest, ::GB28181::PtzZoomInReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PtzZoomInRequest* request, ::GB28181::PtzZoomInReply* response) { return this->PtzZoomIn(context, request, response); }));}
    void SetMessageAllocatorFor_PtzZoomIn(
        ::grpc::experimental::MessageAllocator< ::GB28181::PtzZoomInRequest, ::GB28181::PtzZoomInReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzZoomInRequest, ::GB28181::PtzZoomInReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PtzZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomInRequest* /*request*/, ::GB28181::PtzZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzZoomIn(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PtzZoomInRequest* /*request*/, ::GB28181::PtzZoomInReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzZoomIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PtzZoomInRequest* /*request*/, ::GB28181::PtzZoomInReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PtzZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PtzZoomOut() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzZoomOutRequest, ::GB28181::PtzZoomOutReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PtzZoomOutRequest* request, ::GB28181::PtzZoomOutReply* response) { return this->PtzZoomOut(context, request, response); }));}
    void SetMessageAllocatorFor_PtzZoomOut(
        ::grpc::experimental::MessageAllocator< ::GB28181::PtzZoomOutRequest, ::GB28181::PtzZoomOutReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzZoomOutRequest, ::GB28181::PtzZoomOutReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PtzZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomOutRequest* /*request*/, ::GB28181::PtzZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzZoomOut(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PtzZoomOutRequest* /*request*/, ::GB28181::PtzZoomOutReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzZoomOut(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PtzZoomOutRequest* /*request*/, ::GB28181::PtzZoomOutReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PtzIrisBig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PtzIrisBig() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzIrisBigRequest, ::GB28181::PtzIrisBigReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PtzIrisBigRequest* request, ::GB28181::PtzIrisBigReply* response) { return this->PtzIrisBig(context, request, response); }));}
    void SetMessageAllocatorFor_PtzIrisBig(
        ::grpc::experimental::MessageAllocator< ::GB28181::PtzIrisBigRequest, ::GB28181::PtzIrisBigReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzIrisBigRequest, ::GB28181::PtzIrisBigReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PtzIrisBig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIrisBig(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisBigRequest* /*request*/, ::GB28181::PtzIrisBigReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzIrisBig(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PtzIrisBigRequest* /*request*/, ::GB28181::PtzIrisBigReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzIrisBig(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PtzIrisBigRequest* /*request*/, ::GB28181::PtzIrisBigReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PtzIrisSmall : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PtzIrisSmall() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzIrisSmallRequest, ::GB28181::PtzIrisSmallReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PtzIrisSmallRequest* request, ::GB28181::PtzIrisSmallReply* response) { return this->PtzIrisSmall(context, request, response); }));}
    void SetMessageAllocatorFor_PtzIrisSmall(
        ::grpc::experimental::MessageAllocator< ::GB28181::PtzIrisSmallRequest, ::GB28181::PtzIrisSmallReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzIrisSmallRequest, ::GB28181::PtzIrisSmallReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PtzIrisSmall() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIrisSmall(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisSmallRequest* /*request*/, ::GB28181::PtzIrisSmallReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzIrisSmall(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PtzIrisSmallRequest* /*request*/, ::GB28181::PtzIrisSmallReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzIrisSmall(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PtzIrisSmallRequest* /*request*/, ::GB28181::PtzIrisSmallReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PtzFocusOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PtzFocusOut() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzFocusOutRequest, ::GB28181::PtzFocusOutReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PtzFocusOutRequest* request, ::GB28181::PtzFocusOutReply* response) { return this->PtzFocusOut(context, request, response); }));}
    void SetMessageAllocatorFor_PtzFocusOut(
        ::grpc::experimental::MessageAllocator< ::GB28181::PtzFocusOutRequest, ::GB28181::PtzFocusOutReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(5);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzFocusOutRequest, ::GB28181::PtzFocusOutReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PtzFocusOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzFocusOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusOutRequest* /*request*/, ::GB28181::PtzFocusOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzFocusOut(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PtzFocusOutRequest* /*request*/, ::GB28181::PtzFocusOutReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzFocusOut(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PtzFocusOutRequest* /*request*/, ::GB28181::PtzFocusOutReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PtzFocusIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PtzFocusIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(6,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzFocusInRequest, ::GB28181::PtzFocusInReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PtzFocusInRequest* request, ::GB28181::PtzFocusInReply* response) { return this->PtzFocusIn(context, request, response); }));}
    void SetMessageAllocatorFor_PtzFocusIn(
        ::grpc::experimental::MessageAllocator< ::GB28181::PtzFocusInRequest, ::GB28181::PtzFocusInReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(6);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzFocusInRequest, ::GB28181::PtzFocusInReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PtzFocusIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzFocusIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusInRequest* /*request*/, ::GB28181::PtzFocusInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzFocusIn(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PtzFocusInRequest* /*request*/, ::GB28181::PtzFocusInReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzFocusIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PtzFocusInRequest* /*request*/, ::GB28181::PtzFocusInReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PtzIFStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PtzIFStop() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(7,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzIFStopRequest, ::GB28181::PtzIFStopReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PtzIFStopRequest* request, ::GB28181::PtzIFStopReply* response) { return this->PtzIFStop(context, request, response); }));}
    void SetMessageAllocatorFor_PtzIFStop(
        ::grpc::experimental::MessageAllocator< ::GB28181::PtzIFStopRequest, ::GB28181::PtzIFStopReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(7);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzIFStopRequest, ::GB28181::PtzIFStopReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PtzIFStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIFStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIFStopRequest* /*request*/, ::GB28181::PtzIFStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzIFStop(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PtzIFStopRequest* /*request*/, ::GB28181::PtzIFStopReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzIFStop(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PtzIFStopRequest* /*request*/, ::GB28181::PtzIFStopReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PtzStop() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(8,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzStopRequest, ::GB28181::PtzStopReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PtzStopRequest* request, ::GB28181::PtzStopReply* response) { return this->PtzStop(context, request, response); }));}
    void SetMessageAllocatorFor_PtzStop(
        ::grpc::experimental::MessageAllocator< ::GB28181::PtzStopRequest, ::GB28181::PtzStopReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(8);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PtzStopRequest, ::GB28181::PtzStopReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzStopRequest* /*request*/, ::GB28181::PtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzStop(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PtzStopRequest* /*request*/, ::GB28181::PtzStopReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzStop(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PtzStopRequest* /*request*/, ::GB28181::PtzStopReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetRealPlayUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetRealPlayUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(9,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::RealPlayUrlRequest, ::GB28181::RealPlayUrlReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::RealPlayUrlRequest* request, ::GB28181::RealPlayUrlReply* response) { return this->GetRealPlayUrl(context, request, response); }));}
    void SetMessageAllocatorFor_GetRealPlayUrl(
        ::grpc::experimental::MessageAllocator< ::GB28181::RealPlayUrlRequest, ::GB28181::RealPlayUrlReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(9);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::RealPlayUrlRequest, ::GB28181::RealPlayUrlReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetRealPlayUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealPlayUrl(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlRequest* /*request*/, ::GB28181::RealPlayUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRealPlayUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::RealPlayUrlRequest* /*request*/, ::GB28181::RealPlayUrlReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRealPlayUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::RealPlayUrlRequest* /*request*/, ::GB28181::RealPlayUrlReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetRTMPUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetRTMPUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(10,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetRTMPUrlRequest, ::GB28181::GetRTMPUrlReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GetRTMPUrlRequest* request, ::GB28181::GetRTMPUrlReply* response) { return this->GetRTMPUrl(context, request, response); }));}
    void SetMessageAllocatorFor_GetRTMPUrl(
        ::grpc::experimental::MessageAllocator< ::GB28181::GetRTMPUrlRequest, ::GB28181::GetRTMPUrlReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(10);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetRTMPUrlRequest, ::GB28181::GetRTMPUrlReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetRTMPUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRTMPUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlRequest* /*request*/, ::GB28181::GetRTMPUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRTMPUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GetRTMPUrlRequest* /*request*/, ::GB28181::GetRTMPUrlReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRTMPUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GetRTMPUrlRequest* /*request*/, ::GB28181::GetRTMPUrlReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetHLSUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetHLSUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(11,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetHLSUrlRequest, ::GB28181::GetHLSUrlReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GetHLSUrlRequest* request, ::GB28181::GetHLSUrlReply* response) { return this->GetHLSUrl(context, request, response); }));}
    void SetMessageAllocatorFor_GetHLSUrl(
        ::grpc::experimental::MessageAllocator< ::GB28181::GetHLSUrlRequest, ::GB28181::GetHLSUrlReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(11);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetHLSUrlRequest, ::GB28181::GetHLSUrlReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetHLSUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHLSUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlRequest* /*request*/, ::GB28181::GetHLSUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetHLSUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GetHLSUrlRequest* /*request*/, ::GB28181::GetHLSUrlReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetHLSUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GetHLSUrlRequest* /*request*/, ::GB28181::GetHLSUrlReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetRealPlayUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetRealPlayUrlIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(12,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::RealPlayUrlInRequest, ::GB28181::RealPlayUrlInReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::RealPlayUrlInRequest* request, ::GB28181::RealPlayUrlInReply* response) { return this->GetRealPlayUrlIn(context, request, response); }));}
    void SetMessageAllocatorFor_GetRealPlayUrlIn(
        ::grpc::experimental::MessageAllocator< ::GB28181::RealPlayUrlInRequest, ::GB28181::RealPlayUrlInReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(12);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::RealPlayUrlInRequest, ::GB28181::RealPlayUrlInReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetRealPlayUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealPlayUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlInRequest* /*request*/, ::GB28181::RealPlayUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRealPlayUrlIn(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::RealPlayUrlInRequest* /*request*/, ::GB28181::RealPlayUrlInReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRealPlayUrlIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::RealPlayUrlInRequest* /*request*/, ::GB28181::RealPlayUrlInReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetRTMPUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetRTMPUrlIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(13,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetRTMPUrlInRequest, ::GB28181::GetRTMPUrlInReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GetRTMPUrlInRequest* request, ::GB28181::GetRTMPUrlInReply* response) { return this->GetRTMPUrlIn(context, request, response); }));}
    void SetMessageAllocatorFor_GetRTMPUrlIn(
        ::grpc::experimental::MessageAllocator< ::GB28181::GetRTMPUrlInRequest, ::GB28181::GetRTMPUrlInReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(13);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetRTMPUrlInRequest, ::GB28181::GetRTMPUrlInReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetRTMPUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRTMPUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlInRequest* /*request*/, ::GB28181::GetRTMPUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRTMPUrlIn(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GetRTMPUrlInRequest* /*request*/, ::GB28181::GetRTMPUrlInReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRTMPUrlIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GetRTMPUrlInRequest* /*request*/, ::GB28181::GetRTMPUrlInReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetHLSUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetHLSUrlIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(14,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetHLSUrlInRequest, ::GB28181::GetHLSUrlInReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GetHLSUrlInRequest* request, ::GB28181::GetHLSUrlInReply* response) { return this->GetHLSUrlIn(context, request, response); }));}
    void SetMessageAllocatorFor_GetHLSUrlIn(
        ::grpc::experimental::MessageAllocator< ::GB28181::GetHLSUrlInRequest, ::GB28181::GetHLSUrlInReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(14);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetHLSUrlInRequest, ::GB28181::GetHLSUrlInReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetHLSUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHLSUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlInRequest* /*request*/, ::GB28181::GetHLSUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetHLSUrlIn(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GetHLSUrlInRequest* /*request*/, ::GB28181::GetHLSUrlInReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetHLSUrlIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GetHLSUrlInRequest* /*request*/, ::GB28181::GetHLSUrlInReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopVideoById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopVideoById() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(15,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StopVideoByIdRequest, ::GB28181::StopVideoByIdReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::StopVideoByIdRequest* request, ::GB28181::StopVideoByIdReply* response) { return this->StopVideoById(context, request, response); }));}
    void SetMessageAllocatorFor_StopVideoById(
        ::grpc::experimental::MessageAllocator< ::GB28181::StopVideoByIdRequest, ::GB28181::StopVideoByIdReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(15);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StopVideoByIdRequest, ::GB28181::StopVideoByIdReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopVideoById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopVideoById(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoByIdRequest* /*request*/, ::GB28181::StopVideoByIdReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopVideoById(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::StopVideoByIdRequest* /*request*/, ::GB28181::StopVideoByIdReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopVideoById(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::StopVideoByIdRequest* /*request*/, ::GB28181::StopVideoByIdReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopVideoBySsrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopVideoBySsrc() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(16,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StopVideoBySsrcRequest, ::GB28181::StopVideoBySsrcReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::StopVideoBySsrcRequest* request, ::GB28181::StopVideoBySsrcReply* response) { return this->StopVideoBySsrc(context, request, response); }));}
    void SetMessageAllocatorFor_StopVideoBySsrc(
        ::grpc::experimental::MessageAllocator< ::GB28181::StopVideoBySsrcRequest, ::GB28181::StopVideoBySsrcReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(16);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StopVideoBySsrcRequest, ::GB28181::StopVideoBySsrcReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopVideoBySsrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopVideoBySsrc(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoBySsrcRequest* /*request*/, ::GB28181::StopVideoBySsrcReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopVideoBySsrc(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::StopVideoBySsrcRequest* /*request*/, ::GB28181::StopVideoBySsrcReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopVideoBySsrc(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::StopVideoBySsrcRequest* /*request*/, ::GB28181::StopVideoBySsrcReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetPlayBackUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetPlayBackUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(17,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PlayBackUrlRequest, ::GB28181::PlayBackUrlReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PlayBackUrlRequest* request, ::GB28181::PlayBackUrlReply* response) { return this->GetPlayBackUrl(context, request, response); }));}
    void SetMessageAllocatorFor_GetPlayBackUrl(
        ::grpc::experimental::MessageAllocator< ::GB28181::PlayBackUrlRequest, ::GB28181::PlayBackUrlReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(17);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PlayBackUrlRequest, ::GB28181::PlayBackUrlReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetPlayBackUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPlayBackUrl(::grpc::ServerContext* /*context*/, const ::GB28181::PlayBackUrlRequest* /*request*/, ::GB28181::PlayBackUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetPlayBackUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PlayBackUrlRequest* /*request*/, ::GB28181::PlayBackUrlReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetPlayBackUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PlayBackUrlRequest* /*request*/, ::GB28181::PlayBackUrlReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PresetGo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PresetGo() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(18,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PresetGoRequest, ::GB28181::ControlReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PresetGoRequest* request, ::GB28181::ControlReply* response) { return this->PresetGo(context, request, response); }));}
    void SetMessageAllocatorFor_PresetGo(
        ::grpc::experimental::MessageAllocator< ::GB28181::PresetGoRequest, ::GB28181::ControlReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(18);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PresetGoRequest, ::GB28181::ControlReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PresetGo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetGo(::grpc::ServerContext* /*context*/, const ::GB28181::PresetGoRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PresetGo(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PresetGoRequest* /*request*/, ::GB28181::ControlReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PresetGo(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PresetGoRequest* /*request*/, ::GB28181::ControlReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PresetSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PresetSet() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(19,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PresetSetRequest, ::GB28181::ControlReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PresetSetRequest* request, ::GB28181::ControlReply* response) { return this->PresetSet(context, request, response); }));}
    void SetMessageAllocatorFor_PresetSet(
        ::grpc::experimental::MessageAllocator< ::GB28181::PresetSetRequest, ::GB28181::ControlReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(19);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PresetSetRequest, ::GB28181::ControlReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PresetSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetSet(::grpc::ServerContext* /*context*/, const ::GB28181::PresetSetRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PresetSet(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PresetSetRequest* /*request*/, ::GB28181::ControlReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PresetSet(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PresetSetRequest* /*request*/, ::GB28181::ControlReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PresetDel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PresetDel() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(20,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PresetDelRequest, ::GB28181::ControlReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PresetDelRequest* request, ::GB28181::ControlReply* response) { return this->PresetDel(context, request, response); }));}
    void SetMessageAllocatorFor_PresetDel(
        ::grpc::experimental::MessageAllocator< ::GB28181::PresetDelRequest, ::GB28181::ControlReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(20);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PresetDelRequest, ::GB28181::ControlReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PresetDel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetDel(::grpc::ServerContext* /*context*/, const ::GB28181::PresetDelRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PresetDel(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PresetDelRequest* /*request*/, ::GB28181::ControlReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PresetDel(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PresetDelRequest* /*request*/, ::GB28181::ControlReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PresetQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PresetQuery() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(21,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PresetQueryRequest, ::GB28181::PresetQueryReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PresetQueryRequest* request, ::GB28181::PresetQueryReply* response) { return this->PresetQuery(context, request, response); }));}
    void SetMessageAllocatorFor_PresetQuery(
        ::grpc::experimental::MessageAllocator< ::GB28181::PresetQueryRequest, ::GB28181::PresetQueryReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(21);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PresetQueryRequest, ::GB28181::PresetQueryReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PresetQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetQuery(::grpc::ServerContext* /*context*/, const ::GB28181::PresetQueryRequest* /*request*/, ::GB28181::PresetQueryReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PresetQuery(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PresetQueryRequest* /*request*/, ::GB28181::PresetQueryReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PresetQuery(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PresetQueryRequest* /*request*/, ::GB28181::PresetQueryReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetPreset() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(22,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetPresetRequest, ::GB28181::GetPresetReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GetPresetRequest* request, ::GB28181::GetPresetReply* response) { return this->GetPreset(context, request, response); }));}
    void SetMessageAllocatorFor_GetPreset(
        ::grpc::experimental::MessageAllocator< ::GB28181::GetPresetRequest, ::GB28181::GetPresetReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(22);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetPresetRequest, ::GB28181::GetPresetReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::GetPresetRequest* /*request*/, ::GB28181::GetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetPreset(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GetPresetRequest* /*request*/, ::GB28181::GetPresetReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetPreset(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GetPresetRequest* /*request*/, ::GB28181::GetPresetReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_QueryRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_QueryRecord() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(23,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::QueryRecordRequest, ::GB28181::QueryRecordReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::QueryRecordRequest* request, ::GB28181::QueryRecordReply* response) { return this->QueryRecord(context, request, response); }));}
    void SetMessageAllocatorFor_QueryRecord(
        ::grpc::experimental::MessageAllocator< ::GB28181::QueryRecordRequest, ::GB28181::QueryRecordReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(23);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::QueryRecordRequest, ::GB28181::QueryRecordReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_QueryRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryRecord(::grpc::ServerContext* /*context*/, const ::GB28181::QueryRecordRequest* /*request*/, ::GB28181::QueryRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* QueryRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::QueryRecordRequest* /*request*/, ::GB28181::QueryRecordReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* QueryRecord(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::QueryRecordRequest* /*request*/, ::GB28181::QueryRecordReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetRecord() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(24,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetRecordRequest, ::GB28181::GetRecordReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GetRecordRequest* request, ::GB28181::GetRecordReply* response) { return this->GetRecord(context, request, response); }));}
    void SetMessageAllocatorFor_GetRecord(
        ::grpc::experimental::MessageAllocator< ::GB28181::GetRecordRequest, ::GB28181::GetRecordReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(24);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetRecordRequest, ::GB28181::GetRecordReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::GB28181::GetRecordRequest* /*request*/, ::GB28181::GetRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GetRecordRequest* /*request*/, ::GB28181::GetRecordReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRecord(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GetRecordRequest* /*request*/, ::GB28181::GetRecordReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PlayFast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PlayFast() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(25,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PlayFastRequest, ::GB28181::PlayFastReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PlayFastRequest* request, ::GB28181::PlayFastReply* response) { return this->PlayFast(context, request, response); }));}
    void SetMessageAllocatorFor_PlayFast(
        ::grpc::experimental::MessageAllocator< ::GB28181::PlayFastRequest, ::GB28181::PlayFastReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(25);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PlayFastRequest, ::GB28181::PlayFastReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PlayFast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlayFast(::grpc::ServerContext* /*context*/, const ::GB28181::PlayFastRequest* /*request*/, ::GB28181::PlayFastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PlayFast(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PlayFastRequest* /*request*/, ::GB28181::PlayFastReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PlayFast(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PlayFastRequest* /*request*/, ::GB28181::PlayFastReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PlaySlow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PlaySlow() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(26,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PlaySlowRequest, ::GB28181::PlaySlowReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PlaySlowRequest* request, ::GB28181::PlaySlowReply* response) { return this->PlaySlow(context, request, response); }));}
    void SetMessageAllocatorFor_PlaySlow(
        ::grpc::experimental::MessageAllocator< ::GB28181::PlaySlowRequest, ::GB28181::PlaySlowReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(26);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(26);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PlaySlowRequest, ::GB28181::PlaySlowReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PlaySlow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaySlow(::grpc::ServerContext* /*context*/, const ::GB28181::PlaySlowRequest* /*request*/, ::GB28181::PlaySlowReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PlaySlow(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PlaySlowRequest* /*request*/, ::GB28181::PlaySlowReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PlaySlow(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PlaySlowRequest* /*request*/, ::GB28181::PlaySlowReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Pause : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Pause() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(27,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PauseRequest, ::GB28181::PauseReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PauseRequest* request, ::GB28181::PauseReply* response) { return this->Pause(context, request, response); }));}
    void SetMessageAllocatorFor_Pause(
        ::grpc::experimental::MessageAllocator< ::GB28181::PauseRequest, ::GB28181::PauseReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(27);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PauseRequest, ::GB28181::PauseReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Pause() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Pause(::grpc::ServerContext* /*context*/, const ::GB28181::PauseRequest* /*request*/, ::GB28181::PauseReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Pause(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PauseRequest* /*request*/, ::GB28181::PauseReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Pause(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PauseRequest* /*request*/, ::GB28181::PauseReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Play : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Play() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(28,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PlayRequest, ::GB28181::PlayReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::PlayRequest* request, ::GB28181::PlayReply* response) { return this->Play(context, request, response); }));}
    void SetMessageAllocatorFor_Play(
        ::grpc::experimental::MessageAllocator< ::GB28181::PlayRequest, ::GB28181::PlayReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(28);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::PlayRequest, ::GB28181::PlayReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Play() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Play(::grpc::ServerContext* /*context*/, const ::GB28181::PlayRequest* /*request*/, ::GB28181::PlayReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Play(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::PlayRequest* /*request*/, ::GB28181::PlayReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Play(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::PlayRequest* /*request*/, ::GB28181::PlayReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_Seek : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_Seek() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(29,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::SeekRequest, ::GB28181::SeekReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::SeekRequest* request, ::GB28181::SeekReply* response) { return this->Seek(context, request, response); }));}
    void SetMessageAllocatorFor_Seek(
        ::grpc::experimental::MessageAllocator< ::GB28181::SeekRequest, ::GB28181::SeekReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(29);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::SeekRequest, ::GB28181::SeekReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_Seek() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Seek(::grpc::ServerContext* /*context*/, const ::GB28181::SeekRequest* /*request*/, ::GB28181::SeekReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Seek(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::SeekRequest* /*request*/, ::GB28181::SeekReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Seek(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::SeekRequest* /*request*/, ::GB28181::SeekReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GoForward : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GoForward() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(30,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GoForwardRequest, ::GB28181::GoForwardReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GoForwardRequest* request, ::GB28181::GoForwardReply* response) { return this->GoForward(context, request, response); }));}
    void SetMessageAllocatorFor_GoForward(
        ::grpc::experimental::MessageAllocator< ::GB28181::GoForwardRequest, ::GB28181::GoForwardReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(30);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GoForwardRequest, ::GB28181::GoForwardReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GoForward() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GoForward(::grpc::ServerContext* /*context*/, const ::GB28181::GoForwardRequest* /*request*/, ::GB28181::GoForwardReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GoForward(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GoForwardRequest* /*request*/, ::GB28181::GoForwardReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GoForward(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GoForwardRequest* /*request*/, ::GB28181::GoForwardReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopPlayRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopPlayRecord() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(31,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StopPlayRecordRequest, ::GB28181::StopPlayRecordReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::StopPlayRecordRequest* request, ::GB28181::StopPlayRecordReply* response) { return this->StopPlayRecord(context, request, response); }));}
    void SetMessageAllocatorFor_StopPlayRecord(
        ::grpc::experimental::MessageAllocator< ::GB28181::StopPlayRecordRequest, ::GB28181::StopPlayRecordReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(31);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StopPlayRecordRequest, ::GB28181::StopPlayRecordReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopPlayRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayRecord(::grpc::ServerContext* /*context*/, const ::GB28181::StopPlayRecordRequest* /*request*/, ::GB28181::StopPlayRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopPlayRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::StopPlayRecordRequest* /*request*/, ::GB28181::StopPlayRecordReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopPlayRecord(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::StopPlayRecordRequest* /*request*/, ::GB28181::StopPlayRecordReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GoBack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GoBack() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(32,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GoBackRequest, ::GB28181::GoBackReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GoBackRequest* request, ::GB28181::GoBackReply* response) { return this->GoBack(context, request, response); }));}
    void SetMessageAllocatorFor_GoBack(
        ::grpc::experimental::MessageAllocator< ::GB28181::GoBackRequest, ::GB28181::GoBackReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(32);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GoBackRequest, ::GB28181::GoBackReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GoBack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GoBack(::grpc::ServerContext* /*context*/, const ::GB28181::GoBackRequest* /*request*/, ::GB28181::GoBackReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GoBack(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GoBackRequest* /*request*/, ::GB28181::GoBackReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GoBack(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GoBackRequest* /*request*/, ::GB28181::GoBackReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_RecordDownload : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_RecordDownload() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(33,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::RecordDownloadRequest, ::GB28181::RecordDownloadReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::RecordDownloadRequest* request, ::GB28181::RecordDownloadReply* response) { return this->RecordDownload(context, request, response); }));}
    void SetMessageAllocatorFor_RecordDownload(
        ::grpc::experimental::MessageAllocator< ::GB28181::RecordDownloadRequest, ::GB28181::RecordDownloadReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(33);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::RecordDownloadRequest, ::GB28181::RecordDownloadReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_RecordDownload() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RecordDownload(::grpc::ServerContext* /*context*/, const ::GB28181::RecordDownloadRequest* /*request*/, ::GB28181::RecordDownloadReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RecordDownload(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::RecordDownloadRequest* /*request*/, ::GB28181::RecordDownloadReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RecordDownload(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::RecordDownloadRequest* /*request*/, ::GB28181::RecordDownloadReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetDeviceStatus() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(34,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetDeviceStatusRequest, ::GB28181::GetDeviceStatusReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GetDeviceStatusRequest* request, ::GB28181::GetDeviceStatusReply* response) { return this->GetDeviceStatus(context, request, response); }));}
    void SetMessageAllocatorFor_GetDeviceStatus(
        ::grpc::experimental::MessageAllocator< ::GB28181::GetDeviceStatusRequest, ::GB28181::GetDeviceStatusReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(34);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetDeviceStatusRequest, ::GB28181::GetDeviceStatusReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceStatusRequest* /*request*/, ::GB28181::GetDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetDeviceStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GetDeviceStatusRequest* /*request*/, ::GB28181::GetDeviceStatusReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetDeviceStatus(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GetDeviceStatusRequest* /*request*/, ::GB28181::GetDeviceStatusReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetAllDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetAllDeviceStatus() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(35,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetAllDeviceStatusRequest, ::GB28181::GetAllDeviceStatusReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GetAllDeviceStatusRequest* request, ::GB28181::GetAllDeviceStatusReply* response) { return this->GetAllDeviceStatus(context, request, response); }));}
    void SetMessageAllocatorFor_GetAllDeviceStatus(
        ::grpc::experimental::MessageAllocator< ::GB28181::GetAllDeviceStatusRequest, ::GB28181::GetAllDeviceStatusReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(35);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetAllDeviceStatusRequest, ::GB28181::GetAllDeviceStatusReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetAllDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetAllDeviceStatusRequest* /*request*/, ::GB28181::GetAllDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetAllDeviceStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GetAllDeviceStatusRequest* /*request*/, ::GB28181::GetAllDeviceStatusReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetAllDeviceStatus(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GetAllDeviceStatusRequest* /*request*/, ::GB28181::GetAllDeviceStatusReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetDeviceList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetDeviceList() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(36,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetDeviceListRequest, ::GB28181::GetDeviceListReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::GetDeviceListRequest* request, ::GB28181::GetDeviceListReply* response) { return this->GetDeviceList(context, request, response); }));}
    void SetMessageAllocatorFor_GetDeviceList(
        ::grpc::experimental::MessageAllocator< ::GB28181::GetDeviceListRequest, ::GB28181::GetDeviceListReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(36);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(36);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::GetDeviceListRequest, ::GB28181::GetDeviceListReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetDeviceList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceList(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceListRequest* /*request*/, ::GB28181::GetDeviceListReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetDeviceList(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::GetDeviceListRequest* /*request*/, ::GB28181::GetDeviceListReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetDeviceList(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::GetDeviceListRequest* /*request*/, ::GB28181::GetDeviceListReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeviceReboot() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(37,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::DeviceRebootRequest, ::GB28181::DeviceRebootReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::DeviceRebootRequest* request, ::GB28181::DeviceRebootReply* response) { return this->DeviceReboot(context, request, response); }));}
    void SetMessageAllocatorFor_DeviceReboot(
        ::grpc::experimental::MessageAllocator< ::GB28181::DeviceRebootRequest, ::GB28181::DeviceRebootReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(37);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(37);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::DeviceRebootRequest, ::GB28181::DeviceRebootReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::DeviceRebootRequest* /*request*/, ::GB28181::DeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeviceReboot(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::DeviceRebootRequest* /*request*/, ::GB28181::DeviceRebootReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeviceReboot(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::DeviceRebootRequest* /*request*/, ::GB28181::DeviceRebootReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StartBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StartBroadcast() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(38,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StartBroadcastRequest, ::GB28181::StartBroadcastReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::StartBroadcastRequest* request, ::GB28181::StartBroadcastReply* response) { return this->StartBroadcast(context, request, response); }));}
    void SetMessageAllocatorFor_StartBroadcast(
        ::grpc::experimental::MessageAllocator< ::GB28181::StartBroadcastRequest, ::GB28181::StartBroadcastReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(38);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(38);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StartBroadcastRequest, ::GB28181::StartBroadcastReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StartBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StartBroadcastRequest* /*request*/, ::GB28181::StartBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartBroadcast(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::StartBroadcastRequest* /*request*/, ::GB28181::StartBroadcastReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartBroadcast(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::StartBroadcastRequest* /*request*/, ::GB28181::StartBroadcastReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopBroadcast() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(39,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StopBroadcastRequest, ::GB28181::StopBroadcastReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::StopBroadcastRequest* request, ::GB28181::StopBroadcastReply* response) { return this->StopBroadcast(context, request, response); }));}
    void SetMessageAllocatorFor_StopBroadcast(
        ::grpc::experimental::MessageAllocator< ::GB28181::StopBroadcastRequest, ::GB28181::StopBroadcastReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(39);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(39);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StopBroadcastRequest, ::GB28181::StopBroadcastReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StopBroadcastRequest* /*request*/, ::GB28181::StopBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopBroadcast(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::StopBroadcastRequest* /*request*/, ::GB28181::StopBroadcastReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopBroadcast(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::StopBroadcastRequest* /*request*/, ::GB28181::StopBroadcastReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StartTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StartTalk() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(40,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StartTalkRequest, ::GB28181::StartTalkReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::StartTalkRequest* request, ::GB28181::StartTalkReply* response) { return this->StartTalk(context, request, response); }));}
    void SetMessageAllocatorFor_StartTalk(
        ::grpc::experimental::MessageAllocator< ::GB28181::StartTalkRequest, ::GB28181::StartTalkReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(40);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(40);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StartTalkRequest, ::GB28181::StartTalkReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StartTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StartTalkRequest* /*request*/, ::GB28181::StartTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartTalk(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::StartTalkRequest* /*request*/, ::GB28181::StartTalkReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartTalk(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::StartTalkRequest* /*request*/, ::GB28181::StartTalkReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_StopTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_StopTalk() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(41,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StopTalkRequest, ::GB28181::StopTalkReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::StopTalkRequest* request, ::GB28181::StopTalkReply* response) { return this->StopTalk(context, request, response); }));}
    void SetMessageAllocatorFor_StopTalk(
        ::grpc::experimental::MessageAllocator< ::GB28181::StopTalkRequest, ::GB28181::StopTalkReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(41);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(41);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::StopTalkRequest, ::GB28181::StopTalkReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_StopTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StopTalkRequest* /*request*/, ::GB28181::StopTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopTalk(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::StopTalkRequest* /*request*/, ::GB28181::StopTalkReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopTalk(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::StopTalkRequest* /*request*/, ::GB28181::StopTalkReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ServiceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ServiceStatus() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(42,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::ServiceStatusRequest, ::GB28181::ServiceStatusReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::ServiceStatusRequest* request, ::GB28181::ServiceStatusReply* response) { return this->ServiceStatus(context, request, response); }));}
    void SetMessageAllocatorFor_ServiceStatus(
        ::grpc::experimental::MessageAllocator< ::GB28181::ServiceStatusRequest, ::GB28181::ServiceStatusReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(42);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(42);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::ServiceStatusRequest, ::GB28181::ServiceStatusReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ServiceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ServiceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::ServiceStatusRequest* /*request*/, ::GB28181::ServiceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ServiceStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::ServiceStatusRequest* /*request*/, ::GB28181::ServiceStatusReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ServiceStatus(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::ServiceStatusRequest* /*request*/, ::GB28181::ServiceStatusReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifPtzMove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifPtzMove() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(43,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifPtzMoveRequest, ::GB28181::OnvifPtzMoveReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifPtzMoveRequest* request, ::GB28181::OnvifPtzMoveReply* response) { return this->OnvifPtzMove(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifPtzMove(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifPtzMoveRequest, ::GB28181::OnvifPtzMoveReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(43);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(43);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifPtzMoveRequest, ::GB28181::OnvifPtzMoveReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifPtzMove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtzMove(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzMoveRequest* /*request*/, ::GB28181::OnvifPtzMoveReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifPtzMove(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifPtzMoveRequest* /*request*/, ::GB28181::OnvifPtzMoveReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifPtzMove(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifPtzMoveRequest* /*request*/, ::GB28181::OnvifPtzMoveReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifPtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifPtzStop() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(44,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifPtzStopRequest, ::GB28181::OnvifPtzStopReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifPtzStopRequest* request, ::GB28181::OnvifPtzStopReply* response) { return this->OnvifPtzStop(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifPtzStop(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifPtzStopRequest, ::GB28181::OnvifPtzStopReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(44);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(44);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifPtzStopRequest, ::GB28181::OnvifPtzStopReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifPtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzStopRequest* /*request*/, ::GB28181::OnvifPtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifPtzStop(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifPtzStopRequest* /*request*/, ::GB28181::OnvifPtzStopReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifPtzStop(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifPtzStopRequest* /*request*/, ::GB28181::OnvifPtzStopReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifZoomIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(45,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifZoomInRequest, ::GB28181::OnvifZoomInReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifZoomInRequest* request, ::GB28181::OnvifZoomInReply* response) { return this->OnvifZoomIn(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifZoomIn(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifZoomInRequest, ::GB28181::OnvifZoomInReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(45);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(45);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifZoomInRequest, ::GB28181::OnvifZoomInReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomInRequest* /*request*/, ::GB28181::OnvifZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifZoomIn(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifZoomInRequest* /*request*/, ::GB28181::OnvifZoomInReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifZoomIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifZoomInRequest* /*request*/, ::GB28181::OnvifZoomInReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifZoomOut() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(46,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifZoomOutRequest, ::GB28181::OnvifZoomOutReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifZoomOutRequest* request, ::GB28181::OnvifZoomOutReply* response) { return this->OnvifZoomOut(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifZoomOut(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifZoomOutRequest, ::GB28181::OnvifZoomOutReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(46);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(46);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifZoomOutRequest, ::GB28181::OnvifZoomOutReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomOutRequest* /*request*/, ::GB28181::OnvifZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifZoomOut(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifZoomOutRequest* /*request*/, ::GB28181::OnvifZoomOutReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifZoomOut(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifZoomOutRequest* /*request*/, ::GB28181::OnvifZoomOutReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifZoomStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifZoomStop() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(47,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifZoomStopRequest, ::GB28181::OnvifZoomStopReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifZoomStopRequest* request, ::GB28181::OnvifZoomStopReply* response) { return this->OnvifZoomStop(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifZoomStop(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifZoomStopRequest, ::GB28181::OnvifZoomStopReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(47);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(47);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifZoomStopRequest, ::GB28181::OnvifZoomStopReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifZoomStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomStopRequest* /*request*/, ::GB28181::OnvifZoomStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifZoomStop(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifZoomStopRequest* /*request*/, ::GB28181::OnvifZoomStopReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifZoomStop(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifZoomStopRequest* /*request*/, ::GB28181::OnvifZoomStopReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifFocusNear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifFocusNear() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(48,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifFocusNearRequest, ::GB28181::OnvifFocusNearReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifFocusNearRequest* request, ::GB28181::OnvifFocusNearReply* response) { return this->OnvifFocusNear(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifFocusNear(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifFocusNearRequest, ::GB28181::OnvifFocusNearReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(48);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(48);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifFocusNearRequest, ::GB28181::OnvifFocusNearReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifFocusNear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusNear(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusNearRequest* /*request*/, ::GB28181::OnvifFocusNearReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifFocusNear(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifFocusNearRequest* /*request*/, ::GB28181::OnvifFocusNearReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifFocusNear(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifFocusNearRequest* /*request*/, ::GB28181::OnvifFocusNearReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifFocusFar : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifFocusFar() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(49,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifFocusFarRequest, ::GB28181::OnvifFocusFarReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifFocusFarRequest* request, ::GB28181::OnvifFocusFarReply* response) { return this->OnvifFocusFar(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifFocusFar(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifFocusFarRequest, ::GB28181::OnvifFocusFarReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(49);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(49);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifFocusFarRequest, ::GB28181::OnvifFocusFarReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifFocusFar() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusFar(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusFarRequest* /*request*/, ::GB28181::OnvifFocusFarReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifFocusFar(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifFocusFarRequest* /*request*/, ::GB28181::OnvifFocusFarReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifFocusFar(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifFocusFarRequest* /*request*/, ::GB28181::OnvifFocusFarReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifFocusStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifFocusStop() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(50,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifFocusStopRequest, ::GB28181::OnvifFocusStopReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifFocusStopRequest* request, ::GB28181::OnvifFocusStopReply* response) { return this->OnvifFocusStop(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifFocusStop(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifFocusStopRequest, ::GB28181::OnvifFocusStopReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(50);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(50);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifFocusStopRequest, ::GB28181::OnvifFocusStopReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifFocusStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusStopRequest* /*request*/, ::GB28181::OnvifFocusStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifFocusStop(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifFocusStopRequest* /*request*/, ::GB28181::OnvifFocusStopReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifFocusStop(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifFocusStopRequest* /*request*/, ::GB28181::OnvifFocusStopReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifPtz3D : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifPtz3D() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(51,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifPtz3DRequest, ::GB28181::OnvifPtz3DReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifPtz3DRequest* request, ::GB28181::OnvifPtz3DReply* response) { return this->OnvifPtz3D(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifPtz3D(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifPtz3DRequest, ::GB28181::OnvifPtz3DReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(51);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(51);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifPtz3DRequest, ::GB28181::OnvifPtz3DReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifPtz3D() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtz3D(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtz3DRequest* /*request*/, ::GB28181::OnvifPtz3DReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifPtz3D(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifPtz3DRequest* /*request*/, ::GB28181::OnvifPtz3DReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifPtz3D(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifPtz3DRequest* /*request*/, ::GB28181::OnvifPtz3DReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifGetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifGetPreset() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(52,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifGetPresetRequest, ::GB28181::OnvifGetPresetReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifGetPresetRequest* request, ::GB28181::OnvifGetPresetReply* response) { return this->OnvifGetPreset(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifGetPreset(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifGetPresetRequest, ::GB28181::OnvifGetPresetReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(52);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(52);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifGetPresetRequest, ::GB28181::OnvifGetPresetReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifGetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetPresetRequest* /*request*/, ::GB28181::OnvifGetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifGetPreset(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifGetPresetRequest* /*request*/, ::GB28181::OnvifGetPresetReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifGetPreset(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifGetPresetRequest* /*request*/, ::GB28181::OnvifGetPresetReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifGotoPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifGotoPreset() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(53,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifGotoPresetRequest, ::GB28181::OnvifGotoPresetReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifGotoPresetRequest* request, ::GB28181::OnvifGotoPresetReply* response) { return this->OnvifGotoPreset(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifGotoPreset(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifGotoPresetRequest, ::GB28181::OnvifGotoPresetReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(53);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(53);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifGotoPresetRequest, ::GB28181::OnvifGotoPresetReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifGotoPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGotoPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGotoPresetRequest* /*request*/, ::GB28181::OnvifGotoPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifGotoPreset(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifGotoPresetRequest* /*request*/, ::GB28181::OnvifGotoPresetReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifGotoPreset(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifGotoPresetRequest* /*request*/, ::GB28181::OnvifGotoPresetReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifSetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifSetPreset() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(54,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifSetPresetRequest, ::GB28181::OnvifSetPresetReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifSetPresetRequest* request, ::GB28181::OnvifSetPresetReply* response) { return this->OnvifSetPreset(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifSetPreset(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifSetPresetRequest, ::GB28181::OnvifSetPresetReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(54);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(54);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifSetPresetRequest, ::GB28181::OnvifSetPresetReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifSetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifSetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifSetPresetRequest* /*request*/, ::GB28181::OnvifSetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifSetPreset(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifSetPresetRequest* /*request*/, ::GB28181::OnvifSetPresetReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifSetPreset(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifSetPresetRequest* /*request*/, ::GB28181::OnvifSetPresetReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifDeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifDeviceReboot() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(55,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifDeviceRebootRequest, ::GB28181::OnvifDeviceRebootReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifDeviceRebootRequest* request, ::GB28181::OnvifDeviceRebootReply* response) { return this->OnvifDeviceReboot(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifDeviceReboot(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifDeviceRebootRequest, ::GB28181::OnvifDeviceRebootReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(55);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(55);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifDeviceRebootRequest, ::GB28181::OnvifDeviceRebootReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifDeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifDeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifDeviceRebootRequest* /*request*/, ::GB28181::OnvifDeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifDeviceReboot(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifDeviceRebootRequest* /*request*/, ::GB28181::OnvifDeviceRebootReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifDeviceReboot(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifDeviceRebootRequest* /*request*/, ::GB28181::OnvifDeviceRebootReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifGetMainUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifGetMainUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(56,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifGetMainUrlRequest, ::GB28181::OnvifGetMainUrlReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifGetMainUrlRequest* request, ::GB28181::OnvifGetMainUrlReply* response) { return this->OnvifGetMainUrl(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifGetMainUrl(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifGetMainUrlRequest, ::GB28181::OnvifGetMainUrlReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(56);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(56);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifGetMainUrlRequest, ::GB28181::OnvifGetMainUrlReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifGetMainUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetMainUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetMainUrlRequest* /*request*/, ::GB28181::OnvifGetMainUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifGetMainUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifGetMainUrlRequest* /*request*/, ::GB28181::OnvifGetMainUrlReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifGetMainUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifGetMainUrlRequest* /*request*/, ::GB28181::OnvifGetMainUrlReply* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_OnvifGetSubUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_OnvifGetSubUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(57,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifGetSubUrlRequest, ::GB28181::OnvifGetSubUrlReply>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::GB28181::OnvifGetSubUrlRequest* request, ::GB28181::OnvifGetSubUrlReply* response) { return this->OnvifGetSubUrl(context, request, response); }));}
    void SetMessageAllocatorFor_OnvifGetSubUrl(
        ::grpc::experimental::MessageAllocator< ::GB28181::OnvifGetSubUrlRequest, ::GB28181::OnvifGetSubUrlReply>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(57);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(57);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::GB28181::OnvifGetSubUrlRequest, ::GB28181::OnvifGetSubUrlReply>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_OnvifGetSubUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetSubUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetSubUrlRequest* /*request*/, ::GB28181::OnvifGetSubUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifGetSubUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::GB28181::OnvifGetSubUrlRequest* /*request*/, ::GB28181::OnvifGetSubUrlReply* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifGetSubUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::GB28181::OnvifGetSubUrlRequest* /*request*/, ::GB28181::OnvifGetSubUrlReply* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_PtzCommand<ExperimentalWithCallbackMethod_PtzZoomIn<ExperimentalWithCallbackMethod_PtzZoomOut<ExperimentalWithCallbackMethod_PtzIrisBig<ExperimentalWithCallbackMethod_PtzIrisSmall<ExperimentalWithCallbackMethod_PtzFocusOut<ExperimentalWithCallbackMethod_PtzFocusIn<ExperimentalWithCallbackMethod_PtzIFStop<ExperimentalWithCallbackMethod_PtzStop<ExperimentalWithCallbackMethod_GetRealPlayUrl<ExperimentalWithCallbackMethod_GetRTMPUrl<ExperimentalWithCallbackMethod_GetHLSUrl<ExperimentalWithCallbackMethod_GetRealPlayUrlIn<ExperimentalWithCallbackMethod_GetRTMPUrlIn<ExperimentalWithCallbackMethod_GetHLSUrlIn<ExperimentalWithCallbackMethod_StopVideoById<ExperimentalWithCallbackMethod_StopVideoBySsrc<ExperimentalWithCallbackMethod_GetPlayBackUrl<ExperimentalWithCallbackMethod_PresetGo<ExperimentalWithCallbackMethod_PresetSet<ExperimentalWithCallbackMethod_PresetDel<ExperimentalWithCallbackMethod_PresetQuery<ExperimentalWithCallbackMethod_GetPreset<ExperimentalWithCallbackMethod_QueryRecord<ExperimentalWithCallbackMethod_GetRecord<ExperimentalWithCallbackMethod_PlayFast<ExperimentalWithCallbackMethod_PlaySlow<ExperimentalWithCallbackMethod_Pause<ExperimentalWithCallbackMethod_Play<ExperimentalWithCallbackMethod_Seek<ExperimentalWithCallbackMethod_GoForward<ExperimentalWithCallbackMethod_StopPlayRecord<ExperimentalWithCallbackMethod_GoBack<ExperimentalWithCallbackMethod_RecordDownload<ExperimentalWithCallbackMethod_GetDeviceStatus<ExperimentalWithCallbackMethod_GetAllDeviceStatus<ExperimentalWithCallbackMethod_GetDeviceList<ExperimentalWithCallbackMethod_DeviceReboot<ExperimentalWithCallbackMethod_StartBroadcast<ExperimentalWithCallbackMethod_StopBroadcast<ExperimentalWithCallbackMethod_StartTalk<ExperimentalWithCallbackMethod_StopTalk<ExperimentalWithCallbackMethod_ServiceStatus<ExperimentalWithCallbackMethod_OnvifPtzMove<ExperimentalWithCallbackMethod_OnvifPtzStop<ExperimentalWithCallbackMethod_OnvifZoomIn<ExperimentalWithCallbackMethod_OnvifZoomOut<ExperimentalWithCallbackMethod_OnvifZoomStop<ExperimentalWithCallbackMethod_OnvifFocusNear<ExperimentalWithCallbackMethod_OnvifFocusFar<ExperimentalWithCallbackMethod_OnvifFocusStop<ExperimentalWithCallbackMethod_OnvifPtz3D<ExperimentalWithCallbackMethod_OnvifGetPreset<ExperimentalWithCallbackMethod_OnvifGotoPreset<ExperimentalWithCallbackMethod_OnvifSetPreset<ExperimentalWithCallbackMethod_OnvifDeviceReboot<ExperimentalWithCallbackMethod_OnvifGetMainUrl<ExperimentalWithCallbackMethod_OnvifGetSubUrl<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_PtzCommand<ExperimentalWithCallbackMethod_PtzZoomIn<ExperimentalWithCallbackMethod_PtzZoomOut<ExperimentalWithCallbackMethod_PtzIrisBig<ExperimentalWithCallbackMethod_PtzIrisSmall<ExperimentalWithCallbackMethod_PtzFocusOut<ExperimentalWithCallbackMethod_PtzFocusIn<ExperimentalWithCallbackMethod_PtzIFStop<ExperimentalWithCallbackMethod_PtzStop<ExperimentalWithCallbackMethod_GetRealPlayUrl<ExperimentalWithCallbackMethod_GetRTMPUrl<ExperimentalWithCallbackMethod_GetHLSUrl<ExperimentalWithCallbackMethod_GetRealPlayUrlIn<ExperimentalWithCallbackMethod_GetRTMPUrlIn<ExperimentalWithCallbackMethod_GetHLSUrlIn<ExperimentalWithCallbackMethod_StopVideoById<ExperimentalWithCallbackMethod_StopVideoBySsrc<ExperimentalWithCallbackMethod_GetPlayBackUrl<ExperimentalWithCallbackMethod_PresetGo<ExperimentalWithCallbackMethod_PresetSet<ExperimentalWithCallbackMethod_PresetDel<ExperimentalWithCallbackMethod_PresetQuery<ExperimentalWithCallbackMethod_GetPreset<ExperimentalWithCallbackMethod_QueryRecord<ExperimentalWithCallbackMethod_GetRecord<ExperimentalWithCallbackMethod_PlayFast<ExperimentalWithCallbackMethod_PlaySlow<ExperimentalWithCallbackMethod_Pause<ExperimentalWithCallbackMethod_Play<ExperimentalWithCallbackMethod_Seek<ExperimentalWithCallbackMethod_GoForward<ExperimentalWithCallbackMethod_StopPlayRecord<ExperimentalWithCallbackMethod_GoBack<ExperimentalWithCallbackMethod_RecordDownload<ExperimentalWithCallbackMethod_GetDeviceStatus<ExperimentalWithCallbackMethod_GetAllDeviceStatus<ExperimentalWithCallbackMethod_GetDeviceList<ExperimentalWithCallbackMethod_DeviceReboot<ExperimentalWithCallbackMethod_StartBroadcast<ExperimentalWithCallbackMethod_StopBroadcast<ExperimentalWithCallbackMethod_StartTalk<ExperimentalWithCallbackMethod_StopTalk<ExperimentalWithCallbackMethod_ServiceStatus<ExperimentalWithCallbackMethod_OnvifPtzMove<ExperimentalWithCallbackMethod_OnvifPtzStop<ExperimentalWithCallbackMethod_OnvifZoomIn<ExperimentalWithCallbackMethod_OnvifZoomOut<ExperimentalWithCallbackMethod_OnvifZoomStop<ExperimentalWithCallbackMethod_OnvifFocusNear<ExperimentalWithCallbackMethod_OnvifFocusFar<ExperimentalWithCallbackMethod_OnvifFocusStop<ExperimentalWithCallbackMethod_OnvifPtz3D<ExperimentalWithCallbackMethod_OnvifGetPreset<ExperimentalWithCallbackMethod_OnvifGotoPreset<ExperimentalWithCallbackMethod_OnvifSetPreset<ExperimentalWithCallbackMethod_OnvifDeviceReboot<ExperimentalWithCallbackMethod_OnvifGetMainUrl<ExperimentalWithCallbackMethod_OnvifGetSubUrl<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_PtzCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PtzCommand() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_PtzCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzCommand(::grpc::ServerContext* /*context*/, const ::GB28181::PtzCommandRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PtzZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PtzZoomIn() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_PtzZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomInRequest* /*request*/, ::GB28181::PtzZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PtzZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PtzZoomOut() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_PtzZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomOutRequest* /*request*/, ::GB28181::PtzZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PtzIrisBig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PtzIrisBig() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_PtzIrisBig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIrisBig(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisBigRequest* /*request*/, ::GB28181::PtzIrisBigReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PtzIrisSmall : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PtzIrisSmall() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_PtzIrisSmall() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIrisSmall(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisSmallRequest* /*request*/, ::GB28181::PtzIrisSmallReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PtzFocusOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PtzFocusOut() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_PtzFocusOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzFocusOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusOutRequest* /*request*/, ::GB28181::PtzFocusOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PtzFocusIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PtzFocusIn() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_PtzFocusIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzFocusIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusInRequest* /*request*/, ::GB28181::PtzFocusInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PtzIFStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PtzIFStop() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_PtzIFStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIFStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIFStopRequest* /*request*/, ::GB28181::PtzIFStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PtzStop() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_PtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzStopRequest* /*request*/, ::GB28181::PtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRealPlayUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRealPlayUrl() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetRealPlayUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealPlayUrl(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlRequest* /*request*/, ::GB28181::RealPlayUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRTMPUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRTMPUrl() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetRTMPUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRTMPUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlRequest* /*request*/, ::GB28181::GetRTMPUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetHLSUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetHLSUrl() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetHLSUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHLSUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlRequest* /*request*/, ::GB28181::GetHLSUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRealPlayUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRealPlayUrlIn() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetRealPlayUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealPlayUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlInRequest* /*request*/, ::GB28181::RealPlayUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRTMPUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRTMPUrlIn() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetRTMPUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRTMPUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlInRequest* /*request*/, ::GB28181::GetRTMPUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetHLSUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetHLSUrlIn() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetHLSUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHLSUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlInRequest* /*request*/, ::GB28181::GetHLSUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopVideoById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopVideoById() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_StopVideoById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopVideoById(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoByIdRequest* /*request*/, ::GB28181::StopVideoByIdReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopVideoBySsrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopVideoBySsrc() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_StopVideoBySsrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopVideoBySsrc(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoBySsrcRequest* /*request*/, ::GB28181::StopVideoBySsrcReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPlayBackUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPlayBackUrl() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetPlayBackUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPlayBackUrl(::grpc::ServerContext* /*context*/, const ::GB28181::PlayBackUrlRequest* /*request*/, ::GB28181::PlayBackUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PresetGo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PresetGo() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_PresetGo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetGo(::grpc::ServerContext* /*context*/, const ::GB28181::PresetGoRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PresetSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PresetSet() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_PresetSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetSet(::grpc::ServerContext* /*context*/, const ::GB28181::PresetSetRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PresetDel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PresetDel() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_PresetDel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetDel(::grpc::ServerContext* /*context*/, const ::GB28181::PresetDelRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PresetQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PresetQuery() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_PresetQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetQuery(::grpc::ServerContext* /*context*/, const ::GB28181::PresetQueryRequest* /*request*/, ::GB28181::PresetQueryReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetPreset() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_GetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::GetPresetRequest* /*request*/, ::GB28181::GetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_QueryRecord() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_QueryRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryRecord(::grpc::ServerContext* /*context*/, const ::GB28181::QueryRecordRequest* /*request*/, ::GB28181::QueryRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRecord() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::GB28181::GetRecordRequest* /*request*/, ::GB28181::GetRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PlayFast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PlayFast() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_PlayFast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlayFast(::grpc::ServerContext* /*context*/, const ::GB28181::PlayFastRequest* /*request*/, ::GB28181::PlayFastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PlaySlow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PlaySlow() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_PlaySlow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaySlow(::grpc::ServerContext* /*context*/, const ::GB28181::PlaySlowRequest* /*request*/, ::GB28181::PlaySlowReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Pause : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Pause() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_Pause() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Pause(::grpc::ServerContext* /*context*/, const ::GB28181::PauseRequest* /*request*/, ::GB28181::PauseReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Play : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Play() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_Play() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Play(::grpc::ServerContext* /*context*/, const ::GB28181::PlayRequest* /*request*/, ::GB28181::PlayReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Seek : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Seek() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_Seek() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Seek(::grpc::ServerContext* /*context*/, const ::GB28181::SeekRequest* /*request*/, ::GB28181::SeekReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GoForward : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GoForward() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_GoForward() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GoForward(::grpc::ServerContext* /*context*/, const ::GB28181::GoForwardRequest* /*request*/, ::GB28181::GoForwardReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopPlayRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopPlayRecord() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_StopPlayRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayRecord(::grpc::ServerContext* /*context*/, const ::GB28181::StopPlayRecordRequest* /*request*/, ::GB28181::StopPlayRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GoBack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GoBack() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_GoBack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GoBack(::grpc::ServerContext* /*context*/, const ::GB28181::GoBackRequest* /*request*/, ::GB28181::GoBackReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RecordDownload : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RecordDownload() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_RecordDownload() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RecordDownload(::grpc::ServerContext* /*context*/, const ::GB28181::RecordDownloadRequest* /*request*/, ::GB28181::RecordDownloadReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDeviceStatus() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceStatusRequest* /*request*/, ::GB28181::GetDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAllDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetAllDeviceStatus() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_GetAllDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetAllDeviceStatusRequest* /*request*/, ::GB28181::GetAllDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDeviceList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDeviceList() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_GetDeviceList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceList(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceListRequest* /*request*/, ::GB28181::GetDeviceListReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeviceReboot() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_DeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::DeviceRebootRequest* /*request*/, ::GB28181::DeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartBroadcast() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_StartBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StartBroadcastRequest* /*request*/, ::GB28181::StartBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopBroadcast() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_StopBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StopBroadcastRequest* /*request*/, ::GB28181::StopBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartTalk() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_StartTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StartTalkRequest* /*request*/, ::GB28181::StartTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopTalk() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_StopTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StopTalkRequest* /*request*/, ::GB28181::StopTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ServiceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ServiceStatus() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_ServiceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ServiceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::ServiceStatusRequest* /*request*/, ::GB28181::ServiceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifPtzMove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifPtzMove() {
      ::grpc::Service::MarkMethodGeneric(43);
    }
    ~WithGenericMethod_OnvifPtzMove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtzMove(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzMoveRequest* /*request*/, ::GB28181::OnvifPtzMoveReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifPtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifPtzStop() {
      ::grpc::Service::MarkMethodGeneric(44);
    }
    ~WithGenericMethod_OnvifPtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzStopRequest* /*request*/, ::GB28181::OnvifPtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifZoomIn() {
      ::grpc::Service::MarkMethodGeneric(45);
    }
    ~WithGenericMethod_OnvifZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomInRequest* /*request*/, ::GB28181::OnvifZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifZoomOut() {
      ::grpc::Service::MarkMethodGeneric(46);
    }
    ~WithGenericMethod_OnvifZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomOutRequest* /*request*/, ::GB28181::OnvifZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifZoomStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifZoomStop() {
      ::grpc::Service::MarkMethodGeneric(47);
    }
    ~WithGenericMethod_OnvifZoomStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomStopRequest* /*request*/, ::GB28181::OnvifZoomStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifFocusNear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifFocusNear() {
      ::grpc::Service::MarkMethodGeneric(48);
    }
    ~WithGenericMethod_OnvifFocusNear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusNear(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusNearRequest* /*request*/, ::GB28181::OnvifFocusNearReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifFocusFar : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifFocusFar() {
      ::grpc::Service::MarkMethodGeneric(49);
    }
    ~WithGenericMethod_OnvifFocusFar() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusFar(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusFarRequest* /*request*/, ::GB28181::OnvifFocusFarReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifFocusStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifFocusStop() {
      ::grpc::Service::MarkMethodGeneric(50);
    }
    ~WithGenericMethod_OnvifFocusStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusStopRequest* /*request*/, ::GB28181::OnvifFocusStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifPtz3D : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifPtz3D() {
      ::grpc::Service::MarkMethodGeneric(51);
    }
    ~WithGenericMethod_OnvifPtz3D() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtz3D(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtz3DRequest* /*request*/, ::GB28181::OnvifPtz3DReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifGetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifGetPreset() {
      ::grpc::Service::MarkMethodGeneric(52);
    }
    ~WithGenericMethod_OnvifGetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetPresetRequest* /*request*/, ::GB28181::OnvifGetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifGotoPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifGotoPreset() {
      ::grpc::Service::MarkMethodGeneric(53);
    }
    ~WithGenericMethod_OnvifGotoPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGotoPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGotoPresetRequest* /*request*/, ::GB28181::OnvifGotoPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifSetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifSetPreset() {
      ::grpc::Service::MarkMethodGeneric(54);
    }
    ~WithGenericMethod_OnvifSetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifSetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifSetPresetRequest* /*request*/, ::GB28181::OnvifSetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifDeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifDeviceReboot() {
      ::grpc::Service::MarkMethodGeneric(55);
    }
    ~WithGenericMethod_OnvifDeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifDeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifDeviceRebootRequest* /*request*/, ::GB28181::OnvifDeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifGetMainUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifGetMainUrl() {
      ::grpc::Service::MarkMethodGeneric(56);
    }
    ~WithGenericMethod_OnvifGetMainUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetMainUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetMainUrlRequest* /*request*/, ::GB28181::OnvifGetMainUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_OnvifGetSubUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_OnvifGetSubUrl() {
      ::grpc::Service::MarkMethodGeneric(57);
    }
    ~WithGenericMethod_OnvifGetSubUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetSubUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetSubUrlRequest* /*request*/, ::GB28181::OnvifGetSubUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_PtzCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PtzCommand() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_PtzCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzCommand(::grpc::ServerContext* /*context*/, const ::GB28181::PtzCommandRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzCommand(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PtzZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PtzZoomIn() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_PtzZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomInRequest* /*request*/, ::GB28181::PtzZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzZoomIn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PtzZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PtzZoomOut() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_PtzZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomOutRequest* /*request*/, ::GB28181::PtzZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzZoomOut(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PtzIrisBig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PtzIrisBig() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_PtzIrisBig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIrisBig(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisBigRequest* /*request*/, ::GB28181::PtzIrisBigReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzIrisBig(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PtzIrisSmall : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PtzIrisSmall() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_PtzIrisSmall() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIrisSmall(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisSmallRequest* /*request*/, ::GB28181::PtzIrisSmallReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzIrisSmall(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PtzFocusOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PtzFocusOut() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_PtzFocusOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzFocusOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusOutRequest* /*request*/, ::GB28181::PtzFocusOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzFocusOut(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PtzFocusIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PtzFocusIn() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_PtzFocusIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzFocusIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusInRequest* /*request*/, ::GB28181::PtzFocusInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzFocusIn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PtzIFStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PtzIFStop() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_PtzIFStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIFStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIFStopRequest* /*request*/, ::GB28181::PtzIFStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzIFStop(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PtzStop() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_PtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzStopRequest* /*request*/, ::GB28181::PtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPtzStop(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRealPlayUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRealPlayUrl() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetRealPlayUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealPlayUrl(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlRequest* /*request*/, ::GB28181::RealPlayUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRealPlayUrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRTMPUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRTMPUrl() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetRTMPUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRTMPUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlRequest* /*request*/, ::GB28181::GetRTMPUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRTMPUrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetHLSUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetHLSUrl() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetHLSUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHLSUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlRequest* /*request*/, ::GB28181::GetHLSUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHLSUrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRealPlayUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRealPlayUrlIn() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_GetRealPlayUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealPlayUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlInRequest* /*request*/, ::GB28181::RealPlayUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRealPlayUrlIn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRTMPUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRTMPUrlIn() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetRTMPUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRTMPUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlInRequest* /*request*/, ::GB28181::GetRTMPUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRTMPUrlIn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetHLSUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetHLSUrlIn() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetHLSUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHLSUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlInRequest* /*request*/, ::GB28181::GetHLSUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetHLSUrlIn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopVideoById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopVideoById() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_StopVideoById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopVideoById(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoByIdRequest* /*request*/, ::GB28181::StopVideoByIdReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopVideoById(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopVideoBySsrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopVideoBySsrc() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_StopVideoBySsrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopVideoBySsrc(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoBySsrcRequest* /*request*/, ::GB28181::StopVideoBySsrcReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopVideoBySsrc(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPlayBackUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPlayBackUrl() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetPlayBackUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPlayBackUrl(::grpc::ServerContext* /*context*/, const ::GB28181::PlayBackUrlRequest* /*request*/, ::GB28181::PlayBackUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPlayBackUrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PresetGo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PresetGo() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_PresetGo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetGo(::grpc::ServerContext* /*context*/, const ::GB28181::PresetGoRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPresetGo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PresetSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PresetSet() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_PresetSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetSet(::grpc::ServerContext* /*context*/, const ::GB28181::PresetSetRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPresetSet(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PresetDel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PresetDel() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_PresetDel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetDel(::grpc::ServerContext* /*context*/, const ::GB28181::PresetDelRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPresetDel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PresetQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PresetQuery() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_PresetQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetQuery(::grpc::ServerContext* /*context*/, const ::GB28181::PresetQueryRequest* /*request*/, ::GB28181::PresetQueryReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPresetQuery(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetPreset() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_GetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::GetPresetRequest* /*request*/, ::GB28181::GetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetPreset(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_QueryRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_QueryRecord() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_QueryRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryRecord(::grpc::ServerContext* /*context*/, const ::GB28181::QueryRecordRequest* /*request*/, ::GB28181::QueryRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryRecord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRecord() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::GB28181::GetRecordRequest* /*request*/, ::GB28181::GetRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PlayFast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PlayFast() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_PlayFast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlayFast(::grpc::ServerContext* /*context*/, const ::GB28181::PlayFastRequest* /*request*/, ::GB28181::PlayFastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlayFast(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PlaySlow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PlaySlow() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_PlaySlow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaySlow(::grpc::ServerContext* /*context*/, const ::GB28181::PlaySlowRequest* /*request*/, ::GB28181::PlaySlowReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlaySlow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Pause : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Pause() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_Pause() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Pause(::grpc::ServerContext* /*context*/, const ::GB28181::PauseRequest* /*request*/, ::GB28181::PauseReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPause(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Play : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Play() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_Play() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Play(::grpc::ServerContext* /*context*/, const ::GB28181::PlayRequest* /*request*/, ::GB28181::PlayReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlay(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Seek : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Seek() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_Seek() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Seek(::grpc::ServerContext* /*context*/, const ::GB28181::SeekRequest* /*request*/, ::GB28181::SeekReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSeek(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GoForward : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GoForward() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_GoForward() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GoForward(::grpc::ServerContext* /*context*/, const ::GB28181::GoForwardRequest* /*request*/, ::GB28181::GoForwardReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGoForward(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopPlayRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopPlayRecord() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_StopPlayRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayRecord(::grpc::ServerContext* /*context*/, const ::GB28181::StopPlayRecordRequest* /*request*/, ::GB28181::StopPlayRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopPlayRecord(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GoBack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GoBack() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_GoBack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GoBack(::grpc::ServerContext* /*context*/, const ::GB28181::GoBackRequest* /*request*/, ::GB28181::GoBackReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGoBack(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RecordDownload : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RecordDownload() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_RecordDownload() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RecordDownload(::grpc::ServerContext* /*context*/, const ::GB28181::RecordDownloadRequest* /*request*/, ::GB28181::RecordDownloadReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRecordDownload(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDeviceStatus() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceStatusRequest* /*request*/, ::GB28181::GetDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetAllDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetAllDeviceStatus() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_GetAllDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetAllDeviceStatusRequest* /*request*/, ::GB28181::GetAllDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAllDeviceStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDeviceList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDeviceList() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_GetDeviceList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceList(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceListRequest* /*request*/, ::GB28181::GetDeviceListReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeviceReboot() {
      ::grpc::Service::MarkMethodRaw(37);
    }
    ~WithRawMethod_DeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::DeviceRebootRequest* /*request*/, ::GB28181::DeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeviceReboot(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartBroadcast() {
      ::grpc::Service::MarkMethodRaw(38);
    }
    ~WithRawMethod_StartBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StartBroadcastRequest* /*request*/, ::GB28181::StartBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartBroadcast(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopBroadcast() {
      ::grpc::Service::MarkMethodRaw(39);
    }
    ~WithRawMethod_StopBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StopBroadcastRequest* /*request*/, ::GB28181::StopBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopBroadcast(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartTalk() {
      ::grpc::Service::MarkMethodRaw(40);
    }
    ~WithRawMethod_StartTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StartTalkRequest* /*request*/, ::GB28181::StartTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartTalk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopTalk() {
      ::grpc::Service::MarkMethodRaw(41);
    }
    ~WithRawMethod_StopTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StopTalkRequest* /*request*/, ::GB28181::StopTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopTalk(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ServiceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ServiceStatus() {
      ::grpc::Service::MarkMethodRaw(42);
    }
    ~WithRawMethod_ServiceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ServiceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::ServiceStatusRequest* /*request*/, ::GB28181::ServiceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestServiceStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifPtzMove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifPtzMove() {
      ::grpc::Service::MarkMethodRaw(43);
    }
    ~WithRawMethod_OnvifPtzMove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtzMove(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzMoveRequest* /*request*/, ::GB28181::OnvifPtzMoveReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifPtzMove(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifPtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifPtzStop() {
      ::grpc::Service::MarkMethodRaw(44);
    }
    ~WithRawMethod_OnvifPtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzStopRequest* /*request*/, ::GB28181::OnvifPtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifPtzStop(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifZoomIn() {
      ::grpc::Service::MarkMethodRaw(45);
    }
    ~WithRawMethod_OnvifZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomInRequest* /*request*/, ::GB28181::OnvifZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifZoomIn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifZoomOut() {
      ::grpc::Service::MarkMethodRaw(46);
    }
    ~WithRawMethod_OnvifZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomOutRequest* /*request*/, ::GB28181::OnvifZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifZoomOut(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifZoomStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifZoomStop() {
      ::grpc::Service::MarkMethodRaw(47);
    }
    ~WithRawMethod_OnvifZoomStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomStopRequest* /*request*/, ::GB28181::OnvifZoomStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifZoomStop(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifFocusNear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifFocusNear() {
      ::grpc::Service::MarkMethodRaw(48);
    }
    ~WithRawMethod_OnvifFocusNear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusNear(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusNearRequest* /*request*/, ::GB28181::OnvifFocusNearReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifFocusNear(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifFocusFar : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifFocusFar() {
      ::grpc::Service::MarkMethodRaw(49);
    }
    ~WithRawMethod_OnvifFocusFar() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusFar(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusFarRequest* /*request*/, ::GB28181::OnvifFocusFarReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifFocusFar(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifFocusStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifFocusStop() {
      ::grpc::Service::MarkMethodRaw(50);
    }
    ~WithRawMethod_OnvifFocusStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusStopRequest* /*request*/, ::GB28181::OnvifFocusStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifFocusStop(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifPtz3D : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifPtz3D() {
      ::grpc::Service::MarkMethodRaw(51);
    }
    ~WithRawMethod_OnvifPtz3D() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtz3D(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtz3DRequest* /*request*/, ::GB28181::OnvifPtz3DReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifPtz3D(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifGetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifGetPreset() {
      ::grpc::Service::MarkMethodRaw(52);
    }
    ~WithRawMethod_OnvifGetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetPresetRequest* /*request*/, ::GB28181::OnvifGetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifGetPreset(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifGotoPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifGotoPreset() {
      ::grpc::Service::MarkMethodRaw(53);
    }
    ~WithRawMethod_OnvifGotoPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGotoPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGotoPresetRequest* /*request*/, ::GB28181::OnvifGotoPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifGotoPreset(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifSetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifSetPreset() {
      ::grpc::Service::MarkMethodRaw(54);
    }
    ~WithRawMethod_OnvifSetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifSetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifSetPresetRequest* /*request*/, ::GB28181::OnvifSetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifSetPreset(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifDeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifDeviceReboot() {
      ::grpc::Service::MarkMethodRaw(55);
    }
    ~WithRawMethod_OnvifDeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifDeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifDeviceRebootRequest* /*request*/, ::GB28181::OnvifDeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifDeviceReboot(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifGetMainUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifGetMainUrl() {
      ::grpc::Service::MarkMethodRaw(56);
    }
    ~WithRawMethod_OnvifGetMainUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetMainUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetMainUrlRequest* /*request*/, ::GB28181::OnvifGetMainUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifGetMainUrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_OnvifGetSubUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_OnvifGetSubUrl() {
      ::grpc::Service::MarkMethodRaw(57);
    }
    ~WithRawMethod_OnvifGetSubUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetSubUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetSubUrlRequest* /*request*/, ::GB28181::OnvifGetSubUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestOnvifGetSubUrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PtzCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PtzCommand() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PtzCommand(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PtzCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzCommand(::grpc::ServerContext* /*context*/, const ::GB28181::PtzCommandRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzCommand(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzCommand(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PtzZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PtzZoomIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PtzZoomIn(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PtzZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomInRequest* /*request*/, ::GB28181::PtzZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzZoomIn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzZoomIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PtzZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PtzZoomOut() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PtzZoomOut(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PtzZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomOutRequest* /*request*/, ::GB28181::PtzZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzZoomOut(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzZoomOut(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PtzIrisBig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PtzIrisBig() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PtzIrisBig(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PtzIrisBig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIrisBig(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisBigRequest* /*request*/, ::GB28181::PtzIrisBigReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzIrisBig(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzIrisBig(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PtzIrisSmall : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PtzIrisSmall() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PtzIrisSmall(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PtzIrisSmall() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIrisSmall(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisSmallRequest* /*request*/, ::GB28181::PtzIrisSmallReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzIrisSmall(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzIrisSmall(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PtzFocusOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PtzFocusOut() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PtzFocusOut(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PtzFocusOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzFocusOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusOutRequest* /*request*/, ::GB28181::PtzFocusOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzFocusOut(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzFocusOut(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PtzFocusIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PtzFocusIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(6,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PtzFocusIn(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PtzFocusIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzFocusIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusInRequest* /*request*/, ::GB28181::PtzFocusInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzFocusIn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzFocusIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PtzIFStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PtzIFStop() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(7,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PtzIFStop(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PtzIFStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzIFStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIFStopRequest* /*request*/, ::GB28181::PtzIFStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzIFStop(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzIFStop(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PtzStop() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(8,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PtzStop(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzStopRequest* /*request*/, ::GB28181::PtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PtzStop(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PtzStop(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetRealPlayUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetRealPlayUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(9,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRealPlayUrl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetRealPlayUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealPlayUrl(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlRequest* /*request*/, ::GB28181::RealPlayUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRealPlayUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRealPlayUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetRTMPUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetRTMPUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(10,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRTMPUrl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetRTMPUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRTMPUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlRequest* /*request*/, ::GB28181::GetRTMPUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRTMPUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRTMPUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetHLSUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetHLSUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(11,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetHLSUrl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetHLSUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHLSUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlRequest* /*request*/, ::GB28181::GetHLSUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetHLSUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetHLSUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetRealPlayUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetRealPlayUrlIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(12,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRealPlayUrlIn(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetRealPlayUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRealPlayUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlInRequest* /*request*/, ::GB28181::RealPlayUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRealPlayUrlIn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRealPlayUrlIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetRTMPUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetRTMPUrlIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(13,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRTMPUrlIn(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetRTMPUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRTMPUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlInRequest* /*request*/, ::GB28181::GetRTMPUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRTMPUrlIn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRTMPUrlIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetHLSUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetHLSUrlIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(14,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetHLSUrlIn(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetHLSUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetHLSUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlInRequest* /*request*/, ::GB28181::GetHLSUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetHLSUrlIn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetHLSUrlIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopVideoById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopVideoById() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(15,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopVideoById(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopVideoById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopVideoById(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoByIdRequest* /*request*/, ::GB28181::StopVideoByIdReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopVideoById(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopVideoById(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopVideoBySsrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopVideoBySsrc() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(16,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopVideoBySsrc(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopVideoBySsrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopVideoBySsrc(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoBySsrcRequest* /*request*/, ::GB28181::StopVideoBySsrcReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopVideoBySsrc(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopVideoBySsrc(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetPlayBackUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetPlayBackUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(17,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPlayBackUrl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetPlayBackUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPlayBackUrl(::grpc::ServerContext* /*context*/, const ::GB28181::PlayBackUrlRequest* /*request*/, ::GB28181::PlayBackUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetPlayBackUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetPlayBackUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PresetGo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PresetGo() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(18,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PresetGo(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PresetGo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetGo(::grpc::ServerContext* /*context*/, const ::GB28181::PresetGoRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PresetGo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PresetGo(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PresetSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PresetSet() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(19,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PresetSet(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PresetSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetSet(::grpc::ServerContext* /*context*/, const ::GB28181::PresetSetRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PresetSet(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PresetSet(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PresetDel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PresetDel() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(20,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PresetDel(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PresetDel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetDel(::grpc::ServerContext* /*context*/, const ::GB28181::PresetDelRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PresetDel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PresetDel(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PresetQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PresetQuery() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(21,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PresetQuery(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PresetQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PresetQuery(::grpc::ServerContext* /*context*/, const ::GB28181::PresetQueryRequest* /*request*/, ::GB28181::PresetQueryReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PresetQuery(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PresetQuery(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetPreset() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(22,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetPreset(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::GetPresetRequest* /*request*/, ::GB28181::GetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetPreset(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetPreset(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_QueryRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_QueryRecord() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(23,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->QueryRecord(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_QueryRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryRecord(::grpc::ServerContext* /*context*/, const ::GB28181::QueryRecordRequest* /*request*/, ::GB28181::QueryRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* QueryRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* QueryRecord(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetRecord() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(24,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRecord(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::GB28181::GetRecordRequest* /*request*/, ::GB28181::GetRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetRecord(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PlayFast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PlayFast() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(25,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PlayFast(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PlayFast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlayFast(::grpc::ServerContext* /*context*/, const ::GB28181::PlayFastRequest* /*request*/, ::GB28181::PlayFastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PlayFast(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PlayFast(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PlaySlow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PlaySlow() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(26,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PlaySlow(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PlaySlow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaySlow(::grpc::ServerContext* /*context*/, const ::GB28181::PlaySlowRequest* /*request*/, ::GB28181::PlaySlowReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PlaySlow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PlaySlow(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Pause : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Pause() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(27,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Pause(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Pause() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Pause(::grpc::ServerContext* /*context*/, const ::GB28181::PauseRequest* /*request*/, ::GB28181::PauseReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Pause(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Pause(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Play : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Play() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(28,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Play(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Play() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Play(::grpc::ServerContext* /*context*/, const ::GB28181::PlayRequest* /*request*/, ::GB28181::PlayReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Play(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Play(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_Seek : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_Seek() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(29,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Seek(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_Seek() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Seek(::grpc::ServerContext* /*context*/, const ::GB28181::SeekRequest* /*request*/, ::GB28181::SeekReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* Seek(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* Seek(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GoForward : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GoForward() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(30,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GoForward(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GoForward() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GoForward(::grpc::ServerContext* /*context*/, const ::GB28181::GoForwardRequest* /*request*/, ::GB28181::GoForwardReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GoForward(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GoForward(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopPlayRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopPlayRecord() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(31,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopPlayRecord(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopPlayRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayRecord(::grpc::ServerContext* /*context*/, const ::GB28181::StopPlayRecordRequest* /*request*/, ::GB28181::StopPlayRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopPlayRecord(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopPlayRecord(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GoBack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GoBack() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(32,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GoBack(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GoBack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GoBack(::grpc::ServerContext* /*context*/, const ::GB28181::GoBackRequest* /*request*/, ::GB28181::GoBackReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GoBack(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GoBack(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_RecordDownload : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_RecordDownload() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(33,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RecordDownload(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_RecordDownload() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RecordDownload(::grpc::ServerContext* /*context*/, const ::GB28181::RecordDownloadRequest* /*request*/, ::GB28181::RecordDownloadReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* RecordDownload(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* RecordDownload(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetDeviceStatus() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(34,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDeviceStatus(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceStatusRequest* /*request*/, ::GB28181::GetDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetDeviceStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetDeviceStatus(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetAllDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetAllDeviceStatus() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(35,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetAllDeviceStatus(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetAllDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAllDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetAllDeviceStatusRequest* /*request*/, ::GB28181::GetAllDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetAllDeviceStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetAllDeviceStatus(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetDeviceList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetDeviceList() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(36,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDeviceList(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetDeviceList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceList(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceListRequest* /*request*/, ::GB28181::GetDeviceListReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetDeviceList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetDeviceList(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeviceReboot() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(37,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeviceReboot(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::DeviceRebootRequest* /*request*/, ::GB28181::DeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeviceReboot(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeviceReboot(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StartBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StartBroadcast() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(38,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartBroadcast(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StartBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StartBroadcastRequest* /*request*/, ::GB28181::StartBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartBroadcast(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartBroadcast(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopBroadcast() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(39,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopBroadcast(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StopBroadcastRequest* /*request*/, ::GB28181::StopBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopBroadcast(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopBroadcast(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StartTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StartTalk() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(40,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartTalk(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StartTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StartTalkRequest* /*request*/, ::GB28181::StartTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StartTalk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StartTalk(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_StopTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_StopTalk() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(41,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopTalk(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_StopTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StopTalkRequest* /*request*/, ::GB28181::StopTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* StopTalk(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* StopTalk(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ServiceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ServiceStatus() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(42,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ServiceStatus(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ServiceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ServiceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::ServiceStatusRequest* /*request*/, ::GB28181::ServiceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ServiceStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ServiceStatus(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifPtzMove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifPtzMove() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(43,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifPtzMove(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifPtzMove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtzMove(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzMoveRequest* /*request*/, ::GB28181::OnvifPtzMoveReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifPtzMove(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifPtzMove(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifPtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifPtzStop() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(44,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifPtzStop(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifPtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzStopRequest* /*request*/, ::GB28181::OnvifPtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifPtzStop(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifPtzStop(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifZoomIn() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(45,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifZoomIn(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomInRequest* /*request*/, ::GB28181::OnvifZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifZoomIn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifZoomIn(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifZoomOut() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(46,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifZoomOut(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomOutRequest* /*request*/, ::GB28181::OnvifZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifZoomOut(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifZoomOut(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifZoomStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifZoomStop() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(47,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifZoomStop(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifZoomStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifZoomStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomStopRequest* /*request*/, ::GB28181::OnvifZoomStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifZoomStop(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifZoomStop(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifFocusNear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifFocusNear() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(48,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifFocusNear(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifFocusNear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusNear(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusNearRequest* /*request*/, ::GB28181::OnvifFocusNearReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifFocusNear(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifFocusNear(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifFocusFar : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifFocusFar() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(49,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifFocusFar(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifFocusFar() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusFar(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusFarRequest* /*request*/, ::GB28181::OnvifFocusFarReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifFocusFar(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifFocusFar(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifFocusStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifFocusStop() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(50,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifFocusStop(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifFocusStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifFocusStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusStopRequest* /*request*/, ::GB28181::OnvifFocusStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifFocusStop(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifFocusStop(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifPtz3D : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifPtz3D() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(51,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifPtz3D(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifPtz3D() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifPtz3D(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtz3DRequest* /*request*/, ::GB28181::OnvifPtz3DReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifPtz3D(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifPtz3D(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifGetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifGetPreset() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(52,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifGetPreset(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifGetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetPresetRequest* /*request*/, ::GB28181::OnvifGetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifGetPreset(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifGetPreset(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifGotoPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifGotoPreset() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(53,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifGotoPreset(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifGotoPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGotoPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGotoPresetRequest* /*request*/, ::GB28181::OnvifGotoPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifGotoPreset(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifGotoPreset(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifSetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifSetPreset() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(54,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifSetPreset(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifSetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifSetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifSetPresetRequest* /*request*/, ::GB28181::OnvifSetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifSetPreset(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifSetPreset(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifDeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifDeviceReboot() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(55,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifDeviceReboot(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifDeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifDeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifDeviceRebootRequest* /*request*/, ::GB28181::OnvifDeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifDeviceReboot(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifDeviceReboot(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifGetMainUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifGetMainUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(56,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifGetMainUrl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifGetMainUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetMainUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetMainUrlRequest* /*request*/, ::GB28181::OnvifGetMainUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifGetMainUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifGetMainUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_OnvifGetSubUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_OnvifGetSubUrl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(57,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->OnvifGetSubUrl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_OnvifGetSubUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status OnvifGetSubUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetSubUrlRequest* /*request*/, ::GB28181::OnvifGetSubUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* OnvifGetSubUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* OnvifGetSubUrl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PtzCommand : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PtzCommand() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PtzCommandRequest, ::GB28181::ControlReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PtzCommandRequest, ::GB28181::ControlReply>* streamer) {
                       return this->StreamedPtzCommand(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PtzCommand() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PtzCommand(::grpc::ServerContext* /*context*/, const ::GB28181::PtzCommandRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPtzCommand(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PtzCommandRequest,::GB28181::ControlReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PtzZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PtzZoomIn() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PtzZoomInRequest, ::GB28181::PtzZoomInReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PtzZoomInRequest, ::GB28181::PtzZoomInReply>* streamer) {
                       return this->StreamedPtzZoomIn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PtzZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PtzZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomInRequest* /*request*/, ::GB28181::PtzZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPtzZoomIn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PtzZoomInRequest,::GB28181::PtzZoomInReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PtzZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PtzZoomOut() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PtzZoomOutRequest, ::GB28181::PtzZoomOutReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PtzZoomOutRequest, ::GB28181::PtzZoomOutReply>* streamer) {
                       return this->StreamedPtzZoomOut(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PtzZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PtzZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzZoomOutRequest* /*request*/, ::GB28181::PtzZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPtzZoomOut(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PtzZoomOutRequest,::GB28181::PtzZoomOutReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PtzIrisBig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PtzIrisBig() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PtzIrisBigRequest, ::GB28181::PtzIrisBigReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PtzIrisBigRequest, ::GB28181::PtzIrisBigReply>* streamer) {
                       return this->StreamedPtzIrisBig(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PtzIrisBig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PtzIrisBig(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisBigRequest* /*request*/, ::GB28181::PtzIrisBigReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPtzIrisBig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PtzIrisBigRequest,::GB28181::PtzIrisBigReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PtzIrisSmall : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PtzIrisSmall() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PtzIrisSmallRequest, ::GB28181::PtzIrisSmallReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PtzIrisSmallRequest, ::GB28181::PtzIrisSmallReply>* streamer) {
                       return this->StreamedPtzIrisSmall(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PtzIrisSmall() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PtzIrisSmall(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIrisSmallRequest* /*request*/, ::GB28181::PtzIrisSmallReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPtzIrisSmall(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PtzIrisSmallRequest,::GB28181::PtzIrisSmallReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PtzFocusOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PtzFocusOut() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PtzFocusOutRequest, ::GB28181::PtzFocusOutReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PtzFocusOutRequest, ::GB28181::PtzFocusOutReply>* streamer) {
                       return this->StreamedPtzFocusOut(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PtzFocusOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PtzFocusOut(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusOutRequest* /*request*/, ::GB28181::PtzFocusOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPtzFocusOut(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PtzFocusOutRequest,::GB28181::PtzFocusOutReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PtzFocusIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PtzFocusIn() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PtzFocusInRequest, ::GB28181::PtzFocusInReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PtzFocusInRequest, ::GB28181::PtzFocusInReply>* streamer) {
                       return this->StreamedPtzFocusIn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PtzFocusIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PtzFocusIn(::grpc::ServerContext* /*context*/, const ::GB28181::PtzFocusInRequest* /*request*/, ::GB28181::PtzFocusInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPtzFocusIn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PtzFocusInRequest,::GB28181::PtzFocusInReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PtzIFStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PtzIFStop() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PtzIFStopRequest, ::GB28181::PtzIFStopReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PtzIFStopRequest, ::GB28181::PtzIFStopReply>* streamer) {
                       return this->StreamedPtzIFStop(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PtzIFStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PtzIFStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzIFStopRequest* /*request*/, ::GB28181::PtzIFStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPtzIFStop(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PtzIFStopRequest,::GB28181::PtzIFStopReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PtzStop() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PtzStopRequest, ::GB28181::PtzStopReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PtzStopRequest, ::GB28181::PtzStopReply>* streamer) {
                       return this->StreamedPtzStop(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::PtzStopRequest* /*request*/, ::GB28181::PtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPtzStop(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PtzStopRequest,::GB28181::PtzStopReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRealPlayUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRealPlayUrl() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::RealPlayUrlRequest, ::GB28181::RealPlayUrlReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::RealPlayUrlRequest, ::GB28181::RealPlayUrlReply>* streamer) {
                       return this->StreamedGetRealPlayUrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRealPlayUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRealPlayUrl(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlRequest* /*request*/, ::GB28181::RealPlayUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRealPlayUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::RealPlayUrlRequest,::GB28181::RealPlayUrlReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRTMPUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRTMPUrl() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GetRTMPUrlRequest, ::GB28181::GetRTMPUrlReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GetRTMPUrlRequest, ::GB28181::GetRTMPUrlReply>* streamer) {
                       return this->StreamedGetRTMPUrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRTMPUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRTMPUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlRequest* /*request*/, ::GB28181::GetRTMPUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRTMPUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GetRTMPUrlRequest,::GB28181::GetRTMPUrlReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetHLSUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetHLSUrl() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GetHLSUrlRequest, ::GB28181::GetHLSUrlReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GetHLSUrlRequest, ::GB28181::GetHLSUrlReply>* streamer) {
                       return this->StreamedGetHLSUrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetHLSUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetHLSUrl(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlRequest* /*request*/, ::GB28181::GetHLSUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetHLSUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GetHLSUrlRequest,::GB28181::GetHLSUrlReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRealPlayUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRealPlayUrlIn() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::RealPlayUrlInRequest, ::GB28181::RealPlayUrlInReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::RealPlayUrlInRequest, ::GB28181::RealPlayUrlInReply>* streamer) {
                       return this->StreamedGetRealPlayUrlIn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRealPlayUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRealPlayUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::RealPlayUrlInRequest* /*request*/, ::GB28181::RealPlayUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRealPlayUrlIn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::RealPlayUrlInRequest,::GB28181::RealPlayUrlInReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRTMPUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRTMPUrlIn() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GetRTMPUrlInRequest, ::GB28181::GetRTMPUrlInReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GetRTMPUrlInRequest, ::GB28181::GetRTMPUrlInReply>* streamer) {
                       return this->StreamedGetRTMPUrlIn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRTMPUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRTMPUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetRTMPUrlInRequest* /*request*/, ::GB28181::GetRTMPUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRTMPUrlIn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GetRTMPUrlInRequest,::GB28181::GetRTMPUrlInReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetHLSUrlIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetHLSUrlIn() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GetHLSUrlInRequest, ::GB28181::GetHLSUrlInReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GetHLSUrlInRequest, ::GB28181::GetHLSUrlInReply>* streamer) {
                       return this->StreamedGetHLSUrlIn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetHLSUrlIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetHLSUrlIn(::grpc::ServerContext* /*context*/, const ::GB28181::GetHLSUrlInRequest* /*request*/, ::GB28181::GetHLSUrlInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetHLSUrlIn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GetHLSUrlInRequest,::GB28181::GetHLSUrlInReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopVideoById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopVideoById() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::StopVideoByIdRequest, ::GB28181::StopVideoByIdReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::StopVideoByIdRequest, ::GB28181::StopVideoByIdReply>* streamer) {
                       return this->StreamedStopVideoById(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopVideoById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopVideoById(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoByIdRequest* /*request*/, ::GB28181::StopVideoByIdReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopVideoById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::StopVideoByIdRequest,::GB28181::StopVideoByIdReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopVideoBySsrc : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopVideoBySsrc() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::StopVideoBySsrcRequest, ::GB28181::StopVideoBySsrcReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::StopVideoBySsrcRequest, ::GB28181::StopVideoBySsrcReply>* streamer) {
                       return this->StreamedStopVideoBySsrc(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopVideoBySsrc() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopVideoBySsrc(::grpc::ServerContext* /*context*/, const ::GB28181::StopVideoBySsrcRequest* /*request*/, ::GB28181::StopVideoBySsrcReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopVideoBySsrc(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::StopVideoBySsrcRequest,::GB28181::StopVideoBySsrcReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPlayBackUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPlayBackUrl() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PlayBackUrlRequest, ::GB28181::PlayBackUrlReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PlayBackUrlRequest, ::GB28181::PlayBackUrlReply>* streamer) {
                       return this->StreamedGetPlayBackUrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPlayBackUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPlayBackUrl(::grpc::ServerContext* /*context*/, const ::GB28181::PlayBackUrlRequest* /*request*/, ::GB28181::PlayBackUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPlayBackUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PlayBackUrlRequest,::GB28181::PlayBackUrlReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PresetGo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PresetGo() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PresetGoRequest, ::GB28181::ControlReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PresetGoRequest, ::GB28181::ControlReply>* streamer) {
                       return this->StreamedPresetGo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PresetGo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PresetGo(::grpc::ServerContext* /*context*/, const ::GB28181::PresetGoRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPresetGo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PresetGoRequest,::GB28181::ControlReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PresetSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PresetSet() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PresetSetRequest, ::GB28181::ControlReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PresetSetRequest, ::GB28181::ControlReply>* streamer) {
                       return this->StreamedPresetSet(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PresetSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PresetSet(::grpc::ServerContext* /*context*/, const ::GB28181::PresetSetRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPresetSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PresetSetRequest,::GB28181::ControlReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PresetDel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PresetDel() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PresetDelRequest, ::GB28181::ControlReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PresetDelRequest, ::GB28181::ControlReply>* streamer) {
                       return this->StreamedPresetDel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PresetDel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PresetDel(::grpc::ServerContext* /*context*/, const ::GB28181::PresetDelRequest* /*request*/, ::GB28181::ControlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPresetDel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PresetDelRequest,::GB28181::ControlReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PresetQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PresetQuery() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PresetQueryRequest, ::GB28181::PresetQueryReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PresetQueryRequest, ::GB28181::PresetQueryReply>* streamer) {
                       return this->StreamedPresetQuery(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PresetQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PresetQuery(::grpc::ServerContext* /*context*/, const ::GB28181::PresetQueryRequest* /*request*/, ::GB28181::PresetQueryReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPresetQuery(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PresetQueryRequest,::GB28181::PresetQueryReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetPreset() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GetPresetRequest, ::GB28181::GetPresetReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GetPresetRequest, ::GB28181::GetPresetReply>* streamer) {
                       return this->StreamedGetPreset(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::GetPresetRequest* /*request*/, ::GB28181::GetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetPreset(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GetPresetRequest,::GB28181::GetPresetReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_QueryRecord() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::QueryRecordRequest, ::GB28181::QueryRecordReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::QueryRecordRequest, ::GB28181::QueryRecordReply>* streamer) {
                       return this->StreamedQueryRecord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_QueryRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryRecord(::grpc::ServerContext* /*context*/, const ::GB28181::QueryRecordRequest* /*request*/, ::GB28181::QueryRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryRecord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::QueryRecordRequest,::GB28181::QueryRecordReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRecord() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GetRecordRequest, ::GB28181::GetRecordReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GetRecordRequest, ::GB28181::GetRecordReply>* streamer) {
                       return this->StreamedGetRecord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRecord(::grpc::ServerContext* /*context*/, const ::GB28181::GetRecordRequest* /*request*/, ::GB28181::GetRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRecord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GetRecordRequest,::GB28181::GetRecordReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PlayFast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PlayFast() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PlayFastRequest, ::GB28181::PlayFastReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PlayFastRequest, ::GB28181::PlayFastReply>* streamer) {
                       return this->StreamedPlayFast(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PlayFast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PlayFast(::grpc::ServerContext* /*context*/, const ::GB28181::PlayFastRequest* /*request*/, ::GB28181::PlayFastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPlayFast(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PlayFastRequest,::GB28181::PlayFastReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PlaySlow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PlaySlow() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PlaySlowRequest, ::GB28181::PlaySlowReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PlaySlowRequest, ::GB28181::PlaySlowReply>* streamer) {
                       return this->StreamedPlaySlow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PlaySlow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PlaySlow(::grpc::ServerContext* /*context*/, const ::GB28181::PlaySlowRequest* /*request*/, ::GB28181::PlaySlowReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPlaySlow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PlaySlowRequest,::GB28181::PlaySlowReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Pause : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Pause() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PauseRequest, ::GB28181::PauseReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PauseRequest, ::GB28181::PauseReply>* streamer) {
                       return this->StreamedPause(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Pause() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Pause(::grpc::ServerContext* /*context*/, const ::GB28181::PauseRequest* /*request*/, ::GB28181::PauseReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPause(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PauseRequest,::GB28181::PauseReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Play : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Play() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::PlayRequest, ::GB28181::PlayReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::PlayRequest, ::GB28181::PlayReply>* streamer) {
                       return this->StreamedPlay(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Play() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Play(::grpc::ServerContext* /*context*/, const ::GB28181::PlayRequest* /*request*/, ::GB28181::PlayReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPlay(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::PlayRequest,::GB28181::PlayReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Seek : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Seek() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::SeekRequest, ::GB28181::SeekReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::SeekRequest, ::GB28181::SeekReply>* streamer) {
                       return this->StreamedSeek(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Seek() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Seek(::grpc::ServerContext* /*context*/, const ::GB28181::SeekRequest* /*request*/, ::GB28181::SeekReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSeek(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::SeekRequest,::GB28181::SeekReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GoForward : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GoForward() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GoForwardRequest, ::GB28181::GoForwardReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GoForwardRequest, ::GB28181::GoForwardReply>* streamer) {
                       return this->StreamedGoForward(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GoForward() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GoForward(::grpc::ServerContext* /*context*/, const ::GB28181::GoForwardRequest* /*request*/, ::GB28181::GoForwardReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGoForward(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GoForwardRequest,::GB28181::GoForwardReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopPlayRecord : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopPlayRecord() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::StopPlayRecordRequest, ::GB28181::StopPlayRecordReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::StopPlayRecordRequest, ::GB28181::StopPlayRecordReply>* streamer) {
                       return this->StreamedStopPlayRecord(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopPlayRecord() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopPlayRecord(::grpc::ServerContext* /*context*/, const ::GB28181::StopPlayRecordRequest* /*request*/, ::GB28181::StopPlayRecordReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopPlayRecord(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::StopPlayRecordRequest,::GB28181::StopPlayRecordReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GoBack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GoBack() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GoBackRequest, ::GB28181::GoBackReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GoBackRequest, ::GB28181::GoBackReply>* streamer) {
                       return this->StreamedGoBack(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GoBack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GoBack(::grpc::ServerContext* /*context*/, const ::GB28181::GoBackRequest* /*request*/, ::GB28181::GoBackReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGoBack(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GoBackRequest,::GB28181::GoBackReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RecordDownload : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RecordDownload() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::RecordDownloadRequest, ::GB28181::RecordDownloadReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::RecordDownloadRequest, ::GB28181::RecordDownloadReply>* streamer) {
                       return this->StreamedRecordDownload(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RecordDownload() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RecordDownload(::grpc::ServerContext* /*context*/, const ::GB28181::RecordDownloadRequest* /*request*/, ::GB28181::RecordDownloadReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRecordDownload(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::RecordDownloadRequest,::GB28181::RecordDownloadReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDeviceStatus() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GetDeviceStatusRequest, ::GB28181::GetDeviceStatusReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GetDeviceStatusRequest, ::GB28181::GetDeviceStatusReply>* streamer) {
                       return this->StreamedGetDeviceStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceStatusRequest* /*request*/, ::GB28181::GetDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDeviceStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GetDeviceStatusRequest,::GB28181::GetDeviceStatusReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAllDeviceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetAllDeviceStatus() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GetAllDeviceStatusRequest, ::GB28181::GetAllDeviceStatusReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GetAllDeviceStatusRequest, ::GB28181::GetAllDeviceStatusReply>* streamer) {
                       return this->StreamedGetAllDeviceStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetAllDeviceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAllDeviceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::GetAllDeviceStatusRequest* /*request*/, ::GB28181::GetAllDeviceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAllDeviceStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GetAllDeviceStatusRequest,::GB28181::GetAllDeviceStatusReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDeviceList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDeviceList() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::GetDeviceListRequest, ::GB28181::GetDeviceListReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::GetDeviceListRequest, ::GB28181::GetDeviceListReply>* streamer) {
                       return this->StreamedGetDeviceList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDeviceList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDeviceList(::grpc::ServerContext* /*context*/, const ::GB28181::GetDeviceListRequest* /*request*/, ::GB28181::GetDeviceListReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDeviceList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::GetDeviceListRequest,::GB28181::GetDeviceListReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeviceReboot() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::DeviceRebootRequest, ::GB28181::DeviceRebootReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::DeviceRebootRequest, ::GB28181::DeviceRebootReply>* streamer) {
                       return this->StreamedDeviceReboot(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::DeviceRebootRequest* /*request*/, ::GB28181::DeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeviceReboot(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::DeviceRebootRequest,::GB28181::DeviceRebootReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartBroadcast() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::StartBroadcastRequest, ::GB28181::StartBroadcastReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::StartBroadcastRequest, ::GB28181::StartBroadcastReply>* streamer) {
                       return this->StreamedStartBroadcast(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StartBroadcastRequest* /*request*/, ::GB28181::StartBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartBroadcast(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::StartBroadcastRequest,::GB28181::StartBroadcastReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopBroadcast : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopBroadcast() {
      ::grpc::Service::MarkMethodStreamed(39,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::StopBroadcastRequest, ::GB28181::StopBroadcastReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::StopBroadcastRequest, ::GB28181::StopBroadcastReply>* streamer) {
                       return this->StreamedStopBroadcast(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopBroadcast() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopBroadcast(::grpc::ServerContext* /*context*/, const ::GB28181::StopBroadcastRequest* /*request*/, ::GB28181::StopBroadcastReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopBroadcast(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::StopBroadcastRequest,::GB28181::StopBroadcastReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartTalk() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::StartTalkRequest, ::GB28181::StartTalkReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::StartTalkRequest, ::GB28181::StartTalkReply>* streamer) {
                       return this->StreamedStartTalk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StartTalkRequest* /*request*/, ::GB28181::StartTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartTalk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::StartTalkRequest,::GB28181::StartTalkReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopTalk : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopTalk() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::StopTalkRequest, ::GB28181::StopTalkReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::StopTalkRequest, ::GB28181::StopTalkReply>* streamer) {
                       return this->StreamedStopTalk(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopTalk() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopTalk(::grpc::ServerContext* /*context*/, const ::GB28181::StopTalkRequest* /*request*/, ::GB28181::StopTalkReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopTalk(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::StopTalkRequest,::GB28181::StopTalkReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ServiceStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ServiceStatus() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::ServiceStatusRequest, ::GB28181::ServiceStatusReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::ServiceStatusRequest, ::GB28181::ServiceStatusReply>* streamer) {
                       return this->StreamedServiceStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ServiceStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ServiceStatus(::grpc::ServerContext* /*context*/, const ::GB28181::ServiceStatusRequest* /*request*/, ::GB28181::ServiceStatusReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedServiceStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::ServiceStatusRequest,::GB28181::ServiceStatusReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifPtzMove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifPtzMove() {
      ::grpc::Service::MarkMethodStreamed(43,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifPtzMoveRequest, ::GB28181::OnvifPtzMoveReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifPtzMoveRequest, ::GB28181::OnvifPtzMoveReply>* streamer) {
                       return this->StreamedOnvifPtzMove(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifPtzMove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifPtzMove(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzMoveRequest* /*request*/, ::GB28181::OnvifPtzMoveReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifPtzMove(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifPtzMoveRequest,::GB28181::OnvifPtzMoveReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifPtzStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifPtzStop() {
      ::grpc::Service::MarkMethodStreamed(44,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifPtzStopRequest, ::GB28181::OnvifPtzStopReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifPtzStopRequest, ::GB28181::OnvifPtzStopReply>* streamer) {
                       return this->StreamedOnvifPtzStop(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifPtzStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifPtzStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtzStopRequest* /*request*/, ::GB28181::OnvifPtzStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifPtzStop(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifPtzStopRequest,::GB28181::OnvifPtzStopReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifZoomIn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifZoomIn() {
      ::grpc::Service::MarkMethodStreamed(45,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifZoomInRequest, ::GB28181::OnvifZoomInReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifZoomInRequest, ::GB28181::OnvifZoomInReply>* streamer) {
                       return this->StreamedOnvifZoomIn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifZoomIn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifZoomIn(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomInRequest* /*request*/, ::GB28181::OnvifZoomInReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifZoomIn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifZoomInRequest,::GB28181::OnvifZoomInReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifZoomOut : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifZoomOut() {
      ::grpc::Service::MarkMethodStreamed(46,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifZoomOutRequest, ::GB28181::OnvifZoomOutReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifZoomOutRequest, ::GB28181::OnvifZoomOutReply>* streamer) {
                       return this->StreamedOnvifZoomOut(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifZoomOut() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifZoomOut(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomOutRequest* /*request*/, ::GB28181::OnvifZoomOutReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifZoomOut(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifZoomOutRequest,::GB28181::OnvifZoomOutReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifZoomStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifZoomStop() {
      ::grpc::Service::MarkMethodStreamed(47,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifZoomStopRequest, ::GB28181::OnvifZoomStopReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifZoomStopRequest, ::GB28181::OnvifZoomStopReply>* streamer) {
                       return this->StreamedOnvifZoomStop(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifZoomStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifZoomStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifZoomStopRequest* /*request*/, ::GB28181::OnvifZoomStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifZoomStop(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifZoomStopRequest,::GB28181::OnvifZoomStopReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifFocusNear : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifFocusNear() {
      ::grpc::Service::MarkMethodStreamed(48,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifFocusNearRequest, ::GB28181::OnvifFocusNearReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifFocusNearRequest, ::GB28181::OnvifFocusNearReply>* streamer) {
                       return this->StreamedOnvifFocusNear(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifFocusNear() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifFocusNear(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusNearRequest* /*request*/, ::GB28181::OnvifFocusNearReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifFocusNear(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifFocusNearRequest,::GB28181::OnvifFocusNearReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifFocusFar : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifFocusFar() {
      ::grpc::Service::MarkMethodStreamed(49,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifFocusFarRequest, ::GB28181::OnvifFocusFarReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifFocusFarRequest, ::GB28181::OnvifFocusFarReply>* streamer) {
                       return this->StreamedOnvifFocusFar(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifFocusFar() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifFocusFar(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusFarRequest* /*request*/, ::GB28181::OnvifFocusFarReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifFocusFar(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifFocusFarRequest,::GB28181::OnvifFocusFarReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifFocusStop : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifFocusStop() {
      ::grpc::Service::MarkMethodStreamed(50,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifFocusStopRequest, ::GB28181::OnvifFocusStopReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifFocusStopRequest, ::GB28181::OnvifFocusStopReply>* streamer) {
                       return this->StreamedOnvifFocusStop(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifFocusStop() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifFocusStop(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifFocusStopRequest* /*request*/, ::GB28181::OnvifFocusStopReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifFocusStop(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifFocusStopRequest,::GB28181::OnvifFocusStopReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifPtz3D : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifPtz3D() {
      ::grpc::Service::MarkMethodStreamed(51,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifPtz3DRequest, ::GB28181::OnvifPtz3DReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifPtz3DRequest, ::GB28181::OnvifPtz3DReply>* streamer) {
                       return this->StreamedOnvifPtz3D(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifPtz3D() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifPtz3D(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifPtz3DRequest* /*request*/, ::GB28181::OnvifPtz3DReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifPtz3D(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifPtz3DRequest,::GB28181::OnvifPtz3DReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifGetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifGetPreset() {
      ::grpc::Service::MarkMethodStreamed(52,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifGetPresetRequest, ::GB28181::OnvifGetPresetReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifGetPresetRequest, ::GB28181::OnvifGetPresetReply>* streamer) {
                       return this->StreamedOnvifGetPreset(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifGetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifGetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetPresetRequest* /*request*/, ::GB28181::OnvifGetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifGetPreset(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifGetPresetRequest,::GB28181::OnvifGetPresetReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifGotoPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifGotoPreset() {
      ::grpc::Service::MarkMethodStreamed(53,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifGotoPresetRequest, ::GB28181::OnvifGotoPresetReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifGotoPresetRequest, ::GB28181::OnvifGotoPresetReply>* streamer) {
                       return this->StreamedOnvifGotoPreset(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifGotoPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifGotoPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGotoPresetRequest* /*request*/, ::GB28181::OnvifGotoPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifGotoPreset(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifGotoPresetRequest,::GB28181::OnvifGotoPresetReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifSetPreset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifSetPreset() {
      ::grpc::Service::MarkMethodStreamed(54,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifSetPresetRequest, ::GB28181::OnvifSetPresetReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifSetPresetRequest, ::GB28181::OnvifSetPresetReply>* streamer) {
                       return this->StreamedOnvifSetPreset(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifSetPreset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifSetPreset(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifSetPresetRequest* /*request*/, ::GB28181::OnvifSetPresetReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifSetPreset(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifSetPresetRequest,::GB28181::OnvifSetPresetReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifDeviceReboot : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifDeviceReboot() {
      ::grpc::Service::MarkMethodStreamed(55,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifDeviceRebootRequest, ::GB28181::OnvifDeviceRebootReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifDeviceRebootRequest, ::GB28181::OnvifDeviceRebootReply>* streamer) {
                       return this->StreamedOnvifDeviceReboot(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifDeviceReboot() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifDeviceReboot(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifDeviceRebootRequest* /*request*/, ::GB28181::OnvifDeviceRebootReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifDeviceReboot(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifDeviceRebootRequest,::GB28181::OnvifDeviceRebootReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifGetMainUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifGetMainUrl() {
      ::grpc::Service::MarkMethodStreamed(56,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifGetMainUrlRequest, ::GB28181::OnvifGetMainUrlReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifGetMainUrlRequest, ::GB28181::OnvifGetMainUrlReply>* streamer) {
                       return this->StreamedOnvifGetMainUrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifGetMainUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifGetMainUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetMainUrlRequest* /*request*/, ::GB28181::OnvifGetMainUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifGetMainUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifGetMainUrlRequest,::GB28181::OnvifGetMainUrlReply>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_OnvifGetSubUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_OnvifGetSubUrl() {
      ::grpc::Service::MarkMethodStreamed(57,
        new ::grpc::internal::StreamedUnaryHandler<
          ::GB28181::OnvifGetSubUrlRequest, ::GB28181::OnvifGetSubUrlReply>(
            [this](::grpc_impl::ServerContext* context,
                   ::grpc_impl::ServerUnaryStreamer<
                     ::GB28181::OnvifGetSubUrlRequest, ::GB28181::OnvifGetSubUrlReply>* streamer) {
                       return this->StreamedOnvifGetSubUrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_OnvifGetSubUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status OnvifGetSubUrl(::grpc::ServerContext* /*context*/, const ::GB28181::OnvifGetSubUrlRequest* /*request*/, ::GB28181::OnvifGetSubUrlReply* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedOnvifGetSubUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::GB28181::OnvifGetSubUrlRequest,::GB28181::OnvifGetSubUrlReply>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_PtzCommand<WithStreamedUnaryMethod_PtzZoomIn<WithStreamedUnaryMethod_PtzZoomOut<WithStreamedUnaryMethod_PtzIrisBig<WithStreamedUnaryMethod_PtzIrisSmall<WithStreamedUnaryMethod_PtzFocusOut<WithStreamedUnaryMethod_PtzFocusIn<WithStreamedUnaryMethod_PtzIFStop<WithStreamedUnaryMethod_PtzStop<WithStreamedUnaryMethod_GetRealPlayUrl<WithStreamedUnaryMethod_GetRTMPUrl<WithStreamedUnaryMethod_GetHLSUrl<WithStreamedUnaryMethod_GetRealPlayUrlIn<WithStreamedUnaryMethod_GetRTMPUrlIn<WithStreamedUnaryMethod_GetHLSUrlIn<WithStreamedUnaryMethod_StopVideoById<WithStreamedUnaryMethod_StopVideoBySsrc<WithStreamedUnaryMethod_GetPlayBackUrl<WithStreamedUnaryMethod_PresetGo<WithStreamedUnaryMethod_PresetSet<WithStreamedUnaryMethod_PresetDel<WithStreamedUnaryMethod_PresetQuery<WithStreamedUnaryMethod_GetPreset<WithStreamedUnaryMethod_QueryRecord<WithStreamedUnaryMethod_GetRecord<WithStreamedUnaryMethod_PlayFast<WithStreamedUnaryMethod_PlaySlow<WithStreamedUnaryMethod_Pause<WithStreamedUnaryMethod_Play<WithStreamedUnaryMethod_Seek<WithStreamedUnaryMethod_GoForward<WithStreamedUnaryMethod_StopPlayRecord<WithStreamedUnaryMethod_GoBack<WithStreamedUnaryMethod_RecordDownload<WithStreamedUnaryMethod_GetDeviceStatus<WithStreamedUnaryMethod_GetAllDeviceStatus<WithStreamedUnaryMethod_GetDeviceList<WithStreamedUnaryMethod_DeviceReboot<WithStreamedUnaryMethod_StartBroadcast<WithStreamedUnaryMethod_StopBroadcast<WithStreamedUnaryMethod_StartTalk<WithStreamedUnaryMethod_StopTalk<WithStreamedUnaryMethod_ServiceStatus<WithStreamedUnaryMethod_OnvifPtzMove<WithStreamedUnaryMethod_OnvifPtzStop<WithStreamedUnaryMethod_OnvifZoomIn<WithStreamedUnaryMethod_OnvifZoomOut<WithStreamedUnaryMethod_OnvifZoomStop<WithStreamedUnaryMethod_OnvifFocusNear<WithStreamedUnaryMethod_OnvifFocusFar<WithStreamedUnaryMethod_OnvifFocusStop<WithStreamedUnaryMethod_OnvifPtz3D<WithStreamedUnaryMethod_OnvifGetPreset<WithStreamedUnaryMethod_OnvifGotoPreset<WithStreamedUnaryMethod_OnvifSetPreset<WithStreamedUnaryMethod_OnvifDeviceReboot<WithStreamedUnaryMethod_OnvifGetMainUrl<WithStreamedUnaryMethod_OnvifGetSubUrl<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_PtzCommand<WithStreamedUnaryMethod_PtzZoomIn<WithStreamedUnaryMethod_PtzZoomOut<WithStreamedUnaryMethod_PtzIrisBig<WithStreamedUnaryMethod_PtzIrisSmall<WithStreamedUnaryMethod_PtzFocusOut<WithStreamedUnaryMethod_PtzFocusIn<WithStreamedUnaryMethod_PtzIFStop<WithStreamedUnaryMethod_PtzStop<WithStreamedUnaryMethod_GetRealPlayUrl<WithStreamedUnaryMethod_GetRTMPUrl<WithStreamedUnaryMethod_GetHLSUrl<WithStreamedUnaryMethod_GetRealPlayUrlIn<WithStreamedUnaryMethod_GetRTMPUrlIn<WithStreamedUnaryMethod_GetHLSUrlIn<WithStreamedUnaryMethod_StopVideoById<WithStreamedUnaryMethod_StopVideoBySsrc<WithStreamedUnaryMethod_GetPlayBackUrl<WithStreamedUnaryMethod_PresetGo<WithStreamedUnaryMethod_PresetSet<WithStreamedUnaryMethod_PresetDel<WithStreamedUnaryMethod_PresetQuery<WithStreamedUnaryMethod_GetPreset<WithStreamedUnaryMethod_QueryRecord<WithStreamedUnaryMethod_GetRecord<WithStreamedUnaryMethod_PlayFast<WithStreamedUnaryMethod_PlaySlow<WithStreamedUnaryMethod_Pause<WithStreamedUnaryMethod_Play<WithStreamedUnaryMethod_Seek<WithStreamedUnaryMethod_GoForward<WithStreamedUnaryMethod_StopPlayRecord<WithStreamedUnaryMethod_GoBack<WithStreamedUnaryMethod_RecordDownload<WithStreamedUnaryMethod_GetDeviceStatus<WithStreamedUnaryMethod_GetAllDeviceStatus<WithStreamedUnaryMethod_GetDeviceList<WithStreamedUnaryMethod_DeviceReboot<WithStreamedUnaryMethod_StartBroadcast<WithStreamedUnaryMethod_StopBroadcast<WithStreamedUnaryMethod_StartTalk<WithStreamedUnaryMethod_StopTalk<WithStreamedUnaryMethod_ServiceStatus<WithStreamedUnaryMethod_OnvifPtzMove<WithStreamedUnaryMethod_OnvifPtzStop<WithStreamedUnaryMethod_OnvifZoomIn<WithStreamedUnaryMethod_OnvifZoomOut<WithStreamedUnaryMethod_OnvifZoomStop<WithStreamedUnaryMethod_OnvifFocusNear<WithStreamedUnaryMethod_OnvifFocusFar<WithStreamedUnaryMethod_OnvifFocusStop<WithStreamedUnaryMethod_OnvifPtz3D<WithStreamedUnaryMethod_OnvifGetPreset<WithStreamedUnaryMethod_OnvifGotoPreset<WithStreamedUnaryMethod_OnvifSetPreset<WithStreamedUnaryMethod_OnvifDeviceReboot<WithStreamedUnaryMethod_OnvifGetMainUrl<WithStreamedUnaryMethod_OnvifGetSubUrl<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace GB28181


#endif  // GRPC_gb28181_2eproto__INCLUDED
